<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn.mlw"/>
<theory name="Horn">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="29958"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28303"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="28821"/></proof>
 </goal>
 <goal name="tdiffbot" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="27327"/></proof>
 </goal>
 <goal name="aux&#39;vc" expl="VC for aux">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="496682"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="197919"/></proof>
 <transf name="split_vc" >
  <goal name="aux&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="428018"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="valid" time="0.17" steps="30474"/></proof>
  </goal>
  <goal name="aux&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="30464"/></proof>
  </goal>
  <goal name="aux&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="28541"/></proof>
  </goal>
  <goal name="aux&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="433033"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="188412"/></proof>
  <transf name="split_vc" >
   <goal name="aux&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="453568"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="valid" time="0.11" steps="30757"/></proof>
   </goal>
   <goal name="aux&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="440637"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="valid" time="0.11" steps="28216"/></proof>
   </goal>
   <goal name="aux&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="440173"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="valid" time="0.12" steps="28280"/></proof>
   </goal>
   <goal name="aux&#39;vc.3.3" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="904967"/></proof>
   <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1276540"/></proof>
   <transf name="subst_all" >
    <goal name="aux&#39;vc.3.3.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="599836"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="225884"/></proof>
    <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="f">
     <goal name="aux&#39;vc.3.3.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="602954"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="207105"/></proof>
     <transf name="eliminate_let" >
      <goal name="aux&#39;vc.3.3.0.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="601021"/></proof>
      <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="240128"/></proof>
      <transf name="compute_in_goal" >
       <goal name="aux&#39;vc.3.3.0.0.0.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1062794"/></proof>
       <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="240163"/></proof>
       <transf name="assert" arg1="(forall t. t &lt;&gt; bot -&gt; t = top)">
        <goal name="aux&#39;vc.3.3.0.0.0.0.0" expl="asserted formula">
        <proof prover="0"><result status="timeout" time="1.00" steps="1297806"/></proof>
        <proof prover="1"><result status="timeout" time="1.00"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="151584"/></proof>
        </goal>
        <goal name="aux&#39;vc.3.3.0.0.0.0.1" expl="postcondition">
        <proof prover="0"><result status="timeout" time="1.00" steps="1198546"/></proof>
        <proof prover="1"><result status="timeout" time="1.00"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="236567"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty">
 <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="30788"/></proof>
 </goal>
 <goal name="union_eval_samesingleton">
 <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="33763"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="447486"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.50" steps="73152"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation">
 <proof prover="1" obsolete="true"><result status="valid" time="0.24" steps="657"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144491"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation">
 <transf name="split_vc" >
  <goal name="convertAFtoPL_evaluation.0">
  <transf name="destruct_term" arg1="phi">
   <goal name="convertAFtoPL_evaluation.0.0">
   <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="26020"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.1">
   <proof prover="1" obsolete="true"><result status="valid" time="0.02" steps="24"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144362"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.2">
   <proof prover="2" obsolete="true"><result status="valid" time="0.07" steps="29712"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL">
 <transf name="split_vc" >
  <goal name="PLtoAF_AFtoPL.0">
  <transf name="destruct_term" arg1="x">
   <goal name="PLtoAF_AFtoPL.0.0">
   <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="25780"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.1">
   <proof prover="1" obsolete="true"><result status="valid" time="0.02" steps="22"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="261007"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.2">
   <proof prover="2" obsolete="true"><result status="valid" time="0.07" steps="29205"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="add_then_mem">
 <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="31267"/></proof>
 </goal>
 <goal name="pp_same_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1690004"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="46329"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="512850"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131220"/></proof>
 <transf name="split_vc" >
  <goal name="eval_equivalent&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="30150"/></proof>
  </goal>
  <goal name="eval_equivalent&#39;vc.1" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="30372"/></proof>
  </goal>
  <goal name="eval_equivalent&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1503200"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136461"/></proof>
  <transf name="split_vc" >
   <goal name="eval_equivalent&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2257915"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="30924"/></proof>
   </goal>
   <goal name="eval_equivalent&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2928001"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="34450"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="32762"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList">
 <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="35107"/></proof>
 </goal>
</theory>
</file>
</why3session>
