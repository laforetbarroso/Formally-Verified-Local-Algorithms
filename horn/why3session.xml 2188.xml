<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="horn.mlw"/>
<theory name="Horn">
 <goal name="eval_setconjunction&#39;vc" expl="VC for eval_setconjunction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_setconjunction&#39;vc.0" expl="precondition">
  <proof prover="2"><result status="valid" time="0.10" steps="23084"/></proof>
  </goal>
  <goal name="eval_setconjunction&#39;vc.1" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.15" steps="28202"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF">
 <proof prover="2"><result status="valid" time="0.11" steps="27993"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="valid" time="0.13" steps="27701"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation">
 <proof prover="1"><result status="valid" time="0.24" steps="641"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="136519"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL">
 <proof prover="2"><result status="valid" time="0.11" steps="28239"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="807471"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1064418"/></proof>
 <transf name="split_vc" >
  <goal name="convertAFtoPL_evaluation.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="774534"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119232"/></proof>
  <transf name="destruct_term" arg1="phi">
   <goal name="convertAFtoPL_evaluation.0.0">
   <proof prover="2"><result status="valid" time="0.14" steps="28321"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.1">
   <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="140698"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.2">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="775070"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="valid" time="0.07" steps="24743"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="774866"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="258873"/></proof>
 <transf name="split_vc" >
  <goal name="PLtoAF_AFtoPL.0">
  <proof prover="0"><result status="timeout" time="1.00" steps="774869"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="258896"/></proof>
  <transf name="destruct_term" arg1="x">
   <goal name="PLtoAF_AFtoPL.0.0">
   <proof prover="2"><result status="valid" time="0.14" steps="27814"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.1">
   <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="254831"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.2">
   <proof prover="2"><result status="valid" time="0.07" steps="24503"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="add_then_mem">
 <proof prover="2"><result status="valid" time="0.13" steps="29911"/></proof>
 </goal>
 <goal name="convertConjunctionToSet&#39;vc" expl="VC for convertConjunctionToSet">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1941887"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132774"/></proof>
 <transf name="split_vc" >
  <goal name="convertConjunctionToSet&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3021265"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="225756"/></proof>
  <transf name="split_vc" >
   <goal name="convertConjunctionToSet&#39;vc.0.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1653158"/></proof>
   <proof prover="1"><result status="valid" time="0.03" steps="212"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="157441"/></proof>
   </goal>
   <goal name="convertConjunctionToSet&#39;vc.0.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1652543"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="valid" time="0.14" steps="29148"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="convertConjunctionToSet&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2636465"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191925"/></proof>
  <transf name="split_vc" >
   <goal name="convertConjunctionToSet&#39;vc.1.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.15" steps="30328"/></proof>
   </goal>
   <goal name="convertConjunctionToSet&#39;vc.1.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.13" steps="31760"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="776920"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="227586"/></proof>
 <transf name="split_vc" >
  <goal name="eval_equivalent&#39;vc.0" expl="assertion">
  <proof prover="0"><result status="timeout" time="1.00" steps="2502061"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="149299"/></proof>
  </goal>
  <goal name="eval_equivalent&#39;vc.1" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="777596"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="152493"/></proof>
  <transf name="split_vc" >
   <goal name="eval_equivalent&#39;vc.1.0" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="1684256"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="152633"/></proof>
   </goal>
   <goal name="eval_equivalent&#39;vc.1.1" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="777886"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="226807"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2777653"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174272"/></proof>
 </goal>
</theory>
</file>
</why3session>
