<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn.mlw"/>
<theory name="Horn">
 <goal name="aux&#39;vc" expl="VC for aux">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="423586"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="197270"/></proof>
 <transf name="split_vc" >
  <goal name="aux&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="27411"/></proof>
  </goal>
  <goal name="aux&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="28022"/></proof>
  </goal>
  <goal name="aux&#39;vc.2" expl="assertion">
  <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="28012"/></proof>
  </goal>
  <goal name="aux&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="423869"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="287991"/></proof>
  <transf name="split_vc" >
   <goal name="aux&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="26926"/></proof>
   </goal>
   <goal name="aux&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.10" steps="25860"/></proof>
   </goal>
   <goal name="aux&#39;vc.3.2" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="446584"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="197240"/></proof>
   </goal>
   <goal name="aux&#39;vc.3.3" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="438947"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="176831"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="28277"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27985"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="641"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="245887"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="28523"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <transf name="destruct_term" proved="true" arg1="phi">
   <goal name="convertAFtoPL_evaluation.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="28605"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="144922"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.2" proved="true">
   <proof prover="2"><result status="valid" time="0.07" steps="25011"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <transf name="destruct_term" proved="true" arg1="x">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="28098"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="255068"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.2" proved="true">
   <proof prover="2"><result status="valid" time="0.07" steps="24771"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="add_then_mem" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="30195"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="507860"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="2.00" steps="249990"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_equivalent&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="28932"/></proof>
  </goal>
  <goal name="eval_equivalent&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="29116"/></proof>
  </goal>
  <goal name="eval_equivalent&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="1540921"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="153307"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="eval_equivalent&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.32" steps="54727"/></proof>
   </goal>
   <goal name="eval_equivalent&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="29596"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="0"><result status="timeout" time="1.00" steps="2632017"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="171900"/></proof>
 </goal>
</theory>
</file>
</why3session>
