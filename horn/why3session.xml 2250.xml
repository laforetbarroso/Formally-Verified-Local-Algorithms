<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="horn.mlw"/>
<theory name="Horn">
 <goal name="eval_setconjunction_singleton">
 <proof prover="2" timelimit="1"><result status="valid" time="0.19" steps="30036"/></proof>
 </goal>
 <goal name="add_eval">
 <proof prover="0"><undone/></proof>
 <proof prover="1"><result status="timeout" time="5.00"/></proof>
 <proof prover="2"><result status="timeout" time="5.00" steps="1148268"/></proof>
 <transf name="split_vc" >
  <goal name="add_eval.0">
  <proof prover="0"><result status="timeout" time="5.00" steps="847177"/></proof>
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00" steps="599371"/></proof>
  <transf name="case" arg1="(is_empty s)">
   <goal name="add_eval.0.0" expl="true case">
   <proof prover="2"><result status="valid" time="0.16" steps="29700"/></proof>
   </goal>
   <goal name="add_eval.0.1" expl="false case">
   <proof prover="0"><result status="timeout" time="5.00" steps="823432"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="2"><result status="timeout" time="5.00" steps="984342"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF">
 <proof prover="2" timelimit="1"><result status="valid" time="0.11" steps="30020"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF">
 <proof prover="2" timelimit="1"><result status="valid" time="0.13" steps="28365"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL">
 <proof prover="2" timelimit="1"><result status="valid" time="0.11" steps="28883"/></proof>
 </goal>
 <goal name="aux&#39;vc" expl="VC for aux">
 <transf name="split_vc" >
  <goal name="aux&#39;vc.0" expl="precondition">
  <proof prover="2" timelimit="1"><result status="valid" time="0.09" steps="25237"/></proof>
  </goal>
  <goal name="aux&#39;vc.1" expl="variant decrease">
  <proof prover="2" timelimit="1"><result status="valid" time="0.20" steps="30703"/></proof>
  </goal>
  <goal name="aux&#39;vc.2" expl="assertion">
  <proof prover="2"><result status="valid" time="0.46" steps="64581"/></proof>
  </goal>
  <goal name="aux&#39;vc.3" expl="assertion">
  <proof prover="2"><result status="valid" time="0.14" steps="31002"/></proof>
  </goal>
  <goal name="aux&#39;vc.4" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.24" steps="37064"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty">
 <proof prover="2"><result status="valid" time="0.17" steps="30839"/></proof>
 </goal>
 <goal name="union_eval_samesingleton">
 <proof prover="2"><result status="valid" time="0.14" steps="33983"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton">
 <proof prover="2"><result status="valid" time="0.68" steps="83248"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation">
 <proof prover="1"><result status="valid" time="0.24" steps="657"/></proof>
 <proof prover="2"><result status="timeout" time="5.00" steps="994357"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation">
 <transf name="split_vc" >
  <goal name="convertAFtoPL_evaluation.0">
  <transf name="destruct_term" arg1="phi">
   <goal name="convertAFtoPL_evaluation.0.0">
   <proof prover="2"><result status="valid" time="0.14" steps="29774"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.1">
   <proof prover="1"><result status="valid" time="0.02" steps="24"/></proof>
   <proof prover="2"><result status="timeout" time="5.00" steps="647316"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.2">
   <proof prover="2"><result status="valid" time="0.18" steps="26081"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL">
 <transf name="split_vc" >
  <goal name="PLtoAF_AFtoPL.0">
  <transf name="destruct_term" arg1="x">
   <goal name="PLtoAF_AFtoPL.0.0">
   <proof prover="2"><result status="valid" time="0.14" steps="29267"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.1">
   <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
   <proof prover="2"><result status="timeout" time="5.00" steps="1358916"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.2">
   <proof prover="2"><result status="valid" time="0.07" steps="25841"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="add_then_mem">
 <proof prover="2"><result status="valid" time="0.13" steps="31314"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma">
 <proof prover="0" timelimit="1"><result status="timeout" time="1.00" steps="1622203"/></proof>
 <proof prover="1" timelimit="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" timelimit="1"><result status="timeout" time="1.00" steps="155367"/></proof>
 <transf name="split_vc" >
  <goal name="convertConjunctionToSet_lemma.0">
  <proof prover="0" timelimit="1"><result status="timeout" time="1.00" steps="1621967"/></proof>
  <proof prover="1" timelimit="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" timelimit="1"><result status="timeout" time="1.00" steps="213608"/></proof>
  <transf name="destruct_term" arg1="phi">
   <goal name="convertConjunctionToSet_lemma.0.0">
   <proof prover="0"><result status="timeout" time="5.00" steps="14337153"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="2"><result status="timeout" time="5.00" steps="933704"/></proof>
   <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="phi">
    <goal name="convertConjunctionToSet_lemma.0.0.0">
    <transf name="subst_all" >
     <goal name="convertConjunctionToSet_lemma.0.0.0.0">
     <transf name="compile_match" >
      <goal name="convertConjunctionToSet_lemma.0.0.0.0.0">
      <proof prover="0"><result status="timeout" time="5.00" steps="6671486"/></proof>
      <proof prover="1"><result status="timeout" time="5.00"/></proof>
      <proof prover="2"><result status="timeout" time="5.00" steps="1053347"/></proof>
      <transf name="unfold" arg1="op_and" arg2="in" arg3="H">
       <goal name="convertConjunctionToSet_lemma.0.0.0.0.0.0">
       <transf name="compile_match" >
        <goal name="convertConjunctionToSet_lemma.0.0.0.0.0.0.0">
        <proof prover="0"><result status="timeout" time="5.00" steps="6777884"/></proof>
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="2"><result status="timeout" time="5.00" steps="1053186"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma.0.1">
   <proof prover="2"><result status="valid" time="0.14" steps="32949"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma1">
 <proof prover="0"><result status="timeout" time="5.00" steps="11252697"/></proof>
 <proof prover="1"><result status="timeout" time="5.00"/></proof>
 <proof prover="2"><result status="timeout" time="5.00" steps="672689"/></proof>
 <transf name="introduce_premises" >
  <goal name="convertConjunctionToSet_lemma1.0">
  <transf name="destruct_term" arg1="phi">
   <goal name="convertConjunctionToSet_lemma1.0.0">
   <proof prover="0"><result status="timeout" time="5.00" steps="7410171"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="2"><result status="timeout" time="5.00" steps="835094"/></proof>
   </goal>
   <goal name="convertConjunctionToSet_lemma1.0.1">
   <proof prover="1"><result status="valid" time="1.18" steps="1401"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 <transf name="split_vc" >
  <goal name="convertConjunctionToSet_lemma1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00" steps="1834970"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00" steps="853144"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pp_same_p">
 <proof prover="2" timelimit="1"><result status="valid" time="0.28" steps="47503"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent">
 <proof prover="2" timelimit="1"><result status="valid" time="0.90" steps="102950"/></proof>
 <transf name="split_vc" >
  <goal name="eval_equivalent&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="30076"/></proof>
  </goal>
  <goal name="eval_equivalent&#39;vc.1" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="30304"/></proof>
  </goal>
  <goal name="eval_equivalent&#39;vc.2" expl="postcondition">
  <transf name="split_vc" >
   <goal name="eval_equivalent&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00" steps="2013718"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="5.00" steps="688079"/></proof>
   </goal>
   <goal name="eval_equivalent&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00" steps="24555354"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="5.00" steps="642343"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="2" timelimit="1"><result status="valid" time="0.16" steps="32960"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList">
 <proof prover="2" timelimit="1"><result status="valid" time="0.15" steps="35302"/></proof>
 </goal>
</theory>
</file>
</why3session>
