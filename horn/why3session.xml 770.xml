<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn.mlw"/>
<theory name="Horn">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="29865"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28210"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="28728"/></proof>
 </goal>
 <goal name="aux&#39;vc" expl="VC for aux">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="492778"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185202"/></proof>
 <transf name="split_vc" >
  <goal name="aux&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="428018"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="valid" time="0.17" steps="31284"/></proof>
  </goal>
  <goal name="aux&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="31284"/></proof>
  </goal>
  <goal name="aux&#39;vc.2" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="433033"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="188412"/></proof>
  <transf name="split_vc" >
   <goal name="aux&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="30547"/></proof>
   </goal>
   <goal name="aux&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.11" steps="28063"/></proof>
   </goal>
   <goal name="aux&#39;vc.2.2" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="454162"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="226038"/></proof>
   </goal>
   <goal name="aux&#39;vc.2.3" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="441793"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="243511"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="30654"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="33662"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="447486"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="valid" time="0.46" steps="72864"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="657"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="144398"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <transf name="destruct_term" proved="true" arg1="phi">
   <goal name="convertAFtoPL_evaluation.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="29619"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="24"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="145914"/></proof>
   </goal>
   <goal name="convertAFtoPL_evaluation.0.2" proved="true">
   <proof prover="2"><result status="valid" time="0.07" steps="25946"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <transf name="destruct_term" proved="true" arg1="x">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="29112"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="260911"/></proof>
   </goal>
   <goal name="PLtoAF_AFtoPL.0.2" proved="true">
   <proof prover="2"><result status="valid" time="0.07" steps="25706"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="add_then_mem" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="31174"/></proof>
 </goal>
 <goal name="pp_same_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1690004"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="valid" time="0.28" steps="46259"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="512850"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131220"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_equivalent&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="30057"/></proof>
  </goal>
  <goal name="eval_equivalent&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="30279"/></proof>
  </goal>
  <goal name="eval_equivalent&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1503200"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136461"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="eval_equivalent&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4156442"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="valid" time="0.17" steps="34295"/></proof>
   </goal>
   <goal name="eval_equivalent&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12986342"/></proof>
   <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="2"><result status="valid" time="0.15" steps="30831"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="32672"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="35014"/></proof>
 </goal>
 <goal name="convertConjunctionToSet&#39;vc" expl="VC for convertConjunctionToSet">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="union_eval">
 <proof prover="0"><result status="timeout" time="1.00" steps="429515"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="union_eval_simple777">
 <proof prover="2"><undone/></proof>
 </goal>
</theory>
</file>
</why3session>
