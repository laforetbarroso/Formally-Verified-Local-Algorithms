<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_fF.mlw"/>
<theory name="Evals" proved="true">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="101883"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="323693"/></proof>
 <proof prover="3"><result status="valid" time="0.09"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <proof prover="5"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="498478"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150112"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="36362"/></proof>
  <proof prover="5"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="27361"/></proof>
  <proof prover="5"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="32013"/></proof>
  <proof prover="5"><result status="valid" time="0.29"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="30230"/></proof>
 <proof prover="5"><result status="valid" time="0.24"/></proof>
 </goal>
</theory>
<theory name="SAT" proved="true">
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="27803"/></proof>
 <proof prover="5"><result status="valid" time="0.20"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="777962"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276023"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821915"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1610507"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="id_val">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="27525"/></proof>
    <proof prover="5"><result status="valid" time="0.18"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="28384"/></proof>
 <proof prover="5"><result status="valid" time="0.19"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="27267"/></proof>
 <proof prover="5"><result status="valid" time="0.15"/></proof>
 </goal>
</theory>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="30327"/></proof>
 <proof prover="5"><result status="valid" time="0.17"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="28518"/></proof>
 <proof prover="5"><result status="valid" time="0.22"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="29036"/></proof>
 <proof prover="5"><result status="valid" time="0.13"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="29883"/></proof>
 <proof prover="5"><result status="valid" time="0.24"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="1" obsolete="true"><result status="valid" time="0.24" steps="725"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148366"/></proof>
 <proof prover="4"><result status="valid" time="0.45" steps="801"/></proof>
 <proof prover="5"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778852"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139395"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="1492"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="139369"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <proof prover="5"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821118"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1536345"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822183"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1544362"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1491924"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2" obsolete="true"><result status="valid" time="0.07" steps="25488"/></proof>
     <proof prover="5"><result status="valid" time="0.21"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="29256"/></proof>
     <proof prover="5"><result status="valid" time="0.17"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="29377"/></proof>
     <proof prover="5"><result status="valid" time="0.12"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="Logic.algorithmA_def">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2689430"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="369971"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.35"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA_def.0">
  <proof prover="0"><result status="timeout" time="1.00" steps="2440351"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="314991"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="algorithmA_def.1">
  <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="8810537"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="aux&#39;vc" expl="VC for aux">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="555437"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132951"/></proof>
 <transf name="split_vc" >
  <goal name="aux&#39;vc.0" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.07" steps="28997"/></proof>
  <proof prover="5" obsolete="true"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="aux&#39;vc.1" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="35318"/></proof>
  <proof prover="5" obsolete="true"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="aux&#39;vc.2" expl="assertion">
  <proof prover="2" obsolete="true"><result status="valid" time="0.75" steps="67772"/></proof>
  <proof prover="5" obsolete="true"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="aux&#39;vc.3" expl="assertion">
  <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="32853"/></proof>
  <proof prover="5" obsolete="true"><result status="valid" time="0.60"/></proof>
  </goal>
  <goal name="aux&#39;vc.4" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.54" steps="43264"/></proof>
  <proof prover="5" obsolete="true"><result status="valid" time="0.40"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty">
 <proof prover="2" obsolete="true"><result status="valid" time="0.37" steps="35817"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.29"/></proof>
 </goal>
 <goal name="union_eval_samesingleton">
 <proof prover="2" obsolete="true"><result status="valid" time="0.43" steps="38979"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.34"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton">
 <proof prover="2" obsolete="true"><result status="valid" time="1.49" steps="89578"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="add_then_mem">
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="35424"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.22"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma">
 <proof prover="2" obsolete="true"><result status="valid" time="0.38" steps="38423"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.28"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2526385"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156748"/></proof>
 <transf name="split_vc" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1252104"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="valid" time="2.36" steps="1598"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="448479"/></proof>
  <proof prover="5" obsolete="true"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="convertConjunctionToSet_lemma1&#39;vc.1" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.40" steps="38338"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pp_same_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.65" steps="52217"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.47"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent">
 <proof prover="1" obsolete="true"><result status="valid" time="0.73" steps="1864"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="65399"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.78" steps="1962"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="37327"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.29"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList">
 <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="41041"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.47"/></proof>
 </goal>
 <goal name="fset_from_list_distr">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2288993"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="278942"/></proof>
 <transf name="split_vc" >
  <goal name="fset_from_list_distr.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2440900"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="285750"/></proof>
  <transf name="induction_arg_ty_lex" arg1="left">
   <goal name="fset_from_list_distr.0.0">
   <transf name="split_vc" >
    <goal name="fset_from_list_distr.0.0.0">
    <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="39033"/></proof>
    <proof prover="5" obsolete="true"><result status="valid" time="0.25"/></proof>
    </goal>
    <goal name="fset_from_list_distr.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2572017"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="214456"/></proof>
    <transf name="compute_hyp_specified" >
     <goal name="fset_from_list_distr.0.0.1.0">
     <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="45150"/></proof>
     <proof prover="5" obsolete="true"><result status="valid" time="0.34"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findFirst&#39;vc" expl="VC for findFirst">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2689989"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="195307"/></proof>
 <transf name="split_vc" >
  <goal name="findFirst&#39;vc.0" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="valid" time="0.02" steps="53"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="90716"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="51"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2291285"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="268669"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.1.0" expl="postcondition">
   <proof prover="1" obsolete="true"><result status="valid" time="0.02" steps="55"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="36000"/></proof>
   <proof prover="5" obsolete="true"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="36073"/></proof>
   <proof prover="5" obsolete="true"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.2" expl="postcondition">
   <proof prover="1" obsolete="true"><result status="valid" time="0.02" steps="55"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="92044"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="53"/></proof>
   <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.2" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="1.65" steps="127299"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2330209"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="212010"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417997"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210222"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13235241"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1103557"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.0.0.0" expl="postcondition">
      <proof prover="1" obsolete="true"><result status="valid" time="0.03" steps="198"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="77995"/></proof>
      <proof prover="5" obsolete="true"><result status="valid" time="0.37"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2399362"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="197004"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="56"/></proof>
    <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.1.0.0" expl="postcondition">
      <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.56" steps="48164"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.2" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7196568"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1109409"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.64" steps="50682"/></proof>
      <proof prover="5" obsolete="true"><result status="valid" time="0.39"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2416853"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210222"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3068786"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173169"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.0.0.0" expl="postcondition">
      <proof prover="1" obsolete="true"><result status="valid" time="0.03" steps="198"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="80919"/></proof>
      <proof prover="5" obsolete="true"><result status="valid" time="0.41"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2384306"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="197037"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="56"/></proof>
    <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.1.0.0" expl="postcondition">
      <proof prover="1" obsolete="true"><result status="valid" time="0.05" steps="328"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.55" steps="46713"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2287664"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="197037"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.64" steps="50830"/></proof>
      <proof prover="5" obsolete="true"><result status="valid" time="0.48"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_basic&#39;vc" expl="VC for algorithmA_basic">
 <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="43543"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.30"/></proof>
 </goal>
 <goal name="not_subset_findFirst">
 <transf name="introduce_premises" >
  <goal name="not_subset_findFirst.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_findFirst.0.0">
   <transf name="split_vc" >
    <goal name="not_subset_findFirst.0.0.0">
    <proof prover="1" obsolete="true"><result status="valid" time="0.05" steps="50"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="85886"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
    </goal>
    <goal name="not_subset_findFirst.0.0.1" proved="true">
    <transf name="destruct" proved="true" arg1="H2">
     <goal name="not_subset_findFirst.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="1312372"/></proof>
     <proof prover="1"><result status="timeout" time="1.00"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="100902"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="48"/></proof>
     </goal>
     <goal name="not_subset_findFirst.0.0.1.1" proved="true">
     <transf name="destruct" proved="true" arg1="H2">
      <goal name="not_subset_findFirst.0.0.1.1.0" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="1503950"/></proof>
      <proof prover="1"><result status="timeout" time="1.00"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="92981"/></proof>
      <proof prover="4"><result status="valid" time="0.06" steps="301"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2561558"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="250815"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2050239"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="37431"/></proof>
  <proof prover="5" obsolete="true"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="not_subset.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1737343"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="35843"/></proof>
  <proof prover="5" obsolete="true"><result status="valid" time="0.19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2187633"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="42371"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.25"/></proof>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2513296"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112447"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="231885"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="39956"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2779925"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="179859"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2413841"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.09" steps="36940"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="386"/></proof>
   <proof prover="5" obsolete="true"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3152787"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="170216"/></proof>
   <proof prover="5" obsolete="true"><result status="valid" time="0.40"/></proof>
   <transf name="induction_arg_ty_lex" arg1="x">
    <goal name="algorithmA&#39;vc.2.1.0" expl="VC for algorithmA">
    <transf name="introduce_premises" >
     <goal name="algorithmA&#39;vc.2.1.0.0" expl="VC for algorithmA">
     <proof prover="0" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="53945"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.7.0" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="2883929"/></proof>
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   <proof prover="4" timelimit="5"><result status="valid" time="3.74" steps="4143"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2907154"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185662"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.09" steps="37807"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="201"/></proof>
   <proof prover="5" obsolete="true"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3132007"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="49839"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.8.0" expl="postcondition">
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502702"/></proof>
  <proof prover="1" obsolete="true"><result status="valid" time="0.02" steps="61"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="197735"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2518166"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="225278"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="algorithmA&#39;vc.4.0.0" expl="VC for algorithmA">
    <transf name="introduce_premises" >
     <goal name="algorithmA&#39;vc.4.0.0.0" expl="VC for algorithmA">
     <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="43706"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3078212"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="203510"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="compute_hyp_specified" >
    <goal name="algorithmA&#39;vc.4.1.0" expl="postcondition">
    <transf name="destruct_term" arg1="clauselist">
     <goal name="algorithmA&#39;vc.4.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2799233"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219342"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="clauselist">
      <goal name="algorithmA&#39;vc.4.1.0.0.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="algorithmA&#39;vc.4.1.0.0.0.0" expl="postcondition">
       <transf name="assert" arg1="(exists a b. x4 = (a,b))">
        <goal name="algorithmA&#39;vc.4.1.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.19" steps="41424"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.4.1.0.0.0.0.1" expl="postcondition">
        <proof prover="0"><result status="timeout" time="1.00" steps="2591384"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="181953"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="introduce_exists" >
         <goal name="algorithmA&#39;vc.4.1.0.0.0.0.1.0" expl="postcondition">
         <transf name="subst" arg1="x4">
          <goal name="algorithmA&#39;vc.4.1.0.0.0.0.1.0.0" expl="postcondition">
          <proof prover="0"><result status="timeout" time="1.00" steps="2550699"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="186599"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="compile_match" >
           <goal name="algorithmA&#39;vc.4.1.0.0.0.0.1.0.0.0" expl="postcondition">
           <proof prover="0"><result status="timeout" time="1.00" steps="2555652"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="186599"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.4.1.0.1" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="48363"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.0" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="valid" time="0.03" steps="61"/></proof>
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="61"/></proof>
  <proof prover="5" obsolete="true"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="3805386"/></proof>
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="41904"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.30"/></proof>
 </goal>
 <goal name="case1_with_basic">
 <proof prover="2" obsolete="true"><result status="valid" time="0.47" steps="70388"/></proof>
 <proof prover="5" obsolete="true"><result status="valid" time="0.73"/></proof>
 </goal>
 <goal name="case2_with_basic">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8757157"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="938738"/></proof>
 <transf name="split_vc" >
  <goal name="case2_with_basic.0">
  <transf name="unfold" arg1="algorithmA_basic">
   <goal name="case2_with_basic.0.0">
   <transf name="compile_match" >
    <goal name="case2_with_basic.0.0.0">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7611957"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="882099"/></proof>
    <transf name="eliminate_if" >
     <goal name="case2_with_basic.0.0.0.0">
     <transf name="split_vc" >
      <goal name="case2_with_basic.0.0.0.0.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2185650"/></proof>
      <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134537"/></proof>
      <transf name="destruct_term" arg1="c">
       <goal name="case2_with_basic.0.0.0.0.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2729897"/></proof>
       <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="1.12" steps="138753"/></proof>
       <proof prover="5" obsolete="true"><result status="valid" time="0.26"/></proof>
       </goal>
       <goal name="case2_with_basic.0.0.0.0.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1509618"/></proof>
       <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.22" steps="43483"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <proof prover="5" obsolete="true"><result status="valid" time="0.27"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="case2_with_basic.0.0.0.0.1">
      <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.16" steps="40107"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2521647"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115708"/></proof>
 <transf name="split_vc" >
  <goal name="case1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3073917"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159021"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="compute_hyp_specified" >
   <goal name="case1.0.0">
   <proof prover="0" obsolete="true"><result status="valid" time="0.22" steps="715186"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="3.49" steps="514514"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10177615"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="729859"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12571110"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="804216"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="compute_hyp_specified" >
   <goal name="case2.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1200412"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118430"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1407895"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="74376"/></proof>
 <transf name="split_vc" >
  <goal name="case_induction.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13806470"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1032198"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="compute_hyp_specified" >
   <goal name="case_induction.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2268990"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115734"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
