<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_fF.mlw"/>
<theory name="Evals" proved="true">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="101883"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="323693"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="498478"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="150112"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="27361"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="36362"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="32013"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="30230"/></proof>
 </goal>
</theory>
<theory name="SAT" proved="true">
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27803"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="777962"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="276023"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="821915"/></proof>
  <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1610507"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="id_val">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="27525"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28384"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="27267"/></proof>
 </goal>
</theory>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="30327"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28518"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="29036"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="29883"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="725"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="148366"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="778852"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="139395"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="1492"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="138818"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="821118"/></proof>
 <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1536345"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="822183"/></proof>
  <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1544362"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5"><result status="failure" time="0.00"/></proof>
    <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1491924"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="29377"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="29256"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.07" steps="25488"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="aux&#39;vc" expl="VC for aux" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="550053"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="131419"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="aux&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="28489"/></proof>
  </goal>
  <goal name="aux&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="34809"/></proof>
  </goal>
  <goal name="aux&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="67290"/></proof>
  </goal>
  <goal name="aux&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="32344"/></proof>
  </goal>
  <goal name="aux&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="42755"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="35308"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="38497"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.71" steps="89096"/></proof>
 </goal>
 <goal name="add_then_mem" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="34942"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="37914"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="2526385"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="156748"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="2438671"/></proof>
  <proof prover="1" timelimit="5"><result status="valid" time="1.19" steps="1598"/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1226535"/></proof>
  </goal>
  <goal name="convertConjunctionToSet_lemma1&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="37829"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pp_same_p" proved="true">
 <proof prover="2"><result status="valid" time="0.30" steps="51740"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="1"><result status="valid" time="0.37" steps="1864"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="111175"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="36845"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="40559"/></proof>
 </goal>
 <goal name="fset_from_list_distr" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="2288993"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="278942"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="fset_from_list_distr.0" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="2440900"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="285750"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="left">
   <goal name="fset_from_list_distr.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fset_from_list_distr.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="38489"/></proof>
    </goal>
    <goal name="fset_from_list_distr.0.0.1" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="2572017"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="214456"/></proof>
    <transf name="compute_hyp_specified" proved="true" >
     <goal name="fset_from_list_distr.0.0.1.0" proved="true">
     <proof prover="2"><result status="valid" time="0.21" steps="44673"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findFirst&#39;vc" expl="VC for findFirst" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="2689989"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="195307"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findFirst&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="53"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="255252"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="2291285"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="268669"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="findFirst&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="35491"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="35564"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="55"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="182963"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.80" steps="124263"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="2330209"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="212010"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="findFirst&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="2417997"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="210222"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="findFirst&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="58"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="222399"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.3.0.1" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="7196568"/></proof>
    <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1109409"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.1.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.0.1.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.26" steps="47214"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.2" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="13235241"/></proof>
    <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1103557"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.2.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.0.2.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.27" steps="49777"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="2416853"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="210222"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="findFirst&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="58"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="355755"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.3.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="2287664"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="197037"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.24" steps="46040"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="3068786"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="173169"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.2.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.1.2.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.27" steps="49818"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_basic&#39;vc" expl="VC for algorithmA_basic" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="43099"/></proof>
 </goal>
 <goal name="not_subset_findFirst">
 <transf name="split_vc" >
  <goal name="not_subset_findFirst.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_findFirst.0.0">
   <transf name="introduce_premises" >
    <goal name="not_subset_findFirst.0.0.0">
    <transf name="split_vc" >
     <goal name="not_subset_findFirst.0.0.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.03" steps="50"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="199646"/></proof>
     </goal>
     <goal name="not_subset_findFirst.0.0.0.1">
     <proof prover="0"><result status="timeout" time="1.00" steps="2438107"/></proof>
     <proof prover="1"><result status="timeout" time="1.00"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="230244"/></proof>
     <transf name="unfold" arg1="not_subset_in_findFirst" arg2="in" arg3="H1">
      <goal name="not_subset_findFirst.0.0.0.1.0">
      <transf name="compile_match" >
       <goal name="not_subset_findFirst.0.0.0.1.0.0">
       <transf name="destruct" arg1="H1">
        <goal name="not_subset_findFirst.0.0.0.1.0.0.0">
        <transf name="destruct" arg1="H3">
         <goal name="not_subset_findFirst.0.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2"><result status="valid" time="0.10" steps="31777"/></proof>
         </goal>
         <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1">
         <proof prover="0"><result status="timeout" time="1.00" steps="2004630"/></proof>
         <proof prover="1"><result status="timeout" time="1.00"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="182670"/></proof>
         <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
          <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0">
          <transf name="assert" arg1="(exists a b. x3 = (a,b))">
           <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
           <proof prover="2"><result status="valid" time="0.16" steps="35717"/></proof>
           </goal>
           <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1">
           <proof prover="0"><result status="timeout" time="1.00" steps="2615161"/></proof>
           <proof prover="1"><result status="timeout" time="1.00"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="145864"/></proof>
           <transf name="introduce_exists" >
            <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0">
            <transf name="subst" arg1="x3">
             <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0">
             <transf name="replace" arg1="(fset_from_list (Cons (x1, x) x2))" arg2="(Cons (to_fset x1, x) (fset_from_list x2))" arg3="in" arg4="H">
              <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0">
              <proof prover="0"><result status="timeout" time="1.00" steps="2566145"/></proof>
              <proof prover="1"><result status="timeout" time="1.00"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="169438"/></proof>
              <transf name="compile_match" >
               <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0">
               <proof prover="0"><result status="timeout" time="1.00" steps="2851855"/></proof>
               <proof prover="1"><result status="timeout" time="1.00"/></proof>
               <proof prover="2"><result status="timeout" time="1.00" steps="201866"/></proof>
               <transf name="eliminate_let" >
                <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0">
                <proof prover="0"><result status="timeout" time="1.00" steps="2155963"/></proof>
                <proof prover="1"><result status="timeout" time="1.00"/></proof>
                <proof prover="2"><result status="timeout" time="1.00" steps="141651"/></proof>
                <transf name="compile_match" >
                 <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0">
                 <transf name="eliminate_let" >
                  <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0">
                  <transf name="eliminate_if" >
                   <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0">
                   <transf name="destruct" arg1="H">
                    <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0">
                    <proof prover="0"><result status="timeout" time="1.00" steps="2206507"/></proof>
                    <proof prover="1"><result status="timeout" time="1.00"/></proof>
                    <proof prover="2"><result status="timeout" time="1.00" steps="180168"/></proof>
                    <transf name="destruct" arg1="H">
                     <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
                     <proof prover="2"><result status="valid" time="0.10" steps="32935"/></proof>
                     </goal>
                     <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.1">
                     <proof prover="0"><result status="timeout" time="1.00" steps="2209359"/></proof>
                     <proof prover="1"><result status="timeout" time="1.00"/></proof>
                     <proof prover="2"><result status="timeout" time="1.00" steps="172783"/></proof>
                     <transf name="compile_match" >
                      <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.1.0">
                      <transf name="destruct" arg1="H3">
                       <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.1.0.0" expl="destruct premise">
                       <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="13689743"/></proof>
                       <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
                       <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="988347"/></proof>
                       </goal>
                       <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.1.0.1" proved="true">
                       <proof prover="2"><result status="valid" time="0.10" steps="33352"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="not_subset_findFirst.0.0.0.1.0.0.0.1.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="2"><result status="valid" time="0.16" steps="38325"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
   <goal name="not_subset_findFirst.0.0">
   <transf name="destruct_term" arg1="clauselist">
    <goal name="not_subset_findFirst.0.0.0">
    <proof prover="0"><result status="timeout" time="1.00" steps="2363800"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="145745"/></proof>
    <transf name="subst" arg1="clauselist">
     <goal name="not_subset_findFirst.0.0.0.0">
     <transf name="assert" arg1="(exists a b. x3 = (a,b))">
      <goal name="not_subset_findFirst.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.22" steps="38828"/></proof>
      </goal>
      <goal name="not_subset_findFirst.0.0.0.0.1">
      <proof prover="0"><result status="timeout" time="1.00" steps="2433616"/></proof>
      <proof prover="1"><result status="timeout" time="1.00"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="136669"/></proof>
      <transf name="introduce_exists" >
       <goal name="not_subset_findFirst.0.0.0.0.1.0">
       <transf name="subst" arg1="x3">
        <goal name="not_subset_findFirst.0.0.0.0.1.0.0">
        <transf name="replace" arg1="(fset_from_list (Cons (a, b) x2))" arg2="(Cons (to_fset a,b) (fset_from_list (x2)))" arg3="in" arg4="H">
         <goal name="not_subset_findFirst.0.0.0.0.1.0.0.0">
         <proof prover="0"><result status="timeout" time="1.00" steps="2357874"/></proof>
         <proof prover="1"><result status="timeout" time="1.00"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="178992"/></proof>
         <transf name="compile_match" >
          <goal name="not_subset_findFirst.0.0.0.0.1.0.0.0.0">
          <proof prover="0"><result status="timeout" time="1.00" steps="2037146"/></proof>
          <proof prover="1"><result status="timeout" time="1.00"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="179008"/></proof>
          <transf name="assert" arg1="(not_subset_in_findFirst (Cons (a, b) x2) c -&gt; not subset a c)">
           <goal name="not_subset_findFirst.0.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="2"><result status="valid" time="0.16" steps="37538"/></proof>
           </goal>
           <goal name="not_subset_findFirst.0.0.0.0.1.0.0.0.0.1">
           <proof prover="0"><result status="timeout" time="1.00" steps="2255307"/></proof>
           <proof prover="1"><result status="timeout" time="1.00"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="161138"/></proof>
           <transf name="eliminate_let" >
            <goal name="not_subset_findFirst.0.0.0.0.1.0.0.0.0.1.0">
            <transf name="eliminate_if" >
             <goal name="not_subset_findFirst.0.0.0.0.1.0.0.0.0.1.0.0">
             <transf name="destruct" arg1="H">
              <goal name="not_subset_findFirst.0.0.0.0.1.0.0.0.0.1.0.0.0">
              <proof prover="0"><result status="timeout" time="1.00" steps="2309197"/></proof>
              <proof prover="1"><result status="timeout" time="1.00"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="176163"/></proof>
              <transf name="destruct" arg1="H">
               <goal name="not_subset_findFirst.0.0.0.0.1.0.0.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
               <proof prover="2"><result status="valid" time="0.10" steps="32883"/></proof>
               </goal>
               <goal name="not_subset_findFirst.0.0.0.0.1.0.0.0.0.1.0.0.0.1">
               <proof prover="0"><result status="timeout" time="1.00" steps="2122834"/></proof>
               <proof prover="1"><result status="timeout" time="1.00"/></proof>
               <proof prover="2"><result status="timeout" time="1.00" steps="176122"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="not_subset_findFirst.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.19" steps="38224"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="not_subset_findFirst.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.25" steps="42092"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2561558"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="250815"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2050239"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="36872"/></proof>
  </goal>
  <goal name="not_subset.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1737343"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="35330"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2187633"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="200007"/></proof>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2513296"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112447"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="61"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="135047"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="39443"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2779925"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="179859"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="36427"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.2.1" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="2413841"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="129058"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2907154"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185662"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="37294"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="48977"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="41442"/></proof>
 </goal>
 <goal name="A1">
 <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="46660"/></proof>
 </goal>
 <goal name="case1_with_basic">
 <proof prover="2" obsolete="true"><result status="valid" time="0.48" steps="69986"/></proof>
 </goal>
 <goal name="case2_with_basic">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8757157"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="938738"/></proof>
 <transf name="split_vc" >
  <goal name="case2_with_basic.0">
  <transf name="unfold" arg1="algorithmA_basic">
   <goal name="case2_with_basic.0.0">
   <transf name="compile_match" >
    <goal name="case2_with_basic.0.0.0">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7611957"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="882099"/></proof>
    <transf name="eliminate_if" >
     <goal name="case2_with_basic.0.0.0.0">
     <transf name="split_vc" >
      <goal name="case2_with_basic.0.0.0.0.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2185650"/></proof>
      <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134537"/></proof>
      <transf name="destruct_term" arg1="c">
       <goal name="case2_with_basic.0.0.0.0.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2729897"/></proof>
       <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="1.26" steps="138349"/></proof>
       </goal>
       <goal name="case2_with_basic.0.0.0.0.0.1">
       <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.21" steps="43010"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="case2_with_basic.0.0.0.0.1">
      <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.16" steps="39634"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
