<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="horn_perm.mlw"/>
<theory name="Evals">
 <goal name="eval_setconjunction_singleton">
 <proof prover="0"><result status="valid" time="0.04" steps="101883"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="323693"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add">
 <proof prover="0"><result status="timeout" time="1.00" steps="502065"/></proof>
 <proof prover="1"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="166565"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition">
  <proof prover="2"><result status="valid" time="0.12" steps="27361"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.18" steps="36362"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.17" steps="32013"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval">
 <proof prover="2"><result status="valid" time="0.16" steps="30230"/></proof>
 </goal>
</theory>
<theory name="Converts">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF">
 <proof prover="2"><result status="valid" time="0.15" steps="30297"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF">
 <proof prover="2"><result status="valid" time="0.13" steps="29440"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL">
 <proof prover="2"><result status="valid" time="0.13" steps="30111"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS">
 <proof prover="2"><result status="valid" time="0.14" steps="30076"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation">
 <proof prover="2"><result status="valid" time="0.10" steps="28246"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" >
  <goal name="convertAFtoPL_evaluation.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="139436"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="PLtoAF_AFtoPL.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0">
   <transf name="compile_match" >
    <goal name="PLtoAF_AFtoPL.0.0.0">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0">
     <proof prover="2"><result status="timeout" time="1.00" steps="265118"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1">
     <proof prover="2"><result status="timeout" time="1.00" steps="263434"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2">
     <proof prover="2"><result status="valid" time="0.06" steps="25591"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="RStoAF_AFtoRS.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0">
   <proof prover="2"><result status="timeout" time="1.00" steps="265437"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF">
 <proof prover="0"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="AFtoRS_RStoAF.0">
  <proof prover="0"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0">
   <proof prover="0"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0">
    <proof prover="2"><result status="valid" time="0.13" steps="29666"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1">
    <proof prover="2"><result status="valid" time="0.10" steps="28596"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SAT">
 <goal name="if_unsat_then_not_sat">
 <proof prover="2"><result status="valid" time="0.13" steps="28624"/></proof>
 </goal>
 <goal name="top_is_satisfiable">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1694285"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="384447"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="top_is_satisfiable.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1704407"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1737295"/></proof>
  <transf name="unfold" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0">
   <transf name="exists" arg1="id_val">
    <goal name="top_is_satisfiable.0.0.0">
    <proof prover="2"><result status="valid" time="0.11" steps="28272"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable">
 <proof prover="2"><result status="valid" time="0.13" steps="29220"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom">
 <proof prover="2"><result status="valid" time="0.10" steps="28014"/></proof>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_union&#39;vc" expl="VC for eval_union">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_union&#39;vc.0" expl="precondition">
  <proof prover="2"><result status="valid" time="0.07" steps="27489"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.11" steps="33775"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion">
  <proof prover="2"><result status="valid" time="0.35" steps="64253"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion">
  <proof prover="2"><result status="valid" time="0.15" steps="31202"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.24" steps="41242"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty">
 <proof prover="2"><result status="valid" time="0.17" steps="34345"/></proof>
 </goal>
 <goal name="union_eval_samesingleton">
 <proof prover="2"><result status="valid" time="0.20" steps="37589"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton">
 <proof prover="2"><result status="valid" time="0.70" steps="86547"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF">
 <proof prover="2"><result status="valid" time="0.13" steps="33811"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma">
 <proof prover="2"><result status="valid" time="0.17" steps="36871"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1">
  <transf name="unfold" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1">
   <transf name="destruct_term" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
    <proof prover="2"><result status="valid" time="0.17" steps="37056"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="199068"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1">
     <transf name="compile_match" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1">
      <transf name="instantiate" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
       <transf name="destruct" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2352783"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1773663"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.52" steps="2989"/></proof>
        <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="218627"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.13" steps="778"/></proof>
         <transf name="compile_match" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise">
          <proof prover="2"><result status="timeout" time="1.00" steps="218660"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="785"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2525762"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276021"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1">
         <transf name="destruct" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2528937"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="288567"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
           <proof prover="2"><result status="valid" time="0.18" steps="37812"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
           <proof prover="2"><result status="valid" time="0.16" steps="35460"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition">
       <proof prover="2"><result status="timeout" time="1.00" steps="177341"/></proof>
       <proof prover="4"><result status="valid" time="0.12" steps="793"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2489260"/></proof>
   <proof prover="2"><result status="valid" time="0.35" steps="64295"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="2.22" steps="2035"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset">
 <proof prover="2"><result status="valid" time="0.20" steps="40596"/></proof>
 </goal>
 <goal name="pp_same_p">
 <proof prover="2"><result status="valid" time="0.31" steps="51579"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent">
 <proof prover="2"><result status="timeout" time="1.00" steps="179206"/></proof>
 <proof prover="4"><result status="valid" time="0.31" steps="1954"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="2"><result status="valid" time="0.16" steps="36046"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList">
 <proof prover="2"><result status="valid" time="0.18" steps="39654"/></proof>
 </goal>
 <goal name="fset_from_list_distr">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401631"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310305"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="fset_from_list_distr.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" arg1="left">
   <goal name="fset_from_list_distr.0.0">
   <transf name="split_vc" >
    <goal name="fset_from_list_distr.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" >
     <goal name="fset_from_list_distr.0.0.0.0">
     <proof prover="2"><result status="valid" time="0.24" steps="38026"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="fset_from_list_distr.0.0.1">
    <proof prover="2"><result status="timeout" time="1.00" steps="203133"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="116"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_then_right_nil">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763725"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165584"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="not_subset_spec_then_right_nil.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_spec_then_right_nil.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1742718"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="99027"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.54" steps="1028"/></proof>
   <transf name="split_vc" >
    <goal name="not_subset_spec_then_right_nil.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3078664"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="238470"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
    </goal>
    <goal name="not_subset_spec_then_right_nil.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3087940"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="221483"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H2">
     <goal name="not_subset_spec_then_right_nil.0.0.1.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2411863"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="254214"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
     </goal>
     <goal name="not_subset_spec_then_right_nil.0.0.1.1">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="11240838"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1672870"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" arg1="H2">
      <goal name="not_subset_spec_then_right_nil.0.0.1.1.0">
      <proof prover="2"><result status="timeout" time="1.00" steps="277080"/></proof>
      <proof prover="4"><result status="valid" time="0.03" steps="119"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_if_right_nil">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2480379"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="255019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="not_subset_spec_if_right_nil.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_spec_if_right_nil.0.0">
   <proof prover="2"><result status="timeout" time="1.00" steps="241648"/></proof>
   <proof prover="4"><result status="valid" time="0.18" steps="1038"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_findFirst">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2139881"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182217"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="subset_findFirst.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="subset_findFirst.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2180989"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="193793"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="introduce_premises" >
    <goal name="subset_findFirst.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175080"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191349"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" arg1="clauselist">
     <goal name="subset_findFirst.0.0.0.0">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2167519"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="178339"/></proof>
     <proof prover="4"><result status="valid" time="1.12" steps="1682"/></proof>
     </goal>
     <goal name="subset_findFirst.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2121716"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="187241"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="clauselist">
      <goal name="subset_findFirst.0.0.0.1.0">
      <transf name="compile_match" >
       <goal name="subset_findFirst.0.0.0.1.0.0">
       <proof prover="2"><result status="valid" time="0.20" steps="40491"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.21" steps="1841"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="concat_findFirst">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2484317"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="289845"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="concat_findFirst.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="concat_findFirst.0.0">
   <proof prover="2"><result status="timeout" time="1.00" steps="188452"/></proof>
   <proof prover="4"><result status="valid" time="0.27" steps="1290"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_subset_set_smb">
 <proof prover="0"><result status="timeout" time="1.00" steps="2394257"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="154598"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sublist_subset_set_smb.0">
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec">
 <proof prover="0"><result status="timeout" time="1.00" steps="3004317"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="118168"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="timeout" time="1.00" steps="159318"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="172"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.16" steps="38813"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2659792"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="190490"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176750"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.2.0.0" expl="VC for algorithmA_spec">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2029346"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150376"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" arg1="x">
     <goal name="algorithmA_spec&#39;vc.2.0.0.0" expl="VC for algorithmA_spec">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2407470"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142616"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.0.0.0.0" expl="VC for algorithmA_spec">
      <transf name="destruct_term" arg1="x1">
       <goal name="algorithmA_spec&#39;vc.2.0.0.0.0.0" expl="VC for algorithmA_spec">
       <proof prover="2"><result status="valid" time="0.18" steps="43779"/></proof>
       </goal>
       <goal name="algorithmA_spec&#39;vc.2.0.0.1.0.1" expl="VC for algorithmA_spec">
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.16" steps="553"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.2.0.0.1" expl="VC for algorithmA_spec">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2263923"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141838"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.0.0.1.0" expl="VC for algorithmA_spec">
      <transf name="compile_match" >
       <goal name="algorithmA_spec&#39;vc.2.0.0.1.0.0" expl="VC for algorithmA_spec">
       <proof prover="2"><result status="valid" time="0.16" steps="41429"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="244"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA_spec&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155371"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.2.1.0" expl="VC for algorithmA_spec">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1860195"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121057"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" arg1="x">
     <goal name="algorithmA_spec&#39;vc.2.1.0.0" expl="VC for algorithmA_spec">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027475"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139840"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" >
      <goal name="algorithmA_spec&#39;vc.2.1.0.0.0" expl="VC for algorithmA_spec">
      <proof prover="2"><result status="valid" time="0.20" steps="40707"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.2.1.0.0.1" expl="VC for algorithmA_spec">
      <proof prover="2"><result status="timeout" time="1.00" steps="143109"/></proof>
      <proof prover="4"><result status="valid" time="0.11" steps="462"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.2.1.0.0.2" expl="VC for algorithmA_spec">
      <proof prover="2"><result status="valid" time="0.24" steps="62033"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.2.1.0.1" expl="VC for algorithmA_spec">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2208327"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129233"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.1.0.1.0" expl="VC for algorithmA_spec">
      <transf name="compile_match" >
       <goal name="algorithmA_spec&#39;vc.2.1.0.1.0.0" expl="VC for algorithmA_spec">
       <proof prover="2"><result status="valid" time="0.21" steps="45835"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="488"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763374"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171381"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.4.1.0" expl="VC for algorithmA_spec">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2038471"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124831"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" arg1="x">
     <goal name="algorithmA_spec&#39;vc.4.1.0.0" expl="VC for algorithmA_spec">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1617487"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120807"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="790"/></proof>
     <transf name="subst" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.4.1.0.0.0" expl="VC for algorithmA_spec">
      <transf name="compile_match" >
       <goal name="algorithmA_spec&#39;vc.4.1.0.0.0.0" expl="VC for algorithmA_spec">
       <proof prover="2"><undone/></proof>
       <proof prover="4"><result status="valid" time="0.09" steps="618"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.4.1.0.1" expl="VC for algorithmA_spec">
     <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="161172"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="51"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2754448"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="189375"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.15" steps="36830"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.25" steps="48689"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.5.1" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="3056519"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.5" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="diff_mem_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3347631"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144395"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="diff_mem_clauselist.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1748293"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206307"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="diff_mem_clauselist.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2016617"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="175781"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="diff_mem_clauselist.0.0.0">
    <proof prover="0"><result status="timeout" time="1.00" steps="2289272"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="172729"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Nil: list (fset atomicformula, rightside))">
     <goal name="diff_mem_clauselist.0.0.0.0">
     <transf name="instantiate" arg1="Hinst" arg2="c">
      <goal name="diff_mem_clauselist.0.0.0.0.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="diff_mem_clauselist.0.0.0.0.0.0" expl="destruct premise">
       <proof prover="2"><result status="valid" time="0.09" steps="36563"/></proof>
       </goal>
       <goal name="diff_mem_clauselist.0.0.0.0.0.1">
       <proof prover="2"><result status="valid" time="0.41" steps="70899"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="diff_mem_clauselist.0.0.1">
    <proof prover="0"><result status="timeout" time="1.00" steps="1996400"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="170267"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x1 x)">
     <goal name="diff_mem_clauselist.0.0.1.0">
     <transf name="instantiate" arg1="Hinst" arg2="c">
      <goal name="diff_mem_clauselist.0.0.1.0.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="diff_mem_clauselist.0.0.1.0.0.0" expl="destruct premise">
       <proof prover="2"><result status="valid" time="0.09" steps="36672"/></proof>
       </goal>
       <goal name="diff_mem_clauselist.0.0.1.0.0.1">
       <proof prover="0"><result status="timeout" time="1.00" steps="2083305"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="171209"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="diff_mem_clauselist.0.0.1.0.0.1.0">
        <transf name="destruct" arg1="Hinst">
         <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.0">
         <proof prover="2"><result status="valid" time="0.27" steps="52486"/></proof>
         </goal>
         <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1">
         <proof prover="0"><result status="timeout" time="1.00" steps="2164817"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="134431"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="replace" arg1="(algorithmA_spec (Cons x1 x) c)
" arg2="newc" arg3="in" arg4="Hinst">
          <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0">
          <proof prover="0"><result status="timeout" time="1.00" steps="2169633"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="163329"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="instantiate" arg1="sublist_subset_set_smb" arg2="(Cons x1 x)">
           <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0.0">
           <transf name="instantiate" arg1="Hinst" arg2="(left ++ l)">
            <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0.0.0">
            <proof prover="0"><result status="timeout" time="1.00" steps="2163823"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="142874"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.1" expl="equality hypothesis">
          <proof prover="2"><result status="valid" time="0.09" steps="35415"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb_generic">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502433"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="207156"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="smb_generic.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2268718"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167041"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="smb_generic.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="smb_generic.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="smb_generic.0.0.0.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.09" steps="36777"/></proof>
     </goal>
     <goal name="smb_generic.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2927769"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168267"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="smb_generic.0.0.0.1.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="smb_generic.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2331181"/></proof>
       <proof prover="2"><result status="valid" time="0.13" steps="38834"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="smb_generic.0.0.0.1.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2425423"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="38773"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="diff_mem_clauselist" arg2="(left ++ l)">
        <goal name="smb_generic.0.0.0.1.0.1.0">
        <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p) c)">
         <goal name="smb_generic.0.0.0.1.0.1.0.0">
         <transf name="instantiate" arg1="Hinst" arg2="(algorithmA_spec (left ++ l) (add (convertRStoAF p) c))">
          <goal name="smb_generic.0.0.0.1.0.1.0.0.0">
          <proof prover="2"><result status="valid" time="0.49" steps="82171"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="49006"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="herbrand_model_case1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="47519"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="herbrand_model_case1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2387571"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="48493"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model_case2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2870137"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="42169"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case3">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="42343"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case4">
 <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="42951"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423146"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210384"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="if_sat_clauselist_sat_clause.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="if_sat_clauselist_sat_clause.0.0">
   <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="43045"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3786292"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156540"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="herbrand_model.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2631613"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137336"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="findFirst&#39;vc" expl="VC for findFirst">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13070339"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="643202"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="findFirst&#39;vc.0" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="175339"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="40"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423265"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219510"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.1.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42684"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="44"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.1" expl="postcondition">
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173276"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="44"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42757"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="44"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2724201"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161412"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1447388"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73094"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.0.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="42239"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174058"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="49"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42339"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="49"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1344105"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79040"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.1.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="45249"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="179079"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="162"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="45870"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="162"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1339592"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79631"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.2.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="44415"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.1" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15911231"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="178021"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="345"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2619652"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="46032"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="345"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.3" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1469582"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="70581"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.3.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42293"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="179467"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="159"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="42368"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="159"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.4" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="44051"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940533"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165423"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2715442"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159903"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2654036"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="52953"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.62" steps="93100"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2608141"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156385"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="59387"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616339"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157998"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="56752"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="489"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2694447"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160019"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9086325"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890140"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.55" steps="92906"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="272"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="146286"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.22" steps="42691"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="59504"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2621410"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140350"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="54564"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5745960"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="668425"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="48422"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="45985"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="56172"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2313043"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181095"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616063"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162706"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="x">
    <goal name="algorithmA&#39;vc.3.0.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="57744"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723676"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159970"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="x">
    <goal name="algorithmA&#39;vc.3.1.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="47024"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2256889"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149191"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="right">
    <goal name="algorithmA&#39;vc.3.2.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="56017"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2641367"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162274"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="53082"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="43936"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.4.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="58481"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2978231"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157584"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.5.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3063592"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="195908"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.5.0.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.5.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2796654"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164677"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.5.0.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="42954"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.5.0.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2665984"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164662"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.0.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2710770"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166576"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154112"/></proof>
        <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
         <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0.0" expl="postcondition">
         <transf name="replace" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))" arg2="(x3,x2)" arg3="in" arg4="Hinst">
          <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0.0.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2887517"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147477"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="compile_match" >
           <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0.0.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2664096"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147023"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct_term" arg1="x2">
            <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0.0.0.0.0" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145480"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.89" steps="2489"/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0.0.0.0.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="49519"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0.0.1" expl="equality hypothesis">
          <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="40891"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="algorithmA&#39;vc.5.2.0.0.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3638823"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159859"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="440"/></proof>
       <transf name="unfold" arg1="listset_to_listfset">
        <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="51979"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2634733"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168370"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.5.1.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.5.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2780585"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152882"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.5.1.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="42640"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.5.1.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3249895"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136020"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.1.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3158059"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144798"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.5.1.0.0.1.0.0" expl="postcondition">
        <transf name="replace" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))" arg2="(x1,x)" arg3="in" arg4="Hinst
">
         <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0.0" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="45142"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0.1" expl="equality hypothesis">
         <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="40564"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="algorithmA&#39;vc.5.0.0.0.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2784572"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135165"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.10" steps="442"/></proof>
       <transf name="unfold" arg1="listset_to_listfset">
        <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="51276"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2643166"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146930"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.5.2.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.5.2.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1755300"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138053"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.5.2.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="43117"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.5.2.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1765029"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134881"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.2.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2794386"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136701"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940740"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158023"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="replace" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))" arg2="(x3,x2)" arg3="in" arg4="Hinst
">
         <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2857352"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165227"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="induction_arg_ty_lex" arg1="right">
          <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0.0.0" expl="VC for algorithmA">
          <proof prover="2" obsolete="true"><result status="valid" time="1.03" steps="131285"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0.1" expl="equality hypothesis">
         <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="41016"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="algorithmA&#39;vc.5.1.0.0.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1596315"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141716"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="unfold" arg1="listset_to_listfset">
        <goal name="algorithmA&#39;vc.5.1.0.0.1.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="52703"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="47533"/></proof>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="615338"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145379"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_top_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="42413"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="46114"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10972510"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="802828"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120735"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0">
       <transf name="subst" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0">
        <transf name="unfold" arg1="findFirst" arg2="in" arg3="Hinst1">
         <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0">
         <transf name="compile_match" >
          <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1321114"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="68852"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="eliminate_let" >
           <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0">
           <transf name="eliminate_if" >
            <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0">
            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1295610"/></proof>
            <proof prover="2" obsolete="true"><result status="valid" time="0.45" steps="70533"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="145692"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="45495"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="41"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="891102"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="245380"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_conjuction_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="46348"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2843633"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126702"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5746229"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="800664"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.0">
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.1">
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.0">
       <transf name="destruct" arg1="Hinst">
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.0">
        <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="46625"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="1045"/></proof>
        </goal>
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.1">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150597"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="1273"/></proof>
        </goal>
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.2">
        <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="157260"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149413"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="1045"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="147654"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="45775"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="45"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="47211"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="47428"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="47639"/></proof>
 </goal>
 <goal name="case2_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1420210"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153218"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_top_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="43249"/></proof>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2413194"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130762"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.0.0">
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.0.1">
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763665"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150991"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_top_imples_p.0.0.0.1.1.0.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2865371"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149845"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="induction_arg_ty_lex" arg1="right">
         <goal name="case2_top_imples_p.0.0.0.1.1.0.0.0">
         <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="48992"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case2_top_imples_p.0.0.0.1.1.0.1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3083006"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152650"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(p = p1)">
         <goal name="case2_top_imples_p.0.0.0.1.1.0.1.0" expl="asserted formula">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145227"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.22" steps="1236"/></proof>
         </goal>
         <goal name="case2_top_imples_p.0.0.0.1.1.0.1.1">
         <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="191346"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="48150"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case2_top_imples_p.0.0.0.1.1.0.2">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2730492"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143638"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="induction_arg_ty_lex" arg1="right">
         <goal name="case2_top_imples_p.0.0.0.1.1.0.2.0">
         <proof prover="2" obsolete="true"><result status="valid" time="0.70" steps="97625"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case2_top_imples_p.0.0.0.1.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="47020"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="678658"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76449"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="43468"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2820755"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167202"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.0.0">
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.0.1">
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2764485"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157797"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2803642"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150282"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.0.0" expl="asserted formula">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2539531"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141203"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.0.1">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145784"/></proof>
         <transf name="induction_arg_ty_lex" arg1="right">
          <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.0.1.0">
          <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="49247"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3069466"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151587"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.1.0" expl="asserted formula">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2819502"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145441"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.1.1">
         <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="52920"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.2">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3060714"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152347"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="47297"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="51540"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="48823"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="49265"/></proof>
 </goal>
 <goal name="case3_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038738"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="56076"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_induction.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3098931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177591"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="case3_induction.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2113951"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163819"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="case3_induction.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3124275"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="44524"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="case3_induction.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2184173"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="196733"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x1 x)">
     <goal name="case3_induction.0.0.1.0">
     <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
      <goal name="case3_induction.0.0.1.0.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="case3_induction.0.0.1.0.0.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="48982"/></proof>
       </goal>
       <goal name="case3_induction.0.0.1.0.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2098763"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185892"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case3_induction.0.0.1.0.0.1.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2071877"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191423"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case3_induction.0.0.1.0.0.1.0.0">
         </goal>
         <goal name="case3_induction.0.0.1.0.0.1.0.1">
         </goal>
         <goal name="case3_induction.0.0.1.0.0.1.0.0">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1920182"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153287"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="case3_induction.0.0.1.0.0.1.1.0.0">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="598368"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="50078"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
          <goal name="case3_induction.0.0.1.0.0.1.1.0.1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1398010"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174807"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
           <goal name="case3_induction.0.0.1.0.0.1.1.0.1.0" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3343613"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163907"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
           <goal name="case3_induction.0.0.1.0.0.1.1.0.1.1">
           <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="56719"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="case3_induction.0.0.1.0.0.1.1.0.2">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1251389"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132799"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case3_induction.0.0.1.0.0.1.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="43398"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="var_in_clause">
 <proof prover="0"><result status="timeout" time="1.00" steps="2352841"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="195261"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="var_in_clause.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="concat_var_in.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3257317"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="200522"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="concat_var_in.0.1">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417304"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="200860"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" arg1="variable_in_clauselist">
    <goal name="concat_var_in.0.1.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4810076"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165997"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="concat_var_in.0.1.0.0">
     <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="44011"/></proof>
     </goal>
     <goal name="concat_var_in.0.1.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2693768"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173292"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="t2">
 <proof prover="0"><result status="timeout" time="1.00" steps="2416387"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="194175"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="var_in_right_then_var_in_clauselist_3">
 <proof prover="2"><result status="valid" time="0.18" steps="39792"/></proof>
 </goal>
 <goal name="t1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1772400"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="204869"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="t1.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="t1.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2063039"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="244247"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="t1.0.0.0">
    <proof prover="2"><result status="valid" time="0.14" steps="38466"/></proof>
    </goal>
    <goal name="t1.0.0.1">
    <proof prover="0"><result status="timeout" time="1.00" steps="1763627"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="210197"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="var_in_right_then_var_in_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2474456"/></proof>
 <proof prover="2"><result status="valid" time="0.19" steps="39133"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
</file>
</why3session>
