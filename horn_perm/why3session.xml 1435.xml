<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_perm.mlw"/>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="28251"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27394"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28065"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="28030"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="26200"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="23704"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="AFtoRS_RStoAF.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="27620"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="26550"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="118541"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="152559"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="527443"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145478"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="31867"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="40904"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="37140"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="35371"/></proof>
 </goal>
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="33182"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6573933"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2249636"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2469543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="379235"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="(val_all_top)">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="32491"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="33689"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="32237"/></proof>
 </goal>
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="29510"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="36022"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="66553"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="33311"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="43521"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="36599"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="39844"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.70" steps="90340"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="35927"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="39125"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2"><result status="valid" time="0.18" steps="39309"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2150181"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186545"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2617438"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1618350"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.60" steps="2996"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219067"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="785"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="214553"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="789"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2574935"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276417"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2487193"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276394"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.20" steps="40066"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="37713"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338455"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="408052"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472376"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149065"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2468665"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149903"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="168482"/></proof>
       <proof prover="4"><result status="valid" time="0.13" steps="797"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.19" steps="40362"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="793"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="42850"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="164183"/></proof>
 <proof prover="4"><result status="valid" time="0.30" steps="1941"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="38293"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="43543"/></proof>
 </goal>
 <goal name="listset_to_listfset_distr" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401631"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310305"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="listset_to_listfset_distr.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="left">
   <goal name="listset_to_listfset_distr.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="listset_to_listfset_distr.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" proved="true" >
     <goal name="listset_to_listfset_distr.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="42400"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="listset_to_listfset_distr.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="168075"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="130"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_then_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763725"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165584"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_then_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_then_right_nil.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1742718"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="99027"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.54" steps="1028"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_then_right_nil.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3087940"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="185604"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
    </goal>
    <goal name="not_subset_spec_then_right_nil.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2481526"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="222356"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H2">
     <goal name="not_subset_spec_then_right_nil.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2364975"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="191332"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
     </goal>
     <goal name="not_subset_spec_then_right_nil.0.0.1.1" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="11756008"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1697538"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" proved="true" arg1="H2">
      <goal name="not_subset_spec_then_right_nil.0.0.1.1.0" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="181465"/></proof>
      <proof prover="4"><result status="valid" time="0.03" steps="123"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_spec_then_right_not_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2822702"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="188476"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="subset_spec_then_right_not_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_spec_then_right_not_nil.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="subset_spec_then_right_not_nil.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="42441"/></proof>
    </goal>
    <goal name="subset_spec_then_right_not_nil.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2931503"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171718"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x3">
     <goal name="subset_spec_then_right_not_nil.0.0.1.0" proved="true">
     <transf name="subst" proved="true" arg1="x5">
      <goal name="subset_spec_then_right_not_nil.0.0.1.0.0" proved="true">
      <transf name="case" proved="true" arg1="(subset x4 c)">
       <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.0" expl="true case" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="151449"/></proof>
       <proof prover="4"><result status="valid" time="0.02" steps="44"/></proof>
       </goal>
       <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1" expl="false case" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2755501"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165025"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
        <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0" expl="false case" proved="true">
        <transf name="compile_match" proved="true" >
         <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0" expl="false case" proved="true">
         <transf name="eliminate_let" proved="true" >
          <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0" expl="false case" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0" expl="false case" proved="true">
           <transf name="destruct" proved="true" arg1="H">
            <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0" expl="false case" proved="true">
            <transf name="destruct" proved="true" arg1="H">
             <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.08" steps="35078"/></proof>
             </goal>
             <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.1" expl="false case" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2735101"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160913"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="H3">
              <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.1.0" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.17" steps="41217"/></proof>
              </goal>
              <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.1.1" expl="false case" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2405121"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148490"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="H3">
               <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.1.1.0" expl="false case" proved="true">
               <proof prover="2"><result status="timeout" time="1.00" steps="142615"/></proof>
               <proof prover="4"><result status="valid" time="0.02" steps="46"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_if_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2480379"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="255019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_if_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_if_right_nil.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="162716"/></proof>
   <proof prover="4"><result status="valid" time="0.20" steps="1106"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2090490"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182839"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="subset_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_findFirst.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2180989"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="193793"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="subset_findFirst.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175080"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191349"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="clauselist">
     <goal name="subset_findFirst.0.0.0.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2167519"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="147624"/></proof>
     <proof prover="4"><result status="valid" time="1.12" steps="1388"/></proof>
     </goal>
     <goal name="subset_findFirst.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2121716"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="187241"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="clauselist">
      <goal name="subset_findFirst.0.0.0.1.0" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="subset_findFirst.0.0.0.1.0.0" proved="true">
       <proof prover="2"><result status="valid" time="0.20" steps="43992"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="1560"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="concat_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2484317"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="289845"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="concat_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="concat_findFirst.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="163243"/></proof>
   <proof prover="4"><result status="valid" time="0.24" steps="1375"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="if_mem_then_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2416387"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="194175"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_mem_then_subset_set_smb.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1641680"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134631"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="135501"/></proof>
   <proof prover="4"><result status="valid" time="0.58" steps="1458"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955177"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166640"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_set_smb_clauselist.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_set_smb_clauselist.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="654319"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168986"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="subset_set_smb_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="46080"/></proof>
    </goal>
    <goal name="subset_set_smb_clauselist.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.37" steps="71900"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="610"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2656112"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180051"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_subset_set_smb.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_subset_set_smb.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="44239"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761004"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" proved="true" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="40832"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1707639"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172719"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.17" steps="41477"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816447"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177277"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0" proved="true">
        <transf name="replace" proved="true" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2102707"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131239"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2434241"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118676"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.13" steps="40740"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038971"/></proof>
           <proof prover="2"><result status="valid" time="0.13" steps="39624"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.23" steps="50371"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.14" steps="41150"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="462678"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154046"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="42570"/></proof>
  </goal>
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3344032"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45503"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal s &gt; 1)">
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2810011"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0" expl="true case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="s">
     <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131944"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="39261"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="39"/></proof>
      </goal>
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5846692"/></proof>
      <proof prover="2"><result status="valid" time="0.29" steps="49455"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="541"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197408"/></proof>
   <proof prover="2"><result status="valid" time="0.17" steps="49370"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2824061"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168386"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction_1.0" proved="true">
  <transf name="exists" proved="true" arg1="(val_all_top)">
   <goal name="subset_of_evalsetconjunction_1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.38" steps="71574"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="6097522"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126353"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2851663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123986"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" proved="true" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2486786"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.81" steps="99214"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="case" proved="true" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="39166"/></proof>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2393648"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113319"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.1.0" expl="false case (true case)" proved="true">
     <proof prover="2"><result status="valid" time="0.22" steps="45187"/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.1.1" expl="false case" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2358643"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119501"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.1.1.0" expl="false case" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2625644"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130499"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
       <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0" expl="false case" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.09" steps="35860"/></proof>
        </goal>
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.1" expl="false case" proved="true">
        <proof prover="0"><result status="valid" time="0.11" steps="188010"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="113977"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="contr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="40379"/></proof>
 </goal>
 <goal name="distr_exists" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5040407"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="40753"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294650"/></proof>
 <proof prover="2"><result status="valid" time="0.20" steps="45468"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="satisf_clauselist_all_mem_satisf" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277560"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192334"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="satisf_clauselist_all_mem_satisf.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373312"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201939"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="satisf_clauselist_all_mem_satisf.0.0" proved="true">
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="satisf_clauselist_all_mem_satisf.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="46542"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1331314"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98348"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_is_satisfiable_clauselist.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_is_satisfiable_clauselist.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_is_satisfiable_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="37989"/></proof>
    </goal>
    <goal name="sublist_is_satisfiable_clauselist.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1751538"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152242"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.18" steps="42535"/></proof>
     </goal>
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1090093"/></proof>
     <proof prover="2"><result status="valid" time="0.22" steps="48350"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2562090"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128444"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="129733"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="194"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="43082"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2659792"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="190490"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155371"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.2.0.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1860195"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121057"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.2.0.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027475"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139840"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="algorithmA_spec&#39;vc.2.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.09" steps="36585"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.2.0.0.0.1" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.23" steps="48452"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="749"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.2.0.0.0.2" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.21" steps="45539"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.2.0.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2208327"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129233"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.0.0.1.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.2.0.0.1.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.16" steps="46482"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.28" steps="758"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA_spec&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176750"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.2.1.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2029346"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150376"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.2.1.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2263923"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141838"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.1.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.2.1.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="121753"/></proof>
       <proof prover="4"><result status="valid" time="0.08" steps="803"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.2.1.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2407470"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142616"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.1.0.1.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="algorithmA_spec&#39;vc.2.1.0.1.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.43" steps="66626"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.16" steps="790"/></proof>
       </goal>
       <goal name="algorithmA_spec&#39;vc.2.1.0.1.0.1" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.25" steps="52330"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="603"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2754448"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="189375"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="48877"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="algorithmA_spec&#39;vc.3.0.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="44307"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.35" steps="62903"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3056519"/></proof>
  <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="algorithmA_spec&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2314210"/></proof>
    <proof prover="2"><result status="valid" time="0.23" steps="50846"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.4.0.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2311517"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160942"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="algorithmA_spec&#39;vc.4.0.1.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="algorithmA_spec&#39;vc.4.0.1.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0" expl="postcondition" proved="true">
       <transf name="destruct" proved="true" arg1="H">
        <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="destruct" proved="true" arg1="H">
         <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="instantiate" proved="true" arg1="subset_set_smb_clauselist" arg2="clauselist">
          <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1">
           <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="instantiate" proved="true" arg1="Hinst" arg2="x">
            <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2177305"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145996"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.46" steps="82617"/></proof>
             </goal>
             <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
             <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8160101"/></proof>
             <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="753162"/></proof>
             <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
             <transf name="assert" proved="true" arg1="(subset (singleton (convertRStoAF x) ) (set_smb_clauselist clauselist))">
              <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
              <proof prover="2"><result status="valid" time="0.25" steps="50104"/></proof>
              </goal>
              <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1" expl="postcondition" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1970076"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128878"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
               <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0" expl="postcondition" proved="true">
               <transf name="instantiate" proved="true" arg1="Hinst" arg2="(x5++x2)">
                <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0.0" expl="postcondition" proved="true">
                <transf name="destruct" proved="true" arg1="Hinst">
                 <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
                 <proof prover="2"><result status="timeout" time="1.00" steps="126108"/></proof>
                 <proof prover="4"><result status="valid" time="0.14" steps="869"/></proof>
                 </goal>
                 <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="postcondition" proved="true">
                 <proof prover="0" obsolete="true"><result status="valid" time="0.44" steps="1104830"/></proof>
                 <proof prover="2"><result status="valid" time="0.74" steps="107551"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_mem_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2199400"/></proof>
 <proof prover="2"><result status="valid" time="0.14" steps="44473"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="smb_generic" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502433"/></proof>
 <proof prover="2"><result status="valid" time="0.41" steps="71501"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2"><result status="valid" time="0.24" steps="53532"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="not_subset_spec_test" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="998797"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130723"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_test.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1428122"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130325"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="not_subset_spec_test.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_test.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="44745"/></proof>
    </goal>
    <goal name="not_subset_spec_test.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="133870"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="46"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2801256"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124941"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="equality_is_equal_list&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2920383"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="39453"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="42664"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="45057"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="44951"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_itself&#39;vc" expl="VC for is_equal_list_itself" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2646748"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="43539"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_equal_list_itself&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2514671"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165617"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_equal_list">
   <goal name="is_equal_list_itself&#39;vc.0.0" expl="VC for is_equal_list_itself" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2515158"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165611"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="is_equal_list_itself&#39;vc.0.0.0" expl="VC for is_equal_list_itself" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="45040"/></proof>
    </goal>
    <goal name="is_equal_list_itself&#39;vc.0.0.1" expl="VC for is_equal_list_itself" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2515989"/></proof>
    <proof prover="2"><result status="valid" time="0.16" steps="44961"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="is_equal_list_itself&#39;vc.0.0.2" expl="VC for is_equal_list_itself" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="126130"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="45"/></proof>
    </goal>
    <goal name="is_equal_list_itself&#39;vc.0.0.3" expl="VC for is_equal_list_itself" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="42962"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="is_equal_list_itself&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="42930"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2517181"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154111"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_equal_list_findFirst.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2225855"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165075"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" proved="true" arg1="x1">
   <goal name="is_equal_list_findFirst.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2610625"/></proof>
   <proof prover="2"><result status="valid" time="0.16" steps="44129"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="is_equal_list_findFirst.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2210166"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146734"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="subst" proved="true" arg1="x1">
    <goal name="is_equal_list_findFirst.0.1.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2376663"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171210"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="replace" proved="true" arg1="((Nil: list (fset atomicformula, rightside)) ++ x)" arg2="x">
     <goal name="is_equal_list_findFirst.0.1.0.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2425348"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131816"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" proved="true" arg1="(x = clauselist)">
      <goal name="is_equal_list_findFirst.0.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.23" steps="51999"/></proof>
      </goal>
      <goal name="is_equal_list_findFirst.0.1.0.0.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2232901"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="42685"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="is_equal_list_findFirst.0.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="2"><result status="valid" time="0.15" steps="45706"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
   <goal name="is_equal_list_findFirst.0.0" proved="true">
   <transf name="destruct_term" proved="true" arg1="clauselist">
    <goal name="is_equal_list_findFirst.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294383"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153564"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="clauselist">
     <goal name="is_equal_list_findFirst.0.0.0.0" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="is_equal_list_findFirst.0.0.0.0.0" proved="true">
      <transf name="destruct_term" proved="true" arg1="x3">
       <goal name="is_equal_list_findFirst.0.0.0.0.0.0" proved="true">
       <transf name="subst" proved="true" arg1="x5">
        <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0" proved="true">
        <transf name="compile_match" proved="true" >
         <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0.0" proved="true">
         <transf name="eliminate_let" proved="true" >
          <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0.0.0" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0.0.0.0" proved="true">
           <transf name="destruct" proved="true" arg1="H">
            <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0.0.0.0.0" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2096289"/></proof>
            <proof prover="2"><result status="valid" time="0.23" steps="51533"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="is_equal_list_findFirst.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.21" steps="49499"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423557"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="45576"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1580198"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="64851"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="43358"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="43176"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="100463"/></proof>
   <proof prover="4"><result status="valid" time="0.08" steps="244"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="43176"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2997534"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129390"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="43116"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6780028"/></proof>
   <proof prover="2"><result status="valid" time="0.23" steps="47120"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="103853"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="177"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="47120"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_to_match_findFirst&#39;vc" expl="VC for permut_to_match_findFirst" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permut_to_match_findFirst&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1671752"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137040"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="permut_to_match_findFirst&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="43807"/></proof>
   </goal>
   <goal name="permut_to_match_findFirst&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.21" steps="47520"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut_to_match_findFirst&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2054455"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149721"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="permut_to_match_findFirst&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2218241"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="143574"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="55"/></proof>
   <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
    <goal name="permut_to_match_findFirst&#39;vc.1.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2013640"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176847"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="result">
     <goal name="permut_to_match_findFirst&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="188757"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.63" steps="134966"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="695"/></proof>
     <transf name="subst" proved="true" arg1="result">
      <goal name="permut_to_match_findFirst&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="permut_to_match_findFirst&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="202899"/></proof>
       <proof prover="2"><result status="timeout" time="2.00" steps="470933"/></proof>
       <proof prover="4"><result status="valid" time="0.06" steps="615"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permut_to_match_findFirst&#39;vc.1.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338346"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="170099"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="result">
      <goal name="permut_to_match_findFirst&#39;vc.1.0.0.1.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2170427"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="198878"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="compile_match" proved="true" >
       <goal name="permut_to_match_findFirst&#39;vc.1.0.0.1.0.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2169809"/></proof>
       <proof prover="2"><result status="valid" time="0.16" steps="43412"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permut_to_match_findFirst&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="2153448"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="173970"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
    <goal name="permut_to_match_findFirst&#39;vc.1.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="1981389"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="176069"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="result">
     <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="2368970"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="168668"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="result">
      <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2193455"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="197341"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" proved="true" arg1="x9">
        <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="subst" proved="true" arg1="x11">
         <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compile_match" proved="true" >
          <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="eliminate_let" proved="true" >
           <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="destruct" proved="true" arg1="H">
             <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="destruct" proved="true" arg1="H1">
              <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
              <proof prover="0"><result status="timeout" time="1.00" steps="1905225"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="201896"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="unfold" proved="true" arg1="(++)" arg2="in" arg3="H2">
               <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
               <proof prover="2"><result status="timeout" time="1.00" steps="184296"/></proof>
               <proof prover="4"><result status="valid" time="0.11" steps="680"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
              <proof prover="0"><result status="timeout" time="1.00" steps="1716529"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="194124"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="replace" proved="true" arg1="(hd x2)" arg2="(hd x6)">
               <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="postcondition" proved="true">
               <proof prover="0"><result status="timeout" time="1.00" steps="1717957"/></proof>
               <proof prover="2"><result status="timeout" time="1.00" steps="191055"/></proof>
               <proof prover="4"><result status="timeout" time="1.00"/></proof>
               <transf name="assert" proved="true" arg1="(is_equal_list x (x6++x7))">
                <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
                <proof prover="2"><result status="timeout" time="1.00" steps="197609"/></proof>
                <proof prover="4"><result status="valid" time="0.04" steps="58"/></proof>
                </goal>
                <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="postcondition" proved="true">
                <proof prover="0"><result status="timeout" time="1.00" steps="1864544"/></proof>
                <proof prover="2"><result status="timeout" time="1.00" steps="190945"/></proof>
                <proof prover="4"><result status="timeout" time="1.00"/></proof>
                <transf name="replace" proved="true" arg1="x" arg2="(x6 ++ x7)">
                 <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="postcondition" proved="true">
                 <proof prover="0"><result status="timeout" time="1.00" steps="1769250"/></proof>
                 <proof prover="2"><result status="timeout" time="1.00" steps="191218"/></proof>
                 <proof prover="4"><result status="timeout" time="1.00"/></proof>
                 <transf name="unfold" proved="true" arg1="(++)">
                  <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="postcondition" proved="true">
                  <proof prover="2"><result status="valid" time="0.27" steps="54747"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
                 <proof prover="2"><result status="valid" time="0.17" steps="44973"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="2"><result status="timeout" time="1.00" steps="190284"/></proof>
               <proof prover="4"><result status="valid" time="0.02" steps="52"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permut_to_match_findFirst&#39;vc.1.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.05" steps="173846"/></proof>
     <proof prover="2"><result status="valid" time="0.28" steps="51259"/></proof>
     <proof prover="4"><result status="valid" time="0.08" steps="685"/></proof>
     <transf name="subst" proved="true" arg1="result">
      <goal name="permut_to_match_findFirst&#39;vc.1.1.0.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.06" steps="180663"/></proof>
      <proof prover="2"><result status="valid" time="0.25" steps="47741"/></proof>
      <proof prover="4"><result status="valid" time="0.07" steps="547"/></proof>
      <transf name="compile_match" proved="true" >
       <goal name="permut_to_match_findFirst&#39;vc.1.1.0.1.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.06" steps="180078"/></proof>
       <proof prover="2"><result status="valid" time="0.25" steps="47741"/></proof>
       <proof prover="4"><result status="valid" time="0.06" steps="547"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="exists_permut_that_match_findFirst&#39;vc" expl="VC for exists_permut_that_match_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3698408"/></proof>
 <proof prover="2"><result status="valid" time="0.47" steps="72278"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="46841"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="46313"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="50854"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080190"/></proof>
 <proof prover="2"><result status="valid" time="0.80" steps="127372"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2081573"/></proof>
 <proof prover="2"><result status="valid" time="0.28" steps="52040"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_cl1_cl2" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="46575"/></proof>
 </goal>
 <goal name="removeFromList_numocc">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2049629"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118254"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_numocc.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2247870"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122237"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0">
   <transf name="split_vc" >
    <goal name="removeFromList_numocc.0.0.0">
    <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="48576"/></proof>
    </goal>
    <goal name="removeFromList_numocc.0.0.1">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153913"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="278"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2">
 <transf name="split_vc" >
  <goal name="removeFromList_numocc_2.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0">
   <transf name="split_vc" >
    <goal name="removeFromList_numocc_2.0.0.0">
    <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="48814"/></proof>
    </goal>
    <goal name="removeFromList_numocc_2.0.0.1">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143145"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.09" steps="1291"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2105040"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118867"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_length.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2159512"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114480"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" arg1="(clauselist = Nil)">
   <goal name="removeFromList_length.0.0" expl="true case">
   <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="49553"/></proof>
   </goal>
   <goal name="removeFromList_length.0.1" expl="false case">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160427"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117680"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="removeFromList_length.0.1.0">
    <transf name="split_vc" >
     <goal name="removeFromList_length.0.1.0.0" expl="false case">
     <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="44770"/></proof>
     </goal>
     <goal name="removeFromList_length.0.1.0.1" expl="false case">
     <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="144156"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="650"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_permut">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1553188"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121707"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_permut.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1725343"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118513"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="permut">
   <goal name="removeFromList_permut.0.0">
   <transf name="split_vc" >
    <goal name="removeFromList_permut.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1655081"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119617"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" arg1="(x = elem)">
     <goal name="removeFromList_permut.0.0.0.0" expl="true case">
     <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="50975"/></proof>
     </goal>
     <goal name="removeFromList_permut.0.0.0.1" expl="false case">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1657192"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="50348"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_permut_concat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2091139"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122792"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_permut_concat.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1626528"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.38" steps="72715"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_general">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="47557"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_general.0">
  <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="46917"/></proof>
  </goal>
  <goal name="not_subset_general.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2443561"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118174"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_general.1.0">
   <transf name="split_vc" >
    <goal name="not_subset_general.1.0.0">
    <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="49034"/></proof>
    </goal>
    <goal name="not_subset_general.1.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778385"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="198244"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="50438"/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778925"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106286"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" arg1="not_subset_spec">
      <goal name="not_subset_general.1.0.1.1.0">
      <transf name="split_vc" >
       <goal name="not_subset_general.1.0.1.1.0.0">
       <proof prover="0" obsolete="true"><result status="valid" time="0.46" steps="721504"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135735"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="not_subset_general.1.0.1.1.0.1">
       <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="42435"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2009871"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138025"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="49856"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2370706"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="52197"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="55927"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2662931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134022"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="not_subset_spec" arg2="in" arg3="Requires">
   <goal name="not_subset_permut&#39;vc.3.0" expl="postcondition">
   <transf name="destruct_term" arg1="clauselist">
    <goal name="not_subset_permut&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2244355"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112455"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="replace" arg1="clauselist" arg2="(Cons x1 x)" arg3="in" arg4="Requires">
     <goal name="not_subset_permut&#39;vc.3.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2387328"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112318"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="compile_match" >
      <goal name="not_subset_permut&#39;vc.3.0.0.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2400060"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122559"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" arg1="x1">
       <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0" expl="postcondition">
       <transf name="subst" arg1="x3">
        <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2300526"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="225886"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="replace" arg1="clauselist" arg2="(Cons (x2, x1) x)" arg3="in" arg4="H">
          <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2254994"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210097"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="compile_match" >
           <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2392806"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210639"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="split_vc" >
            <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2274755"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="212910"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" arg1="(mem1 (x2,x1) clauselist2)">
             <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula">
             <proof prover="2" obsolete="true"><result status="valid" time="0.79" steps="172460"/></proof>
             </goal>
             <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2140372"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="215461"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" arg1="not_subset_general" arg2="clauselist">
              <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1.0" expl="postcondition">
              <transf name="instantiate" arg1="Hinst" arg2="c">
               <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="postcondition">
               <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="67232"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.1" expl="equality hypothesis">
          <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="44829"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="not_subset_permut&#39;vc.3.0.0.1" expl="equality hypothesis">
     <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="45124"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="not_subset_permut&#39;vc.3.0.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="49469"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes_findFirst_nil">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1231203"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="78080"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="permutacoes_findFirst_nil.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2070851"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131528"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="permutacoes_findFirst_nil.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="permutacoes_findFirst_nil.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="permutacoes_findFirst_nil.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="46222"/></proof>
     </goal>
     <goal name="permutacoes_findFirst_nil.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2128845"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127904"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="permutacoes_findFirst_nil.0.0.0.1.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2637565"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="216299"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="not_subset_spec_if_right_nil" arg2="clauselist">
        <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0">
        <transf name="instantiate" arg1="Hinst" arg2="c">
         <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0">
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0">
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.0" expl="destruct premise">
           <proof prover="2" obsolete="true"><result status="valid" time="0.63" steps="103201"/></proof>
           </goal>
           <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2473546"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144971"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="not_subset_permut" arg2="clauselist">
            <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0">
            <transf name="instantiate" arg1="Hinst" arg2="clauselist2">
             <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0">
             <transf name="instantiate" arg1="Hinst" arg2="c">
              <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0">
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="destruct premise">
               <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="45398"/></proof>
               </goal>
               <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2667921"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="178014"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.0" expl="destruct premise">
                <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="44243"/></proof>
                </goal>
                <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2653782"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="183474"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="instantiate" arg1="not_subset_spec_then_right_nil" arg2="clauselist2">
                 <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0">
                 <transf name="instantiate" arg1="Hinst" arg2="c">
                  <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0">
                  <transf name="destruct" arg1="Hinst">
                   <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0" expl="destruct premise">
                   <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="44417"/></proof>
                   </goal>
                   <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.1">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2910827"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="188701"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="destruct" arg1="Hinst">
                    <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.1.0">
                    <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="48959"/></proof>
                    <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="198"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2590609"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="215450"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="not_subset_spec_if_right_nil" arg2="clauselist">
        <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0">
        <transf name="instantiate" arg1="Hinst" arg2="c">
         <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0">
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0">
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.0" expl="destruct premise">
           <proof prover="2" obsolete="true"><result status="valid" time="0.40" steps="69714"/></proof>
           </goal>
           <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2758627"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145236"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="not_subset_permut" arg2="clauselist">
            <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0">
            <transf name="instantiate" arg1="Hinst" arg2="clauselist2">
             <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0">
             <transf name="instantiate" arg1="Hinst" arg2="c">
              <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0">
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.0" expl="destruct premise">
               <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="45313"/></proof>
               </goal>
               <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763802"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="183613"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.0" expl="destruct premise">
                <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="44158"/></proof>
                </goal>
                <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2695980"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186837"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="instantiate" arg1="not_subset_spec_then_right_nil" arg2="clauselist2">
                 <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0">
                 <transf name="instantiate" arg1="Hinst" arg2="c">
                  <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0.0">
                  <transf name="destruct" arg1="Hinst">
                   <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0.0.0" expl="destruct premise">
                   <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="44332"/></proof>
                   </goal>
                   <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0.0.1">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2936244"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191235"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="destruct" arg1="Hinst">
                    <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0.0.1.0">
                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="178364"/></proof>
                    <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="198"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA">
 <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="63100"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1836541"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138517"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1832725"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138701"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423108"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139760"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151415"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="226"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1327298"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.47" steps="86522"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2385706"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133330"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="permutacoes&#39;vc.2.0" expl="precondition">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="permutacoes&#39;vc.2.0.0" expl="precondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="permutacoes&#39;vc.2.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2324535"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="46743"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="permutacoes&#39;vc.2.0.0.1" expl="precondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2005457"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146019"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="permutacoes&#39;vc.2.0.0.1.0" expl="precondition">
      <transf name="destruct" arg1="Hinst">
       <goal name="permutacoes&#39;vc.2.0.0.1.0.0" expl="precondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2126984"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145989"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
        <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0" expl="precondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2163670"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134395"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="Hinst" arg2="c">
         <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0" expl="precondition">
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="47549"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.1" expl="precondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2167093"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134557"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.1.0" expl="precondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2139365"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="178492"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.1.0.0" expl="precondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816389"/></proof>
            <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="51772"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.1.0.1" expl="precondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1643962"/></proof>
            <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="51701"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="603"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permutacoes&#39;vc.2.0.0.1.0.1" expl="precondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761686"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="50897"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2321689"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157296"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" arg1="clauselist">
   <goal name="permutacoes&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1500063"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176119"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="subst" arg1="clauselist">
    <goal name="permutacoes&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="737684"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="194019"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="permutacoes&#39;vc.3.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="470678"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144003"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="eliminate_let" >
      <goal name="permutacoes&#39;vc.3.0.0.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="465041"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.49" steps="77095"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x5 x4)">
       <goal name="permutacoes&#39;vc.3.0.0.1.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="c">
        <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0" expl="postcondition">
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.0" expl="destruct premise">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="473235"/></proof>
         <proof prover="2"><result status="valid" time="0.12" steps="46806"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0" expl="postcondition">
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0" expl="postcondition">
           <proof prover="2"><undone/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1" expl="postcondition">
           <proof prover="0"><result status="timeout" time="1.00" steps="670614"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="107324"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="replace" arg1="(left ++ l)" arg2="(x3 ++ x2)" arg3="in" arg4="Hinst">
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0" expl="postcondition">
            <proof prover="0"><result status="timeout" time="1.00" steps="642738"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="115574"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.0" expl="postcondition">
             <transf name="instantiate" arg1="Hinst" arg2="c">
              <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.0.0" expl="postcondition">
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.0.0.0" expl="destruct premise">
               <proof prover="2"><undone/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.0.0.1" expl="postcondition">
               <proof prover="0"><result status="timeout" time="1.00" steps="651033"/></proof>
               <proof prover="2"><undone/></proof>
               <proof prover="4"><result status="timeout" time="1.00"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1" expl="equality hypothesis">
            <proof prover="2"><undone/></proof>
            <proof prover="4"><result status="valid" time="0.04" steps="54"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="474805"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161638"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" arg1="removeFromList_algorithmA" arg2="clauselist2">
          <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="c">
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0" expl="postcondition">
           <transf name="instantiate" arg1="Hinst" arg2="(x1, x)">
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0" expl="postcondition">
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0.0" expl="destruct premise">
             <proof prover="2"><result status="valid" time="0.12" steps="48202"/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.25" steps="1484"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0.1" expl="postcondition">
             <proof prover="2"><result status="timeout" time="1.00" steps="156135"/></proof>
             <proof prover="4"><result status="valid" time="0.24" steps="1484"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permutacoes&#39;vc.3.0.0.1" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="463751"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="348632"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="eliminate_let" >
      <goal name="permutacoes&#39;vc.3.0.0.1.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="463668"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.47" steps="77235"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x5 x4)">
       <goal name="permutacoes&#39;vc.3.0.0.1.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="c">
        <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0" expl="postcondition">
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><undone/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="474361"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140580"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0" expl="postcondition">
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0" expl="postcondition">
           <proof prover="2" obsolete="true"><undone/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="672534"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120450"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="replace" arg1="(left ++ l)" arg2="(x3 ++ x2)" arg3="in" arg4="Hinst">
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0" expl="postcondition">
            <proof prover="2" obsolete="true"><undone/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="54"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1" expl="equality hypothesis">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="643847"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118761"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0" expl="equality hypothesis">
             <transf name="instantiate" arg1="Hinst" arg2="c">
              <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0.0" expl="equality hypothesis">
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0.0.0" expl="destruct premise">
               <proof prover="2" obsolete="true"><undone/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0.0.1" expl="equality hypothesis">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="653124"/></proof>
               <proof prover="2" obsolete="true"><undone/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutacoes&#39;vc.3.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="51763"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_A&#39;vc" expl="VC for monotone_A">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2213754"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="110498"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="monotone_A&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1634038"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106893"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_A&#39;vc.0.0" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2081574"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182302"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
    <goal name="monotone_A&#39;vc.0.0.0" expl="variant decrease">
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="monotone_A&#39;vc.0.0.0.0" expl="variant decrease">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2270609"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="229242"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="monotone_A&#39;vc.0.0.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="46511"/></proof>
      </goal>
      <goal name="monotone_A&#39;vc.0.0.0.0.1" expl="variant decrease">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2265242"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176694"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="monotone_A&#39;vc.0.0.0.0.1.0" expl="variant decrease">
       <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="52958"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="441"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_A&#39;vc.0.1" expl="variant decrease">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149435"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="174"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="monotone_A&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2086113"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="50019"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="208"/></proof>
  </goal>
  <goal name="monotone_A&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2774932"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.31" steps="66375"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="monotone_A&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2381507"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148906"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_A&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2172763"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="69996"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="409"/></proof>
   </goal>
   <goal name="monotone_A&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1918429"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109612"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="eliminate_let" >
    <goal name="monotone_A&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1912688"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111675"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="exists_permut_that_match_findFirst" arg2="clauselist">
     <goal name="monotone_A&#39;vc.3.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1952454"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118138"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="Hinst" arg2="c">
      <goal name="monotone_A&#39;vc.3.1.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="d">
       <goal name="monotone_A&#39;vc.3.1.0.0.0.0" expl="postcondition">
       <transf name="destruct" arg1="Hinst">
        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="45001"/></proof>
        </goal>
        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1955986"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120638"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="56926"/></proof>
         </goal>
         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1962372"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132345"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1960323"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137782"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1960337"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137798"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0" expl="postcondition">
            <transf name="destruct" arg1="Hinst">
             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2072348"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152642"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0" expl="postcondition">
              <transf name="instantiate" arg1="Hinst" arg2="c">
               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0" expl="postcondition">
               <transf name="destruct" arg1="Hinst">
                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="destruct premise">
                <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="47650"/></proof>
                </goal>
                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1" expl="postcondition">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2099917"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154326"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0" expl="postcondition">
                 <transf name="destruct" arg1="Hinst">
                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0" expl="postcondition">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1778493"/></proof>
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149751"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="assert" arg1="(is_equal_list (left ++ l) (x3 ++ x2))">
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0" expl="asserted formula">
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161234"/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="267"/></proof>
                   </goal>
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1" expl="postcondition">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1778662"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152752"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0" expl="postcondition">
                    <transf name="instantiate" arg1="Hinst" arg2="d">
                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0" expl="postcondition">
                     <transf name="destruct" arg1="Hinst">
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="destruct premise">
                      <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="53152"/></proof>
                      </goal>
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="postcondition">
                      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1810057"/></proof>
                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155986"/></proof>
                      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                      <transf name="destruct" arg1="Hinst">
                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0" expl="postcondition">
                       <transf name="destruct" arg1="Hinst">
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.0" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2124408"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162063"/></proof>
                        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                        <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0" expl="asserted formula">
                         <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="52630"/></proof>
                         </goal>
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1" expl="postcondition">
                         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1950911"/></proof>
                         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159817"/></proof>
                         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                         <transf name="introduce_exists" >
                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0" expl="postcondition">
                          <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0" expl="postcondition">
                           <transf name="instantiate" arg1="Hinst" arg2="p">
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0" expl="postcondition">
                            <transf name="instantiate" arg1="Hinst" arg2="left">
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0" expl="postcondition">
                             <transf name="instantiate" arg1="Hinst" arg2="right">
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0" expl="postcondition">
                              <transf name="instantiate" arg1="Hinst" arg2="l">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0" expl="postcondition">
                               <transf name="instantiate" arg1="Hinst" arg2="x3">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0" expl="postcondition">
                                <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0" expl="postcondition">
                                 <transf name="instantiate" arg1="Hinst" arg2="x2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
                                  <transf name="destruct" arg1="Hinst">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0" expl="destruct premise">
                                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1470229"/></proof>
                                   <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="55194"/></proof>
                                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                   <transf name="destruct" arg1="Hinst">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.0" expl="destruct premise">
                                    <proof prover="2"><undone/></proof>
                                    </goal>
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1" expl="postcondition">
                                    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1473403"/></proof>
                                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160078"/></proof>
                                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                    <transf name="destruct" arg1="Hinst">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="destruct premise">
                                     <proof prover="2"><undone/></proof>
                                     <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="350"/></proof>
                                     </goal>
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1" expl="postcondition">
                                     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1438656"/></proof>
                                     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156200"/></proof>
                                     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                     <transf name="assert" arg1="((algorithmA_spec (x3 ++ x2) (add (convertRStoAF x) d)) ==&#39; (algorithmA_spec (left ++ l) (add (convertRStoAF p) d)))">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="asserted formula">
                                      <proof prover="2"><undone/></proof>
                                      <proof prover="4" obsolete="true"><result status="valid" time="0.56" steps="1458"/></proof>
                                      </goal>
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1" expl="postcondition">
                                      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1443462"/></proof>
                                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156324"/></proof>
                                      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                      <transf name="instantiate" arg1="permutacoes" arg2="clauselist">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0" expl="postcondition">
                                       <transf name="instantiate" arg1="Hinst" arg2="clauselist2">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0.0" expl="postcondition">
                                        <transf name="instantiate" arg1="Hinst" arg2="d">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0.0.0" expl="postcondition">
                                         <transf name="destruct" arg1="Hinst">
                                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0.0.0.0" expl="destruct premise">
                                          <proof prover="2"><undone/></proof>
                                          </goal>
                                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0.0.0.1" expl="postcondition">
                                          <proof prover="2"><undone/></proof>
                                          <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="823"/></proof>
                                          </goal>
                                         </transf>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1" expl="postcondition">
                                   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4320963"/></proof>
                                   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="992878"/></proof>
                                   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                                   <transf name="destruct" arg1="Hinst">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.0" expl="destruct premise">
                                    <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="54008"/></proof>
                                    </goal>
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1" expl="postcondition">
                                    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1765304"/></proof>
                                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162230"/></proof>
                                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                    <transf name="destruct" arg1="Hinst">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="destruct premise">
                                     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116223"/></proof>
                                     <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="350"/></proof>
                                     </goal>
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1" expl="postcondition">
                                     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1716868"/></proof>
                                     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166736"/></proof>
                                     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1" expl="postcondition">
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172276"/></proof>
                        <proof prover="4" obsolete="true"><result status="valid" time="0.10" steps="289"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1" expl="postcondition">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1782066"/></proof>
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173551"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="assert" arg1="(is_equal_list (left ++ l) (x3 ++ x2))">
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.0" expl="asserted formula">
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150143"/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="62"/></proof>
                   </goal>
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1" expl="postcondition">
                   <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="233390"/></proof>
                   <proof prover="2" obsolete="true"><result status="valid" time="0.94" steps="148124"/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="64"/></proof>
                   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0" expl="postcondition">
                    <transf name="instantiate" arg1="Hinst" arg2="d">
                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0" expl="postcondition">
                     <transf name="destruct" arg1="Hinst">
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="destruct premise">
                      <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="53063"/></proof>
                      </goal>
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="postcondition">
                      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1815914"/></proof>
                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165441"/></proof>
                      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                      <transf name="destruct" arg1="Hinst">
                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0" expl="postcondition">
                       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4693120"/></proof>
                       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="759269"/></proof>
                       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                       <transf name="destruct" arg1="Hinst">
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="261002"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176147"/></proof>
                        <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="70"/></proof>
                        </goal>
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2124214"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152519"/></proof>
                        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                        <transf name="instantiate" arg1="permutacoes" arg2="clauselist">
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0" expl="postcondition">
                         <transf name="instantiate" arg1="Hinst" arg2="clauselist2">
                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0" expl="postcondition">
                          <transf name="instantiate" arg1="Hinst" arg2="d">
                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0" expl="postcondition">
                           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2116815"/></proof>
                           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164243"/></proof>
                           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                           <transf name="destruct" arg1="Hinst">
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.0" expl="destruct premise">
                            <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="47331"/></proof>
                            </goal>
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1" expl="postcondition">
                            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2116030"/></proof>
                            <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="58028"/></proof>
                            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                            <transf name="assert" arg1="(x = p)">
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0" expl="asserted formula">
                             <proof prover="2" obsolete="true"><undone/></proof>
                             <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="326"/></proof>
                             </goal>
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1" expl="postcondition">
                             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2100527"/></proof>
                             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160635"/></proof>
                             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                             <transf name="assert" arg1="( (algorithmA_spec (x3 ++ x2) (add (convertRStoAF x) d)) ==&#39; algorithmA_spec (left ++ l) (add (convertRStoAF p) d))">
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0" expl="asserted formula">
                              <proof prover="2" obsolete="true"><undone/></proof>
                              <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="76"/></proof>
                              </goal>
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1" expl="postcondition">
                              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1926272"/></proof>
                              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155223"/></proof>
                              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                              <transf name="assert" arg1="(permut (x3 ++ x2) (left ++ l))">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2149427"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154587"/></proof>
                               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.0" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1960158"/></proof>
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150580"/></proof>
                                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                <transf name="introduce_exists" >
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.0.0" expl="asserted formula">
                                 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2075835"/></proof>
                                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153930"/></proof>
                                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                 <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0.1.0.0" expl="asserted formula">
                                  <transf name="instantiate" arg1="Hinst" arg2="p">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0.1.0.0.0" expl="asserted formula">
                                   <transf name="instantiate" arg1="Hinst" arg2="left">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0.1.0.0.0.0" expl="asserted formula">
                                    <transf name="instantiate" arg1="Hinst" arg2="right">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0.1.0.0.0.0.0" expl="asserted formula">
                                     <transf name="instantiate" arg1="Hinst" arg2="l">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0.1.0.0.0.0.0.0" expl="asserted formula">
                                      <transf name="instantiate" arg1="Hinst" arg2="x3">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0" expl="asserted formula">
                                       <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0.0" expl="asserted formula">
                                        <transf name="instantiate" arg1="Hinst" arg2="x2">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="asserted formula">
                                         <proof prover="2"><undone/></proof>
                                         <proof prover="4"><result status="valid" time="0.22" steps="721"/></proof>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1" expl="asserted formula">
                                <proof prover="2" obsolete="true"><undone/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1" expl="postcondition">
                               <proof prover="2" obsolete="true"><undone/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1679141"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="102877"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="50094"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="48283"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2143698"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180577"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1070581"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134498"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)">
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)">
     <transf name="destruct" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="683215"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="46164"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.98" steps="1638"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="139980"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111349"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.97" steps="1662"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114963"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.80" steps="1542"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723350"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143911"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="bot_not_in_set_then_sat_set&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="50199"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="48361"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3128856"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138541"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_set">
   <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0" expl="VC for bot_not_in_set_then_sat_set">
   <transf name="exists" arg1="(val_all_top)">
    <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0.0">
    <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="46004"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p">
 <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="275099"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157225"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="54574"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3347062"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="48162"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case3">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="48336"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case4">
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="48967"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1412420"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="46862"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2834289"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156889"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="431"/></proof>
 </goal>
 <goal name="findFirst&#39;vc" expl="VC for findFirst">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4198129"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147526"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="findFirst&#39;vc.0" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115050"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="44"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423265"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219510"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.1.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="49510"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="49583"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="48"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.2" expl="postcondition">
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136920"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2724201"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161412"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1469582"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="70581"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.0.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="48052"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="168"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="48152"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="53"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133799"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="53"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1344105"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79040"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.1.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="51384"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="171"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="52095"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="197"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126408"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="197"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1447388"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73094"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.2.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="50721"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="53"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="52941"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="655"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114304"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="655"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.3" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1339592"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79631"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.3.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="48106"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="521"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2619652"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="48181"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="194"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.2" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15911231"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127883"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="194"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.4" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="50078"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940533"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165423"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2694447"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160019"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9086325"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890140"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="1.45" steps="203347"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="53"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2621410"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140350"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.40" steps="69281"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.2" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="146286"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.22" steps="42691"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.52" steps="72798"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2715442"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159903"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2654036"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="52953"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="1.20" steps="201854"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="53"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616339"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157998"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.45" steps="65703"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="489"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2608141"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156385"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.50" steps="72775"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417057"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115393"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140010"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="51759"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3912485"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135828"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1950911"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150315"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.2.0.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.91" steps="127638"/></proof>
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.2.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2796654"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164677"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.2.0.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="47518"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.2.0.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2665984"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164662"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.2.0.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2710770"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166576"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.2.0.0.0.1.0.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154112"/></proof>
        <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
         <goal name="algorithmA&#39;vc.2.0.0.0.1.0.0.0" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="50270"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.91" steps="2669"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2059962"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151056"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.2.1.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.2.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3174189"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153843"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.2.1.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="47988"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.2.1.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2282404"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151641"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.2.1.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2249898"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164986"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.2.1.0.0.1.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1994485"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136986"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="1041"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.2.1.0.0.1.0.1" expl="postcondition">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5969685"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141653"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.17" steps="854"/></proof>
        <transf name="destruct" arg1="Ensures2">
         <goal name="algorithmA&#39;vc.4.0.0.0.1.0.1.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2145912"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160666"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Ensures2">
          <goal name="algorithmA&#39;vc.4.0.0.0.1.0.1.0.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2163297"/></proof>
          <proof prover="2"><result status="failure" time="0.00"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2313043"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181095"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616063"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="49559"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="x">
    <goal name="algorithmA&#39;vc.3.1.0" expl="VC for algorithmA">
    <proof prover="2"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723676"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159970"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="x">
    <goal name="algorithmA&#39;vc.3.1.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.45" steps="81919"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2641367"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162274"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2234169"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144702"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="algorithmA&#39;vc.4.0.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="58693"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1807059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151207"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.4.1.0" expl="postcondition">
    <transf name="induction_arg_ty_lex" arg1="clauselist">
     <goal name="algorithmA&#39;vc.4.1.0.0" expl="VC for algorithmA">
     <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="65711"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="54667"/></proof>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1465171"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="201979"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_top_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="48226"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="51674"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080277"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129798"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="137037"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0">
       <transf name="subst" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0">
        <transf name="unfold" arg1="findFirst" arg2="in" arg3="Hinst1">
         <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0">
         <transf name="compile_match" >
          <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1321114"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="68852"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="eliminate_let" >
           <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0">
           <transf name="eliminate_if" >
            <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="740107"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153256"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.0">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="710558"/></proof>
             <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="55245"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1535778"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126180"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="replace" arg1="(left ++ x2)" arg2="(Nil: list (fset atomicformula, rightside))" arg3="in" arg4="Hinst">
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0">
               <proof prover="2"><result status="failure" time="0.00"/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="57"/></proof>
               </goal>
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="600885"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76501"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Nil: list (fset atomicformula, rightside))">
                <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0" expl="equality hypothesis">
                <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF x) (singleton ATop))">
                 <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0.0" expl="equality hypothesis">
                 <transf name="destruct" arg1="Hinst">
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="destruct premise">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="603080"/></proof>
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="70001"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="destruct" arg1="Hinst">
                   <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0">
                   <transf name="destruct" arg1="Hinst">
                    <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0">
                    <proof prover="2"><result status="failure" time="0.00"/></proof>
                    <proof prover="4"><result status="valid" time="0.14" steps="233"/></proof>
                    </goal>
                    <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1">
                    <proof prover="2"><result status="failure" time="0.00"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="equality hypothesis">
                  <proof prover="2"><result status="failure" time="0.00"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="912895"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140175"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="672568"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115514"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="replace" arg1="(left ++ x2)" arg2="(Nil: list (fset atomicformula, rightside))" arg3="in" arg4="Hinst">
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="796049"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114625"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Nil: list (fset atomicformula, rightside))">
                <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0">
                <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF x) (singleton ATop))">
                 <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0">
                 <transf name="destruct" arg1="Hinst">
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="destruct premise">
                  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="180814"/></proof>
                  <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="58464"/></proof>
                  <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="226"/></proof>
                  </goal>
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1">
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123482"/></proof>
                  <transf name="destruct" arg1="Hinst">
                   <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0">
                   <transf name="destruct" arg1="Hinst">
                    <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0">
                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166076"/></proof>
                    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="256"/></proof>
                    </goal>
                    <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1">
                    <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="66725"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2547162"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141941"/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="57"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="891102"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.92" steps="103390"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_conjuction_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="51908"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2843633"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126702"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5746229"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="800664"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.0">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166328"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="1207"/></proof>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.1">
       <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="52137"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="1201"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="54469"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="54667"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="54878"/></proof>
 </goal>
 <goal name="case2_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1420210"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.75" steps="107009"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_top_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="48204"/></proof>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2413194"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130762"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763665"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145157"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.74" steps="3185"/></proof>
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.0.1">
       <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="52954"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.55" steps="3172"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1131202"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="1.33" steps="121610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="48423"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2820755"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167202"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1720933"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126325"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.62" steps="2961"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1797228"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="53210"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.47" steps="2951"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="59214"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="56062"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="56267"/></proof>
 </goal>
 <goal name="case3_induction_general">
 <transf name="split_vc" >
  <goal name="case3_induction_general.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3197985"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168576"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="case3_induction_general.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2440883"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109581"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="case3_induction_general.0.0.0">
    <proof prover="0" obsolete="true"><result status="valid" time="0.02"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="50551"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="40"/></proof>
    </goal>
    <goal name="case3_induction_general.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2987140"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149689"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x1 x)">
     <goal name="case3_induction_general.0.0.1.0">
     <transf name="instantiate" arg1="Hinst" arg2="c">
      <goal name="case3_induction_general.0.0.1.0.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="case3_induction_general.0.0.1.0.0.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="49611"/></proof>
       </goal>
       <goal name="case3_induction_general.0.0.1.0.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2870660"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115132"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case3_induction_general.0.0.1.0.0.1.0">
        <transf name="destruct" arg1="Hinst">
         <goal name="case3_induction_general.0.0.1.0.0.1.0.0">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1370065"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="55757"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
          <goal name="case3_induction_general.0.0.1.0.0.1.0.1.0" expl="asserted formula">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3779430"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151789"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(is_satisfiable_clauselist right)">
           <goal name="case3_induction_general.0.0.1.0.0.1.0.1.0.0" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="744055"/></proof>
           <proof prover="2" obsolete="true"><result status="valid" time="0.69" steps="96341"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
           <goal name="case3_induction_general.0.0.1.0.0.1.0.1.0.1" expl="asserted formula">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149850"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.26" steps="857"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="case3_induction_general.0.0.1.0.0.1.0.1.1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1510450"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147114"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(is_satisfiable_clauselist (left++l))">
           <goal name="case3_induction_general.0.0.1.0.0.1.0.1.1.0" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2488406"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124575"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.96" steps="2716"/></proof>
           </goal>
           <goal name="case3_induction_general.0.0.1.0.0.1.0.1.1.1">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="721019"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119836"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="case3_induction_general.0.0.1.0.0.1.0.1">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="751335"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="56433"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424592"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="60663"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
</file>
</why3session>
