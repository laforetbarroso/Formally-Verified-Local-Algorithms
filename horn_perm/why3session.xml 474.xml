<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_perm.mlw"/>
<theory name="Evals" proved="true">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="101883"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="323693"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="502065"/></proof>
 <proof prover="1"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="166565"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="27361"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="36362"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="32013"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="30230"/></proof>
 </goal>
</theory>
<theory name="SAT" proved="true">
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28537"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1694285"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="384447"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1704407"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1737295"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="id_val">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="28185"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="29133"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="27927"/></proof>
 </goal>
</theory>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="30297"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28488"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="29006"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="29853"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="148334"/></proof>
 <proof prover="4"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1479244"/></proof>
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="4" timelimit="5"><result status="valid" time="2.22" steps="1723"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.13" steps="29347"/></proof>
     <proof prover="5"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.13" steps="29226"/></proof>
     <proof prover="5"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="25457"/></proof>
     <proof prover="5"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="27230"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="33452"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="63927"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="30895"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="40915"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="34018"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="37262"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.70" steps="86420"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="33504"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="36548"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="36729"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="199068"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2412901"/></proof>
        <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1462024"/></proof>
        <proof prover="4" timelimit="5"><result status="valid" time="3.78" steps="2968"/></proof>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2525762"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276021"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="2"><result status="valid" time="0.07" steps="28328"/></proof>
          </goal>
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423268"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="329371"/></proof>
          <proof prover="4"><result status="valid" time="1.37" steps="596"/></proof>
          </goal>
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.2" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2528937"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="288567"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x1">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.2.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="37647"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.2.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.16" steps="35289"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="2410647"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1202674"/></proof>
    <proof prover="4" timelimit="5"><result status="valid" time="2.37" steps="2035"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2489260"/></proof>
   <proof prover="2"><result status="valid" time="0.35" steps="63956"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="2.22" steps="2035"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="40269"/></proof>
 </goal>
 <goal name="pp_same_p" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="51239"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="143990"/></proof>
 <proof prover="4"><result status="valid" time="0.31" steps="1867"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="35723"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="39331"/></proof>
 </goal>
 <goal name="fset_from_list_distr" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401631"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310305"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="fset_from_list_distr.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="left">
   <goal name="fset_from_list_distr.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fset_from_list_distr.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" proved="true" >
     <goal name="fset_from_list_distr.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="37719"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="fset_from_list_distr.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="178511"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="111"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_then_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763725"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165584"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_then_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_then_right_nil.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1742718"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="99027"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.54" steps="1028"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_then_right_nil.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3078664"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="171839"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
    </goal>
    <goal name="not_subset_spec_then_right_nil.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3087940"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="221483"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H2">
     <goal name="not_subset_spec_then_right_nil.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2411863"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="218166"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
     </goal>
     <goal name="not_subset_spec_then_right_nil.0.0.1.1" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="11240838"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1672870"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" proved="true" arg1="H2">
      <goal name="not_subset_spec_then_right_nil.0.0.1.1.0" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="199259"/></proof>
      <proof prover="4"><result status="valid" time="0.03" steps="114"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_if_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2480379"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="255019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_if_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_if_right_nil.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="178445"/></proof>
   <proof prover="4"><result status="valid" time="0.18" steps="998"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_findFirst" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4205157"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1122816"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="subset_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_findFirst.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2180989"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="193793"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="subset_findFirst.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175080"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191349"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="clauselist">
     <goal name="subset_findFirst.0.0.0.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2167519"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="128964"/></proof>
     <proof prover="4"><result status="valid" time="1.12" steps="1632"/></proof>
     </goal>
     <goal name="subset_findFirst.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2121716"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="187241"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="clauselist">
      <goal name="subset_findFirst.0.0.0.1.0" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="subset_findFirst.0.0.0.1.0.0" proved="true">
       <proof prover="2"><result status="valid" time="0.19" steps="40168"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.21" steps="1504"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="concat_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2484317"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="289845"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="concat_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="concat_findFirst.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.50" steps="94202"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15682906"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="613950"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="136746"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="163"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="39356"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940484"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128199"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3084015"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136953"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="cl">
    <goal name="algorithmA_spec&#39;vc.2.0.0" expl="VC for algorithmA_spec">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="548390"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171380"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA_spec&#39;vc.2.0.0.0" expl="precondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="2937453"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="146809"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="algorithmA_spec&#39;vc.2.0.0.1" expl="precondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="912289"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="176792"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="3172040"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="186666"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="36563"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="37078"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2659792"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="190490"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763374"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171381"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA_spec&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10402042"/></proof>
    <proof prover="2"><result status="valid" time="0.19" steps="39609"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176750"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.4.1.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2029346"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150376"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.4.1.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2407470"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142616"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.4.1.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="algorithmA_spec&#39;vc.4.1.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="algorithmA_spec&#39;vc.4.1.0.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
        <transf name="compile_match" proved="true" >
         <goal name="algorithmA_spec&#39;vc.4.1.0.0.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="167448"/></proof>
         <proof prover="4"><result status="valid" time="0.06" steps="375"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.4.1.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2263923"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141838"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.4.1.0.1.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.4.1.0.1.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.22" steps="46487"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="456"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2754448"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="189375"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.25" steps="37569"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="50142"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2882669"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162679"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="smb.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2254218"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155898"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="smb.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2713827"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="212307"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="clauselist">
    <goal name="smb.0.0.0" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
     <goal name="smb.0.0.0.0" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="smb.0.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.16" steps="42003"/></proof>
      </goal>
      <goal name="smb.0.0.0.0.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2932748"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="178890"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="(findFirst clauselist (singleton ATop))">
       <goal name="smb.0.0.0.0.1.0" proved="true">
       <transf name="replace" proved="true" arg1="(findFirst clauselist (singleton ATop))" arg2="(x1,x)" arg3="in" arg4="Hinst">
        <goal name="smb.0.0.0.0.1.0.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2761944"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167298"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="smb.0.0.0.0.1.0.0.0" proved="true">
         <transf name="destruct_term" proved="true" arg1="x">
          <goal name="smb.0.0.0.0.1.0.0.0.0" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2598333"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="189506"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="subst" proved="true" arg1="x2">
           <goal name="smb.0.0.0.0.1.0.0.0.0.0" proved="true">
           <transf name="compile_match" proved="true" >
            <goal name="smb.0.0.0.0.1.0.0.0.0.0.0" proved="true">
            <transf name="destruct_term" proved="true" arg1="x1">
             <goal name="smb.0.0.0.0.1.0.0.0.0.0.0.0" proved="true">
             <transf name="replace" proved="true" arg1="x3" arg2="(x2, x1)" arg3="in" arg4="Hinst">
              <goal name="smb.0.0.0.0.1.0.0.0.0.0.0.0.0" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2928779"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135872"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="compile_match" proved="true" >
               <goal name="smb.0.0.0.0.1.0.0.0.0.0.0.0.0.0" proved="true">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2751460"/></proof>
               <proof prover="2"><result status="timeout" time="1.00" steps="188291"/></proof>
               <proof prover="4"><result status="valid" time="0.16" steps="1001"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="smb.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="2"><result status="valid" time="0.09" steps="35916"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="smb.0.0.0.0.1.0.0.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.22" steps="43776"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="smb.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="2"><result status="valid" time="0.10" steps="36401"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model">
 <proof prover="0"><result status="timeout" time="1.00" steps="3582827"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="207814"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="herbrand_model.0">
  <proof prover="0"><result status="timeout" time="1.00" steps="2566079"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="241718"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="herbrand_model.1">
  <proof prover="0"><result status="timeout" time="1.00" steps="2848730"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="178209"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="findFirst&#39;vc" expl="VC for findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3016002"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="208563"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findFirst&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="202012"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="40"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423265"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219510"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="findFirst&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2"><result status="valid" time="0.14" steps="39688"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="39761"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="44"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="179719"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="44"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.93" steps="141350"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940533"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165423"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="findFirst&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2715442"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159903"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="findFirst&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2608141"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156385"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.33" steps="65577"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616339"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157998"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.1.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.0.1.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.29" steps="53442"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="489"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.2" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2654036"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="52953"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.2.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.0.2.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.39" steps="56186"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2694447"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160019"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="findFirst&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="146286"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.22" steps="42691"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.39" steps="65397"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2621410"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140350"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.33" steps="51191"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.2" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9086325"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890140"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.2.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.1.2.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.27" steps="56332"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="272"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.1" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="findFirst&#39;vc.2" expl="postcondition">
  <proof prover="2"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2459743"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140215"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="60549"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="42898"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="37549"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3143498"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="215145"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.3.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2897124"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="178720"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" arg1="variable_in_clauselist_program">
    <goal name="algorithmA&#39;vc.3.0.0" expl="VC for algorithmA">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2164174"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156937"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" arg1="cl">
     <goal name="algorithmA&#39;vc.3.0.0.0" expl="VC for algorithmA">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2288180"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160665"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="cl">
      <goal name="algorithmA&#39;vc.3.0.0.0.0" expl="VC for algorithmA">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2672345"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159704"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="compile_match" >
       <goal name="algorithmA&#39;vc.3.0.0.0.0.0" expl="VC for algorithmA">
       <proof prover="0"><result status="timeout" time="1.00" steps="3275381"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="143368"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.3.0.0.1" expl="VC for algorithmA" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2243706"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142636"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="algorithmA&#39;vc.3.0.0.1.0" expl="VC for algorithmA" proved="true">
      <proof prover="2"><result status="valid" time="0.09" steps="37611"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.3.0.0.1.1" expl="VC for algorithmA" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2807018"/></proof>
      <proof prover="2"><result status="valid" time="0.10" steps="36545"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="41197"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3150841"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160319"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="40316"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2372500"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="207734"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA&#39;vc.5.1.0" expl="VC for algorithmA" proved="true">
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA&#39;vc.5.1.0.0" expl="VC for algorithmA" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2179070"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135698"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA&#39;vc.5.1.0.0.0" expl="VC for algorithmA" proved="true">
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="algorithmA&#39;vc.5.1.0.0.0.0" expl="VC for algorithmA" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="algorithmA&#39;vc.5.1.0.0.0.0.0" expl="VC for algorithmA" proved="true">
        <transf name="compile_match" proved="true" >
         <goal name="algorithmA&#39;vc.5.1.0.0.0.0.0.0" expl="VC for algorithmA" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="137376"/></proof>
         <proof prover="4"><result status="valid" time="0.32" steps="2412"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="algorithmA&#39;vc.5.1.0.1.0.0" expl="VC for algorithmA">
       <proof prover="2"><undone/></proof>
       <proof prover="4"><result status="valid" time="0.11" steps="646"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.5.1.0.1" expl="VC for algorithmA" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2361433"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136178"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct_term" proved="true" arg1="x1">
      <goal name="algorithmA&#39;vc.5.1.0.1.0" expl="VC for algorithmA" proved="true">
      <transf name="subst" proved="true" arg1="x3">
       <goal name="algorithmA&#39;vc.5.1.0.1.0.0" expl="VC for algorithmA" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="algorithmA&#39;vc.5.1.0.1.0.0.0" expl="VC for algorithmA" proved="true">
        <transf name="compile_match" proved="true" >
         <goal name="algorithmA&#39;vc.5.1.0.1.0.0.0.0" expl="VC for algorithmA" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="166512"/></proof>
         <proof prover="4"><result status="valid" time="0.10" steps="650"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="algorithmA&#39;vc.5.1.0.1.1" expl="VC for algorithmA" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="146398"/></proof>
      <proof prover="4"><result status="valid" time="0.14" steps="650"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2411939"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145051"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="41034"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.27" steps="54419"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.7" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="3573939"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="184665"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="44992"/></proof>
 </goal>
 <goal name="case1_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="615338"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145379"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_top_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2"><result status="valid" time="0.24" steps="47603"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="clauselist">
    <goal name="case1_top_imples_p.1.0.0" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
     <goal name="case1_top_imples_p.1.0.0.0" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.16" steps="43712"/></proof>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.0.1" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12194693"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="702125"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.0.1.0" expl="destruct premise" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="151442"/></proof>
       <proof prover="2"><result status="valid" time="0.16" steps="43870"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="47"/></proof>
       </goal>
       <goal name="case1_top_imples_p.1.0.0.0.1.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2938343"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171652"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="subst" proved="true" arg1="clauselist">
        <goal name="case1_top_imples_p.1.0.0.0.1.1.0" proved="true">
        <transf name="subst" proved="true" arg1="clause">
         <goal name="case1_top_imples_p.1.0.0.0.1.1.0.0" proved="true">
         <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="Hinst1">
          <goal name="case1_top_imples_p.1.0.0.0.1.1.0.0.0" proved="true">
          <transf name="compile_match" proved="true" >
           <goal name="case1_top_imples_p.1.0.0.0.1.1.0.0.0.0" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="765312"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114816"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="eliminate_let" proved="true" >
            <goal name="case1_top_imples_p.1.0.0.0.1.1.0.0.0.0.0" proved="true">
            <transf name="eliminate_if" proved="true" >
             <goal name="case1_top_imples_p.1.0.0.0.1.1.0.0.0.0.0.0" proved="true">
             <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1221430"/></proof>
             <proof prover="2"><result status="valid" time="0.80" steps="98147"/></proof>
             <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1276645"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="53339"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_conjuction_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="clauselist">
    <goal name="case1_conjuction_imples_p.0.0.0" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
     <goal name="case1_conjuction_imples_p.0.0.0.0" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.17" steps="43953"/></proof>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.0.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3193844"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140018"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.0.1.0" expl="destruct premise" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="154983"/></proof>
       <proof prover="2"><result status="valid" time="0.17" steps="44111"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="51"/></proof>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.0.1.1" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13233279"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="961163"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0" proved="true">
        <transf name="destruct_term" proved="true" arg1="right">
         <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2772958"/></proof>
         <proof prover="2"><result status="valid" time="0.33" steps="60474"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="990"/></proof>
         </goal>
         <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1" proved="true">
         <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="156525"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="44380"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="51"/></proof>
         <transf name="assert" proved="true" arg1="(right = Nil)">
          <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="7904"/></proof>
          <proof prover="2"><result status="valid" time="0.10" steps="38989"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="48"/></proof>
          </goal>
          <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1" proved="true">
          <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="156527"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="44385"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="51"/></proof>
          <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="Hinst1">
           <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1.0" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="159425"/></proof>
           <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="44800"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="53"/></proof>
           <transf name="subst" proved="true" arg1="clauselist">
            <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1.0.0" proved="true">
            <transf name="subst" proved="true" arg1="clause">
             <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1.0.0.0" proved="true">
             <transf name="compile_match" proved="true" >
              <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1.0.0.0.0" proved="true">
              <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="162704"/></proof>
              <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="46091"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="51"/></proof>
              <transf name="eliminate_let" proved="true" >
               <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1.0.0.0.0.0" proved="true">
               <transf name="eliminate_if" proved="true" >
                <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1.0.0.0.0.0.0" proved="true">
                <transf name="destruct" proved="true" arg1="Hinst1">
                 <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1.0.0.0.0.0.0.0" proved="true">
                 <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="162622"/></proof>
                 <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="46338"/></proof>
                 <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="51"/></proof>
                 <transf name="destruct" proved="true" arg1="Hinst1">
                  <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
                  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="164863"/></proof>
                  <proof prover="2"><result status="valid" time="0.27" steps="53901"/></proof>
                  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="51"/></proof>
                  </goal>
                  <goal name="case1_conjuction_imples_p.0.0.0.0.1.1.0.1.1.0.0.0.0.0.0.0.1" proved="true">
                  <proof prover="2"><result status="valid" time="0.17" steps="46461"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="44480"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="44677"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="44920"/></proof>
 </goal>
 <goal name="case2_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1991603"/></proof>
 <proof prover="2"><result status="valid" time="0.32" steps="58521"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_conjunction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1152857"/></proof>
 <proof prover="2"><result status="valid" time="0.33" steps="59477"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="48961"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="46132"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="46537"/></proof>
 </goal>
 <goal name="case3_induction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2929906"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164178"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case3_induction.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3098931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177591"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" proved="true" arg1="clauselist">
   <goal name="case3_induction.0.0" proved="true">
   <transf name="case" proved="true" arg1="(length clauselist &gt;= 1)">
    <goal name="case3_induction.0.0.0" expl="true case" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2480208"/></proof>
    <proof prover="2"><result status="valid" time="0.51" steps="74294"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="case3_induction.0.0.1" expl="false case" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="197773"/></proof>
    <proof prover="2"><result status="valid" time="0.31" steps="47415"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction.0.1" proved="true">
   <transf name="case" proved="true" arg1="(length clauselist &gt; 1)">
    <goal name="case3_induction.0.1.0" expl="true case" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2551482"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176897"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
     <goal name="case3_induction.0.1.0.0" expl="true case" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="clauselist">
      <goal name="case3_induction.0.1.0.0.0" expl="true case" proved="true">
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
       <goal name="case3_induction.0.1.0.0.0.0" expl="true case" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="162822"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="47494"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="45"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case3_induction.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.18" steps="46672"/></proof>
        </goal>
        <goal name="case3_induction.0.1.0.0.0.0.1" expl="true case" proved="true">
        <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="162774"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="47411"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="45"/></proof>
        <transf name="destruct_term" proved="true" arg1="(findFirst clauselist (singleton ATop))">
         <goal name="case3_induction.0.1.0.0.0.0.1.0" expl="true case" proved="true">
         <proof prover="2"><result status="valid" time="0.19" steps="47642"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="case3_induction.0.1.1" expl="false case" proved="true">
    <proof prover="2"><result status="valid" time="0.32" steps="48517"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.59" steps="948"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
