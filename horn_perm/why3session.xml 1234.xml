<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_perm.mlw"/>
<theory name="Evals" proved="true">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="101883"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="323693"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="502065"/></proof>
 <proof prover="1"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="166565"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="27361"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="36362"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="32013"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="30230"/></proof>
 </goal>
</theory>
<theory name="SAT" proved="true">
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28624"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1694285"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="384447"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1704407"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1737295"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="id_val">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="28272"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="29220"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="28014"/></proof>
 </goal>
</theory>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="30297"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="29440"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="30111"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="30076"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="28246"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="139436"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="265118"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="263434"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="25591"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="265437"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="AFtoRS_RStoAF.0" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="29666"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="28596"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="27489"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="33775"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="64253"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="31202"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="41242"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="34345"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="37589"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.70" steps="86547"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="33811"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="36871"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="37056"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="199068"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2352783"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1773663"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.52" steps="2989"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="218627"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.13" steps="778"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="218660"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="785"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2525762"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276021"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2528937"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="288567"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="37812"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.16" steps="35460"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="177341"/></proof>
       <proof prover="4"><result status="valid" time="0.12" steps="793"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2489260"/></proof>
   <proof prover="2"><result status="valid" time="0.35" steps="64295"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="2.22" steps="2035"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="40596"/></proof>
 </goal>
 <goal name="pp_same_p" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="51579"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="179206"/></proof>
 <proof prover="4"><result status="valid" time="0.31" steps="1954"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="36046"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="39654"/></proof>
 </goal>
 <goal name="fset_from_list_distr" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401631"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310305"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="fset_from_list_distr.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="left">
   <goal name="fset_from_list_distr.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fset_from_list_distr.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" proved="true" >
     <goal name="fset_from_list_distr.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="38026"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="fset_from_list_distr.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="203133"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="116"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_then_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763725"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165584"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_then_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_then_right_nil.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1742718"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="99027"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.54" steps="1028"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_then_right_nil.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3078664"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="238470"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
    </goal>
    <goal name="not_subset_spec_then_right_nil.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3087940"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="221483"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H2">
     <goal name="not_subset_spec_then_right_nil.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2411863"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="254214"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
     </goal>
     <goal name="not_subset_spec_then_right_nil.0.0.1.1" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="11240838"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1672870"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" proved="true" arg1="H2">
      <goal name="not_subset_spec_then_right_nil.0.0.1.1.0" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="277080"/></proof>
      <proof prover="4"><result status="valid" time="0.03" steps="119"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_if_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2480379"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="255019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_if_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_if_right_nil.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="241648"/></proof>
   <proof prover="4"><result status="valid" time="0.18" steps="1038"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2139881"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182217"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="subset_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_findFirst.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2180989"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="193793"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="subset_findFirst.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175080"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191349"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="clauselist">
     <goal name="subset_findFirst.0.0.0.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2167519"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="178339"/></proof>
     <proof prover="4"><result status="valid" time="1.12" steps="1682"/></proof>
     </goal>
     <goal name="subset_findFirst.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2121716"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="187241"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="clauselist">
      <goal name="subset_findFirst.0.0.0.1.0" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="subset_findFirst.0.0.0.1.0.0" proved="true">
       <proof prover="2"><result status="valid" time="0.20" steps="40491"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.21" steps="1841"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="concat_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2484317"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="289845"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="concat_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="concat_findFirst.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="188452"/></proof>
   <proof prover="4"><result status="valid" time="0.27" steps="1290"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="if_mem_then_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2416387"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="194175"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_mem_then_subset_set_smb.0" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="1641680"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="134631"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="146345"/></proof>
   <proof prover="4"><result status="valid" time="0.57" steps="1444"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2394257"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154598"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_subset_set_smb.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_subset_set_smb.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="40916"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761004"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" proved="true" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="37312"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1707639"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172719"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.17" steps="38404"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816447"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177277"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0" proved="true">
        <transf name="replace" proved="true" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2102707"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131239"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2434241"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118676"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.13" steps="37260"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038971"/></proof>
           <proof prover="2"><result status="valid" time="0.13" steps="37108"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.23" steps="46506"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.14" steps="37858"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955177"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166640"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_set_smb_clauselist.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_set_smb_clauselist.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="654319"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168986"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="subset_set_smb_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="42934"/></proof>
    </goal>
    <goal name="subset_set_smb_clauselist.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.37" steps="65398"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="610"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2716972"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115371"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="143883"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="172"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="39030"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2659792"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="190490"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176750"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.2.0.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2029346"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150376"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.2.0.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2263923"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141838"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.2.0.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.23" steps="43726"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="488"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.2.0.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2407470"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142616"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.0.0.1.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="algorithmA_spec&#39;vc.2.0.0.1.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.17" steps="41650"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.16" steps="497"/></proof>
       </goal>
       <goal name="algorithmA_spec&#39;vc.2.0.0.1.0.1" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.17" steps="41634"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA_spec&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155371"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.2.1.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1860195"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121057"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.2.1.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027475"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139840"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="algorithmA_spec&#39;vc.2.1.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.20" steps="42259"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.2.1.0.0.1" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="121846"/></proof>
      <proof prover="4"><result status="valid" time="0.11" steps="545"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.2.1.0.0.2" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.37" steps="72860"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.2.1.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2208327"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129233"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.1.0.1.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.2.1.0.1.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.23" steps="47246"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="488"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2754448"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="189375"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="37054"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="48877"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="algorithmA_spec&#39;vc.3.1.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="2"><result status="valid" time="0.29" steps="58845"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3056519"/></proof>
  <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="algorithmA_spec&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2620226"/></proof>
    <proof prover="2"><result status="valid" time="0.23" steps="46397"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.4.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="2314210"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="200968"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="algorithmA_spec&#39;vc.4.0.1.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="algorithmA_spec&#39;vc.4.0.1.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0" expl="postcondition" proved="true">
       <transf name="destruct" proved="true" arg1="H">
        <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="destruct" proved="true" arg1="H">
         <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="instantiate" proved="true" arg1="subset_set_smb_clauselist" arg2="clauselist">
          <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1">
           <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="instantiate" proved="true" arg1="Hinst" arg2="x">
            <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="0"><result status="timeout" time="1.00" steps="2064141"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="134501"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.43" steps="73517"/></proof>
             </goal>
             <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
             <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="6320577"/></proof>
             <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="774953"/></proof>
             <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
             <transf name="assert" proved="true" arg1="(subset (singleton (convertRStoAF x) ) (set_smb_clauselist clauselist))">
              <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
              <proof prover="2"><result status="valid" time="0.22" steps="45550"/></proof>
              </goal>
              <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1" expl="postcondition" proved="true">
              <proof prover="0"><result status="timeout" time="1.00" steps="2211521"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="143065"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
               <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0" expl="postcondition" proved="true">
               <transf name="instantiate" proved="true" arg1="Hinst" arg2="(x5++x2)">
                <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0.0" expl="postcondition" proved="true">
                <transf name="destruct" proved="true" arg1="Hinst">
                 <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
                 <proof prover="2"><result status="timeout" time="1.00" steps="81889"/></proof>
                 <proof prover="4"><result status="valid" time="0.22" steps="583"/></proof>
                 </goal>
                 <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="postcondition" proved="true">
                 <proof prover="0"><result status="valid" time="0.87" steps="1077308"/></proof>
                 <proof prover="2"><result status="timeout" time="1.00" steps="64484"/></proof>
                 <proof prover="4"><result status="timeout" time="1.00"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_mem_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2199400"/></proof>
 <proof prover="2"><result status="valid" time="0.14" steps="40507"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="diff_mem_clauselist.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1748293"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.31" steps="58518"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="diff_mem_clauselist.0.0">
   <transf name="split_vc" >
    <goal name="diff_mem_clauselist.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2301590"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172862"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Nil: list (fset atomicformula, rightside))">
     <goal name="diff_mem_clauselist.0.0.0.0">
     <transf name="instantiate" arg1="Hinst" arg2="c">
      <goal name="diff_mem_clauselist.0.0.0.0.0">
      <proof prover="2" obsolete="true"><result status="valid" time="0.40" steps="71136"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="diff_mem_clauselist.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2024756"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="179956"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x1 x)">
     <goal name="diff_mem_clauselist.0.0.1.0">
     <transf name="instantiate" arg1="Hinst" arg2="c">
      <goal name="diff_mem_clauselist.0.0.1.0.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="diff_mem_clauselist.0.0.1.0.0.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.09" steps="36886"/></proof>
       </goal>
       <goal name="diff_mem_clauselist.0.0.1.0.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2062386"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="170469"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="diff_mem_clauselist.0.0.1.0.0.1.0">
        <transf name="destruct" arg1="Hinst">
         <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.0">
         <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="52677"/></proof>
         </goal>
         <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2181212"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132499"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(subset (diff (add (convertRStoAF p) c) c) (add ATop (add ABot (set_smb_clauselist (Cons x1 x)))))
">
          <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2197117"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116930"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="case" proved="true" arg1="((diff (add (convertRStoAF p) c) c) = empty)">
           <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0.0" expl="true case (asserted formula)" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2282614"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113187"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" proved="true" arg1="(exists set p l. right = Cons (set,p) l)">
            <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="2"><result status="valid" time="0.15" steps="39261"/></proof>
            </goal>
            <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0.0.1" expl="true case (asserted formula)" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2239920"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119022"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="introduce_exists" proved="true" >
             <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0.0.1.0" expl="true case (asserted formula)" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2209031"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118368"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="assert" proved="true" arg1="(mem1 (set,p) (Cons x1 x))">
              <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
              <proof prover="2"><result status="valid" time="0.38" steps="64353"/></proof>
              </goal>
              <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0.0.1.0.1" expl="true case (asserted formula)" proved="true">
              <proof prover="2"><result status="valid" time="0.25" steps="49701"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.0.1" expl="false case (asserted formula)" proved="true">
           <proof prover="2"><result status="valid" time="1.24" steps="121588"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2222323"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125563"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(subset (singleton (convertRStoAF p)) (add ATop (add ABot (set_smb_clauselist (Cons x1 x)))))">
           <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.1.0" expl="asserted formula">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5961304"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="595062"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="assert" arg1="(subset (diff (algorithmA_spec (left ++ l) (add (convertRStoAF p) c))
 (add (convertRStoAF p) c)) (add ATop (add ABot (set_smb_clauselist (left ++ l)))))">
            <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.1.0.0" expl="asserted formula">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2145849"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159804"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
            <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.1.0.1" expl="asserted formula">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2283413"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148426"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.1.1">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2206767"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140327"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="induction_arg_ty_lex" arg1="x">
            <goal name="diff_mem_clauselist.0.0.1.0.0.1.0.1.1.1.0">
            <proof prover="0" obsolete="true"><result status="valid" time="0.25" steps="733865"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116968"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb_generic" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502433"/></proof>
 <proof prover="2"><result status="valid" time="0.38" steps="65073"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="smb_generic.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2268718"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167041"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="smb_generic.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="smb_generic.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="smb_generic.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.09" steps="37028"/></proof>
     </goal>
     <goal name="smb_generic.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2927769"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168267"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="smb_generic.0.0.0.1.0" proved="true">
      <proof prover="2" obsolete="true"><result status="valid" time="0.38" steps="67043"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="smb_generic.0.0.0.1.0.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2425423"/></proof>
       <proof prover="2"><result status="valid" time="0.14" steps="39121"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="smb_generic.0.0.0.1.0.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2331181"/></proof>
       <proof prover="2"><result status="valid" time="0.67" steps="94767"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="49293"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="all_subset_A">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2518915"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149008"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_subset_A.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2623644"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="170838"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="all_subset_A.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="all_subset_A.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="all_subset_A.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.09" steps="37303"/></proof>
     </goal>
     <goal name="all_subset_A.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2229925"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="169857"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="all_subset_A.0.0.0.1.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="all_subset_A.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2335234"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164684"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="all_subset_A.0.0.0.1.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2067433"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174255"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="all_subset_A.1">
  <proof prover="0"><result status="timeout" time="1.00" steps="1848528"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="192266"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="all_subset_A_2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2860425"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156374"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_subset_A_2.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7084450"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1175350"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="assert" arg1="(subset (diff (algorithmA_spec clauselist c) c) (add ATop (add ABot (set_smb_clauselist clauselist))))">
   <goal name="all_subset_A_2.0.0" expl="asserted formula">
   <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="39315"/></proof>
   </goal>
   <goal name="all_subset_A_2.0.1">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2112782"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165543"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(forall p. mem p (diff (algorithmA_spec clauselist c) c) -&gt; (mem p d || mem p ((diff (algorithmA_spec clauselist d) d))))">
    <goal name="diff_A_c_subset_A_d.0.1.0" expl="asserted formula">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1833093"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140876"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="diff_A_c_subset_A_d.0.1.0.0" expl="asserted formula">
     <transf name="case" arg1="(mem p d)">
      <goal name="diff_A_c_subset_A_d.0.1.0.0.0" expl="true case (asserted formula)">
      <proof prover="2"><result status="valid" time="0.09" steps="37233"/></proof>
      </goal>
      <goal name="diff_A_c_subset_A_d.0.1.0.0.1" expl="false case (asserted formula)">
      <transf name="assert" arg1="(mem p (diff (algorithmA_spec clauselist d) d))">
       <goal name="diff_A_c_subset_A_d.0.1.0.0.1.0" expl="asserted formula">
       <proof prover="0"><result status="timeout" time="1.00" steps="1835598"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="184668"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="diff_A_c_subset_A_d.0.1.0.0.1.1" expl="false case (asserted formula)">
       <proof prover="2"><result status="valid" time="0.09" steps="37241"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="diff_A_c_subset_A_d.0.1.1">
    <proof prover="2"><result status="timeout" time="2.00" steps="330730"/></proof>
    <proof prover="4"><result status="valid" time="0.17" steps="1055"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  <transf name="destruct_term" arg1="clauselist">
   <goal name="all_subset_A_2.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1814580"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="187567"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="all_subset_A_2.0.1">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1930067"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219924"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_A" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2033949"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191415"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="monotone_A.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2186464"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="209383"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" proved="true" arg1="clauselist">
   <goal name="monotone_A.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2493660"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="222849"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="all_subset_A" arg2="c">
    <goal name="monotone_A.0.0.0" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="clauselist">
     <goal name="monotone_A.0.0.0.0" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="monotone_A.0.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.16" steps="43076"/></proof>
      </goal>
      <goal name="monotone_A.0.0.0.0.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2143558"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177014"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="assert" proved="true" arg1="(subset (diff (algorithmA_spec clauselist c) c) (algorithmA_spec clauselist d))">
       <goal name="monotone_A.0.0.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2051747"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="197386"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(forall set p. mem1 (set, convertAFtoRS p) clauselist /\ subset set c -&gt; subset set d)">
        <goal name="monotone_A.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.14" steps="39812"/></proof>
        </goal>
        <goal name="monotone_A.0.0.0.0.1.0.1" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2041344"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="198151"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" proved="true" arg1="all_subset_A_2" arg2="d">
         <goal name="monotone_A.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="clauselist">
          <goal name="monotone_A.0.0.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="monotone_A.0.0.0.0.1.0.1.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.17" steps="43845"/></proof>
           </goal>
           <goal name="monotone_A.0.0.0.0.1.0.1.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2042907"/></proof>
           <proof prover="2"><result status="valid" time="0.43" steps="78621"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="monotone_A.0.0.0.0.1.1" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="214989"/></proof>
       <proof prover="4"><result status="valid" time="0.61" steps="1321"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_A.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2033114"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="209359"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="subst" proved="true" arg1="clauselist">
    <goal name="monotone_A.0.1.0" proved="true">
    <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(Nil: list (fset atomicformula, rightside))">
     <goal name="monotone_A.0.1.0.0" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
      <goal name="monotone_A.0.1.0.0.0" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="monotone_A.0.1.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="2"><result status="valid" time="0.09" steps="37803"/></proof>
       </goal>
       <goal name="monotone_A.0.1.0.0.0.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2459187"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="197348"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="monotone_A.0.1.0.0.0.1.0" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="216449"/></proof>
        <proof prover="4"><result status="valid" time="0.04" steps="321"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model_case1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="49010"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="herbrand_model_case1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2387571"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.57" steps="47147"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model_case2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2870137"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="39935"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case3">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="40109"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case4">
 <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="40738"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2254881"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130126"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="if_sat_clauselist_sat_clause.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="if_sat_clauselist_sat_clause.0.0">
   <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="40731"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3786292"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156540"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="herbrand_model.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2747136"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="169788"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="findFirst&#39;vc" expl="VC for findFirst">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13070339"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="643202"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="findFirst&#39;vc.0" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163269"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="42"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423265"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219510"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.1.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="40340"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="44"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="40413"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="46"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.2" expl="postcondition">
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133135"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2724201"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161412"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1447388"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73094"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.0.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="39895"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="39995"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="51"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137835"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="51"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1344105"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79040"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.1.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="42897"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="43518"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="164"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="175267"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="161"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1339592"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79631"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.2.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="42115"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2619652"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="43753"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="348"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.2" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15911231"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126612"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="344"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.3" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1469582"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="70581"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.3.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="39949"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="40024"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="161"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113107"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="158"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.4" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="41707"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940533"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165423"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2715442"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159903"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2654036"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="52953"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="77826"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616339"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157998"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="54535"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="489"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2608141"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156385"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="57362"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2694447"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160019"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9086325"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890140"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="78209"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="272"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2621410"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140350"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="52304"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.2" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="146286"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.22" steps="42691"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="57476"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5745960"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="668425"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="46096"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="43666"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="54186"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2313043"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181095"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2256889"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149191"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="right">
    <goal name="algorithmA&#39;vc.3.0.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="49522"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723676"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159970"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="x">
    <goal name="algorithmA&#39;vc.3.1.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="52181"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616063"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162706"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="x">
    <goal name="algorithmA&#39;vc.3.2.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="56276"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2641367"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162274"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="41517"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.31" steps="57495"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.4.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="51350"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2978231"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157584"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.5.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2656699"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141260"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.5.0.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.5.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1755300"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138053"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.5.0.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="39925"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.5.0.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1765029"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134881"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.0.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2794386"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136701"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940740"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="41690"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="replace" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))" arg2="(x3,x2)" arg3="in" arg4="Hinst
">
         <goal name="algorithmA&#39;vc.5.1.0.0.1.0.0.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2857352"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165227"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="induction_arg_ty_lex" arg1="right">
          <goal name="algorithmA&#39;vc.5.1.0.0.1.0.0.0.0" expl="VC for algorithmA">
          <proof prover="2"><undone/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="algorithmA&#39;vc.5.1.0.0.1.0.0.1" expl="equality hypothesis">
         <proof prover="2"><undone/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2059962"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151056"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.5.1.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.5.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3174189"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153843"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.5.1.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="40402"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.5.1.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3181595"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153819"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.1.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2249898"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164986"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.5.1.0.0.1.0.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="47052"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1" expl="postcondition">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5969685"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="914166"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" arg1="Ensures2">
         <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2145912"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160666"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Ensures2">
          <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1.0.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2163297"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162111"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="replace" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))" arg2="(x3,x2)" arg3="in" arg4="Hinst2">
           <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1.0.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2153837"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162116"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst2">
            <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1.0.0.0.0" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2017410"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="175206"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="replace" arg1="right" arg2="x2" arg3="in" arg4="Hinst1">
             <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1.0.0.0.0.0" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1995587"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174500"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="replace" arg1="left" arg2="x3" arg3="in" arg4="Hinst">
              <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1.0.0.0.0.0.0" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1180565"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="175641"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="249"/></proof>
              </goal>
              <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1.0.0.0.0.0.1" expl="equality hypothesis">
              <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="38110"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1.0.0.0.0.1" expl="equality hypothesis">
             <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="38110"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="algorithmA&#39;vc.5.1.0.0.1.0.1.0.0.1" expl="equality hypothesis">
           <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="37829"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3063592"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="195908"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.5.2.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.5.2.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2796654"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164677"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.5.2.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="40239"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.5.2.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2665984"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164662"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.2.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2710770"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166576"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154112"/></proof>
        <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
         <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0.0" expl="postcondition">
         <transf name="replace" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))" arg2="(x3,x2)" arg3="in" arg4="Hinst">
          <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0.0.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2887517"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147477"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="compile_match" >
           <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0.0.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2664096"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147023"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct_term" arg1="x2">
            <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0.0.0.0.0" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1997738"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176920"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0.0.0.0.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="46550"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0.0.1" expl="equality hypothesis">
          <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="37934"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="algorithmA&#39;vc.5.2.0.0.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3638823"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159859"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="440"/></proof>
       <transf name="unfold" arg1="listset_to_listfset">
        <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0" expl="destruct premise">
        <proof prover="2"><undone/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="45478"/></proof>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="615338"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145379"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_top_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="40069"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="43564"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10972510"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="802828"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120735"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0">
       <transf name="subst" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0">
        <transf name="unfold" arg1="findFirst" arg2="in" arg3="Hinst1">
         <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0">
         <transf name="compile_match" >
          <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1321114"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="68852"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="eliminate_let" >
           <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0">
           <transf name="eliminate_if" >
            <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="740107"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153256"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.0">
             <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="45893"/></proof>
             </goal>
             <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="654641"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144154"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1381301"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144425"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="replace" arg1="(left ++ x2)" arg2="(Nil: list (fset atomicformula, rightside))" arg3="in" arg4="Hinst">
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="607597"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142005"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Nil: list (fset atomicformula, rightside))">
                <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="608350"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146730"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF x) (singleton ATop))">
                 <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0">
                 <transf name="destruct" arg1="Hinst">
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="destruct premise">
                  <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="49092"/></proof>
                  </goal>
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="596234"/></proof>
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136580"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="destruct" arg1="Hinst">
                   <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0">
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127527"/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="221"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis">
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167986"/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="55"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="145692"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="41"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="891102"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="245380"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_conjuction_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="43798"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2843633"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126702"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5746229"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="800664"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.0">
       <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="44027"/></proof>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.1">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186168"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.13" steps="799"/></proof>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.0">
       <transf name="destruct" arg1="Hinst">
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.0">
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="1045"/></proof>
        </goal>
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.1">
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="1273"/></proof>
        </goal>
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.2">
        <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="157260"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="1045"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="147654"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="45"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="45322"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="45539"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="45750"/></proof>
 </goal>
 <goal name="case2_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1420210"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153218"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_top_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="40559"/></proof>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2413194"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130762"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.0.0">
       <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="44844"/></proof>
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.0.1">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153349"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.45" steps="2465"/></proof>
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763665"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150991"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_top_imples_p.0.0.0.1.1.0.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2865371"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149845"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="induction_arg_ty_lex" arg1="right">
         <goal name="case2_top_imples_p.0.0.0.1.1.0.0.0">
         <proof prover="2"><undone/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case2_top_imples_p.0.0.0.1.1.0.1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3083006"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152650"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(p = p1)">
         <goal name="case2_top_imples_p.0.0.0.1.1.0.1.0" expl="asserted formula">
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.22" steps="1236"/></proof>
         </goal>
         <goal name="case2_top_imples_p.0.0.0.1.1.0.1.1">
         <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="191346"/></proof>
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case2_top_imples_p.0.0.0.1.1.0.2">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2730492"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143638"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="induction_arg_ty_lex" arg1="right">
         <goal name="case2_top_imples_p.0.0.0.1.1.0.2.0">
         <proof prover="2"><undone/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case2_top_imples_p.0.0.0.1.0" expl="destruct premise">
      <proof prover="2"><undone/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="678658"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76449"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="40778"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2820755"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167202"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.0.0">
       <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="45100"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1797228"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156790"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
        <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.0" expl="asserted formula">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2132905"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="183325"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="herbrand_model" arg2="clauselist">
         <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.0.0" expl="asserted formula">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2171190"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167748"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" arg1="Hinst" arg2="c">
          <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.0.0.0" expl="asserted formula">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1981485"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="187696"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="eliminate_let" >
           <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.0.0.0.0" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1977791"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="190410"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.0.0.0.0.0" expl="destruct premise">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1806446"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="170169"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="split_vc" >
             <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.0.0.0.0.0.0">
             <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="38756"/></proof>
             </goal>
             <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.0.0.0.0.0.1">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1879520"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163491"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             </goal>
             <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.0.0.0.0.0.2">
             <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="41061"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.0.0.0.0.1" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177823"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.51" steps="3304"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.1">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138972"/></proof>
        <transf name="assert" arg1="((convertRStoAF p) &lt;&gt; ABot)">
         <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.1.0" expl="asserted formula">
         <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="47537"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.0.1.1.1">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144021"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.44" steps="2632"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" expl="destruct premise">
      <proof prover="2"><undone/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="49534"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="46934"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="47139"/></proof>
 </goal>
 <goal name="case3_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038738"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="56076"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_induction.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3098931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177591"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="case3_induction.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2113951"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163819"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="case3_induction.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3124275"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="42062"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="case3_induction.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2184173"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="196733"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x1 x)">
     <goal name="case3_induction.0.0.1.0">
     <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
      <goal name="case3_induction.0.0.1.0.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="case3_induction.0.0.1.0.0.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.37" steps="46215"/></proof>
       </goal>
       <goal name="case3_induction.0.0.1.0.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2098763"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185892"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case3_induction.0.0.1.0.0.1.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2071877"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191423"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case3_induction.0.0.1.0.0.1.0.0">
         <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="47707"/></proof>
         </goal>
         <goal name="case3_induction.0.0.1.0.0.1.0.1">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="575819"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138104"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="case3_induction.0.0.1.0.0.1.0.0">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1920182"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153287"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="case3_induction.0.0.1.0.0.1.1.0.0">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="598368"/></proof>
          <proof prover="2"><undone/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
          <goal name="case3_induction.0.0.1.0.0.1.1.0.1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1398010"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174807"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
           <goal name="case3_induction.0.0.1.0.0.1.1.0.1.0" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3343613"/></proof>
           <proof prover="2"><undone/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
           <goal name="case3_induction.0.0.1.0.0.1.1.0.1.1">
           <proof prover="2"><undone/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="case3_induction.0.0.1.0.0.1.1.0.2">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1251389"/></proof>
          <proof prover="2"><undone/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case3_induction.0.0.1.0.0.1.0" expl="destruct premise">
        <proof prover="2"><result status="failure" time="0.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
