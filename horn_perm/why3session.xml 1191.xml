<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_perm.mlw"/>
<theory name="Evals" proved="true">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="101883"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="323693"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="502065"/></proof>
 <proof prover="1"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="166565"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="27361"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="36362"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="32013"/></proof>
  <proof prover="5"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="30230"/></proof>
 </goal>
</theory>
<theory name="SAT" proved="true">
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28624"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1694285"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="384447"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1704407"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1737295"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="id_val">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="28272"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="29220"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="28014"/></proof>
 </goal>
</theory>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="30297"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="29440"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="30111"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="30076"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="28246"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="139436"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="265118"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="263434"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="25591"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780202"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263192"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="compile_match" proved="true" >
    <goal name="RStoAF_AFtoRS.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779714"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263192"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="RStoAF_AFtoRS.0.0.0.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778901"/></proof>
     <proof prover="2"><result status="valid" time="0.13" steps="29185"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="RStoAF_AFtoRS.0.0.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="28237"/></proof>
     </goal>
     <goal name="RStoAF_AFtoRS.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="28187"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="27459"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="33743"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="64232"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="31171"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="41208"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="34311"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="37555"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.70" steps="86505"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="33780"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="36839"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="37022"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="199068"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2352783"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1773663"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.52" steps="2989"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="218627"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.13" steps="778"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="218627"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="778"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2525762"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276021"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2528937"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="288567"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="37778"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.16" steps="35426"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1">
          <proof prover="2"><undone/></proof>
          </goal>
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.1" expl="VC for convertConjunctionToSet_lemma1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423268"/></proof>
          <proof prover="2"><undone/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="1.37" steps="611"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="177257"/></proof>
       <proof prover="4"><result status="valid" time="0.12" steps="786"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2489260"/></proof>
   <proof prover="2"><result status="valid" time="0.35" steps="64257"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="2.22" steps="2035"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="40562"/></proof>
 </goal>
 <goal name="pp_same_p" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="51538"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="179170"/></proof>
 <proof prover="4"><result status="valid" time="0.31" steps="1945"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="36014"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="39622"/></proof>
 </goal>
 <goal name="fset_from_list_distr" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401631"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310305"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="fset_from_list_distr.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="left">
   <goal name="fset_from_list_distr.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fset_from_list_distr.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" proved="true" >
     <goal name="fset_from_list_distr.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="37995"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="fset_from_list_distr.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="203086"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="115"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_then_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763725"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165584"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_then_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_then_right_nil.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1742718"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="99027"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.54" steps="1028"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_then_right_nil.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3078664"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="238444"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
    </goal>
    <goal name="not_subset_spec_then_right_nil.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3087940"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="221483"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H2">
     <goal name="not_subset_spec_then_right_nil.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2411863"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="253938"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
     </goal>
     <goal name="not_subset_spec_then_right_nil.0.0.1.1" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="11240838"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1672870"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" proved="true" arg1="H2">
      <goal name="not_subset_spec_then_right_nil.0.0.1.1.0" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="276988"/></proof>
      <proof prover="4"><result status="valid" time="0.03" steps="118"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_if_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2480379"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="255019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_if_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_if_right_nil.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="241692"/></proof>
   <proof prover="4"><result status="valid" time="0.18" steps="1027"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2139881"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182217"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="subset_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_findFirst.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2180989"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="193793"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="subset_findFirst.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175080"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191349"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="clauselist">
     <goal name="subset_findFirst.0.0.0.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2167519"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="171230"/></proof>
     <proof prover="4"><result status="valid" time="1.12" steps="1673"/></proof>
     </goal>
     <goal name="subset_findFirst.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2121716"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="187241"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="clauselist">
      <goal name="subset_findFirst.0.0.0.1.0" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="subset_findFirst.0.0.0.1.0.0" proved="true">
       <proof prover="2"><result status="valid" time="0.20" steps="40459"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.21" steps="1841"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="concat_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2484317"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="289845"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="concat_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="concat_findFirst.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="188405"/></proof>
   <proof prover="4"><result status="valid" time="0.27" steps="1276"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="test1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5025584"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="193838"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="test1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2612644"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156294"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="test1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="47354"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="concat_var_in">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2414506"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="205629"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="concat_var_in.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="concat_var_in.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417304"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="200860"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" arg1="variable_in_clauselist">
    <goal name="concat_var_in.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4810076"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165997"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="concat_var_in.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.21" steps="43709"/></proof>
     </goal>
     <goal name="concat_var_in.0.0.0.1">
     <proof prover="0"><result status="timeout" time="1.00" steps="2990350"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="150218"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="concat_var_in.0.1">
   <proof prover="0"><result status="timeout" time="1.00" steps="2417304"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="194680"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="concat_var_in_2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2214617"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191821"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="concat_var_in_2.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2467793"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="203042"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" arg1="(sub1 ++ sub2)">
   <goal name="concat_var_in_2.0.0">
   <proof prover="0"><result status="timeout" time="1.00" steps="2391063"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="228102"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="concat_var_in_2.0.1" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="36934"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="var_in_right_then_var_in_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2474456"/></proof>
 <proof prover="2"><result status="valid" time="0.19" steps="38678"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="var_in_right_then_var_in_clauselist_2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2749594"/></proof>
 <proof prover="2"><result status="valid" time="0.24" steps="44668"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="var_in_right_then_var_in_clauselist_3" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="39364"/></proof>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2903951"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113976"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="61604"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="168"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="40714"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.27" steps="50530"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2659792"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="190490"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763374"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171381"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.3.0.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2038471"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124831"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.3.0.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1617487"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120807"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="790"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.3.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.3.0.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.18" steps="45256"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.09" steps="471"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.3.0.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="161172"/></proof>
     <proof prover="2"><result status="valid" time="0.16" steps="43195"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="51"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176750"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.3.1.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2029346"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150376"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.3.1.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2407470"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142616"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.3.1.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="139858"/></proof>
       <proof prover="4"><result status="valid" time="0.04" steps="242"/></proof>
       </goal>
       <goal name="algorithmA_spec&#39;vc.3.2.0.1.0.1" expl="VC for algorithmA_spec">
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="222"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.3.1.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2263923"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141838"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.3.1.0.1.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.3.1.0.1.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.34" steps="53849"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="229"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155371"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.3.2.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1860195"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121057"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.3.2.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2208327"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129233"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.3.2.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.3.2.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="137279"/></proof>
       <proof prover="4"><result status="valid" time="0.11" steps="647"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.3.2.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027475"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139840"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="algorithmA_spec&#39;vc.3.2.0.1.0" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="138191"/></proof>
      <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.3.2.0.1.1" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.22" steps="46845"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="50"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.3.2.0.1.2" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.24" steps="44279"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2754448"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="189375"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.25" steps="38753"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.29" steps="47202"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.25" steps="50643"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb_generic">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723871"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191678"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="smb_generic.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="smb_generic.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="smb_generic.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="smb_generic.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.10" steps="39440"/></proof>
     </goal>
     <goal name="smb_generic.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3265625"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="184823"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="smb_generic.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.10" steps="38153"/></proof>
      </goal>
      <goal name="smb_generic.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3280346"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="184813"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="smb_generic.0.0.0.1.1.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2651941"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="212647"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="smb_generic.0.0.0.1.1.0.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2639424"/></proof>
        <proof prover="2"><result status="valid" time="0.15" steps="40622"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="smb_generic.0.0.0.1.1.0.1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2704374"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151697"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" proved="true" arg1="(variable_in_clauselist (convertRStoAF p) clauselist)">
         <goal name="smb_generic.0.0.0.1.1.0.1.0" expl="asserted formula" proved="true">
         <proof prover="0"><result status="valid" time="0.05" steps="177764"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="143721"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="smb_generic.0.0.0.1.1.0.1.1" proved="true">
         <proof prover="2"><result status="valid" time="0.21" steps="45143"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="smb_generic.0.0.0.1.1.0.2">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2660563"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="40464"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(variable_in_clauselist (convertRStoAF p) clauselist)">
         <goal name="smb_generic.0.0.0.1.1.0.2.0" expl="asserted formula" proved="true">
         <proof prover="0"><result status="valid" time="0.06" steps="180842"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="142470"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="smb_generic.0.0.0.1.1.0.2.1">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2766603"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147385"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="replace" arg1="(algorithmA_spec clauselist c)" arg2="(newc)" arg3="in" arg4="Hinst">
          <goal name="smb_generic.0.0.0.1.1.0.2.1.0">
          <proof prover="0"><result status="timeout" time="1.00" steps="2572103"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="138041"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          </goal>
          <goal name="smb_generic.0.0.0.1.1.0.2.1.1" expl="equality hypothesis" proved="true">
          <proof prover="2"><result status="valid" time="0.09" steps="37160"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="891772"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="smb.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2595352"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157108"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="smb.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="smb.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2537653"/></proof>
    <proof prover="2"><result status="valid" time="0.10" steps="37333"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="smb.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1010657"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182915"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(Cons x1 x)">
     <goal name="smb.0.0.1.0" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
      <goal name="smb.0.0.1.0.0" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="smb.0.0.1.0.0.0" expl="destruct premise" proved="true">
       <proof prover="2"><result status="valid" time="0.17" steps="43477"/></proof>
       </goal>
       <goal name="smb.0.0.1.0.0.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1992052"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186098"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="smb.0.0.1.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.10" steps="38527"/></proof>
        </goal>
        <goal name="smb.0.0.1.0.0.1.1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2017353"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186093"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="smb.0.0.1.0.0.1.1.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2072618"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141883"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="smb.0.0.1.0.0.1.1.0.0" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1363896"/></proof>
          <proof prover="2"><result status="valid" time="0.34" steps="45820"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
          <goal name="smb.0.0.1.0.0.1.1.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.42" steps="57280"/></proof>
          </goal>
          <goal name="smb.0.0.1.0.0.1.1.0.2" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1333398"/></proof>
          <proof prover="2"><result status="valid" time="0.35" steps="58632"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model_case1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="47041"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="herbrand_model_case1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2387571"/></proof>
  <proof prover="2"><result status="valid" time="0.28" steps="48178"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2870137"/></proof>
 <proof prover="2"><result status="valid" time="0.22" steps="41848"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case3" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="42022"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case4" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="42630"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423146"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210384"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_sat_clauselist_sat_clause.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_sat_clauselist_sat_clause.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="42761"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3786292"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156540"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="herbrand_model.0">
  <proof prover="0"><result status="timeout" time="1.00" steps="2627159"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="134100"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="findFirst&#39;vc" expl="VC for findFirst">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2712041"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151605"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="findFirst&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="164753"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="40"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423265"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219510"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="findFirst&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="42362"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="44"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2"><result status="valid" time="0.16" steps="42435"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="44"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="169719"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="44"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.2" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="2724201"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="161412"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1447388"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73094"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="findFirst&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="41917"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="42017"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="49"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="167862"/></proof>
    <proof prover="4"><result status="valid" time="0.06" steps="49"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1344105"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79040"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="findFirst&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="44926"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.22" steps="45547"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="161"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="178367"/></proof>
    <proof prover="4"><result status="valid" time="0.07" steps="161"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1339592"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79631"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.2.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="44101"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.1" expl="postcondition">
    <proof prover="0"><result status="timeout" time="1.00" steps="2882670"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="133836"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.2" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2619652"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="176619"/></proof>
    <proof prover="4"><result status="valid" time="0.07" steps="337"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1469582"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="70581"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="findFirst&#39;vc.2.3.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.16" steps="41971"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.16" steps="42046"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="158"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="175212"/></proof>
    <proof prover="4"><result status="valid" time="0.07" steps="158"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.4" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="43729"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940533"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165423"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="findFirst&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2715442"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159903"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="findFirst&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2654036"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="52953"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.62" steps="92148"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2608141"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156385"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.1.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.0.1.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.33" steps="56434"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.2" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616339"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157998"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.2.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.0.2.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.28" steps="59069"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="489"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2694447"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160019"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="findFirst&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9086325"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890140"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.55" steps="92572"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="272"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.1" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="146286"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.22" steps="42691"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.33" steps="54246"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.2" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2621410"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140350"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.2.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" >
      <goal name="findFirst&#39;vc.3.1.2.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.27" steps="59186"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5745960"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="668425"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="48085"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="45663"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="55831"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2313043"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181095"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616063"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162706"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="x">
    <goal name="algorithmA&#39;vc.3.0.0" expl="VC for algorithmA" proved="true">
    <proof prover="2"><result status="valid" time="0.30" steps="46707"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723676"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159970"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="x">
    <goal name="algorithmA&#39;vc.3.1.0" expl="VC for algorithmA" proved="true">
    <proof prover="2"><result status="valid" time="0.26" steps="57408"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2256889"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149191"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="right">
    <goal name="algorithmA&#39;vc.3.2.0" expl="VC for algorithmA" proved="true">
    <proof prover="2"><result status="valid" time="0.24" steps="55707"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2641367"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162274"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.30" steps="43614"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="52741"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.4.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.29" steps="58164"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2978231"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157584"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3063592"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="195908"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2796654"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164677"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="algorithmA&#39;vc.5.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.11" steps="42325"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.5.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2665984"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164662"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.0.0.0.1.0" expl="destruct premise" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3638823"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159859"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="440"/></proof>
       <transf name="unfold" proved="true" arg1="listset_to_listfset">
        <goal name="algorithmA&#39;vc.5.0.0.0.1.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.25" steps="50958"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="algorithmA&#39;vc.5.0.0.0.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2710770"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166576"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" proved="true" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.5.0.0.0.1.1.0" expl="postcondition" proved="true">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154112"/></proof>
        <transf name="destruct_term" proved="true" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
         <goal name="algorithmA&#39;vc.5.0.0.0.1.1.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))" arg2="(x3,x2)" arg3="in" arg4="Hinst">
          <goal name="algorithmA&#39;vc.5.0.0.0.1.1.0.0.0" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2887517"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147477"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="compile_match" proved="true" >
           <goal name="algorithmA&#39;vc.5.0.0.0.1.1.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2664096"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147023"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct_term" proved="true" arg1="x2">
            <goal name="algorithmA&#39;vc.5.0.0.0.1.1.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.18" steps="44929"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.89" steps="2425"/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.5.0.0.0.1.1.0.0.0.0.1" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.26" steps="44811"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="algorithmA&#39;vc.5.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="2"><result status="valid" time="0.10" steps="40259"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2634733"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168370"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2780585"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152882"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="algorithmA&#39;vc.5.1.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.11" steps="42639"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.5.1.0.0.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3249895"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136020"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.1.0.0.1.0" expl="destruct premise" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2784572"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135165"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.10" steps="442"/></proof>
       <transf name="unfold" proved="true" arg1="listset_to_listfset">
        <goal name="algorithmA&#39;vc.5.1.0.0.1.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.24" steps="51647"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="algorithmA&#39;vc.5.1.0.0.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3158059"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144798"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" proved="true" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.5.1.0.0.1.1.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))" arg2="(x3,x2)" arg3="in" arg4="Hinst

">
         <goal name="algorithmA&#39;vc.5.1.0.0.1.1.0.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="166568"/></proof>
         <proof prover="4"><result status="valid" time="0.57" steps="1506"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.5.1.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.10" steps="40546"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2643166"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146930"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.5.2.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.5.2.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1755300"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138053"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="algorithmA&#39;vc.5.2.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.11" steps="42802"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.5.2.0.0.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1765029"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134881"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.2.0.0.1.0" expl="destruct premise" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1596315"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141716"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="unfold" proved="true" arg1="listset_to_listfset">
        <goal name="algorithmA&#39;vc.5.2.0.0.1.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.25" steps="52371"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="algorithmA&#39;vc.5.2.0.0.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2794386"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136701"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" proved="true" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.5.2.0.0.1.1.0" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940740"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158023"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="replace" proved="true" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))" arg2="(x3,x2)" arg3="in" arg4="Hinst
">
         <goal name="algorithmA&#39;vc.5.2.0.0.1.1.0.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2857352"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165227"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="induction_arg_ty_lex" proved="true" arg1="right">
          <goal name="algorithmA&#39;vc.5.2.0.0.1.1.0.0.0" expl="VC for algorithmA" proved="true">
          <proof prover="2"><result status="valid" time="0.80" steps="131385"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="algorithmA&#39;vc.5.2.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.10" steps="40691"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="47211"/></proof>
 </goal>
 <goal name="case1_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="615338"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145379"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_top_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2"><result status="valid" time="0.24" steps="42091"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.17" steps="45792"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10972510"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="802828"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="145692"/></proof>
      <proof prover="2"><result status="valid" time="0.18" steps="45173"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="41"/></proof>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120735"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" proved="true" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.1.0.0" proved="true">
        <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="Hinst1">
         <goal name="case1_top_imples_p.1.0.0.1.1.0.0.0" proved="true">
         <transf name="compile_match" proved="true" >
          <goal name="case1_top_imples_p.1.0.0.1.1.0.0.0.0" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1321114"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="68852"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="eliminate_let" proved="true" >
           <goal name="case1_top_imples_p.1.0.0.1.1.0.0.0.0.0" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="case1_top_imples_p.1.0.0.1.1.0.0.0.0.0.0" proved="true">
            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1295610"/></proof>
            <proof prover="2"><result status="valid" time="0.45" steps="70192"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="891102"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="245380"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_conjuction_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.17" steps="46026"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2843633"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126702"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="147654"/></proof>
      <proof prover="2"><result status="valid" time="0.18" steps="45453"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="45"/></proof>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5746229"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="800664"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.0" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.0" proved="true">
        <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="157260"/></proof>
        <proof prover="2"><result status="valid" time="0.19" steps="46303"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="1030"/></proof>
        </goal>
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.1" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="143967"/></proof>
        <proof prover="4"><result status="valid" time="0.18" steps="1240"/></proof>
        </goal>
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.2" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="145450"/></proof>
        <proof prover="4"><result status="valid" time="0.12" steps="1030"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2"><result status="valid" time="0.18" steps="46894"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="47111"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="47322"/></proof>
 </goal>
 <goal name="case2_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1420210"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153218"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case2_top_imples_p.0" proved="true">
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.11" steps="42934"/></proof>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.18" steps="46698"/></proof>
      </goal>
      <goal name="case2_top_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2413194"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130762"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763665"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150991"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case2_top_imples_p.0.0.0.1.1.0.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2730492"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143638"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="induction_arg_ty_lex" proved="true" arg1="right">
         <goal name="case2_top_imples_p.0.0.0.1.1.0.0.0" proved="true">
         <proof prover="2"><result status="valid" time="0.19" steps="48675"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case2_top_imples_p.0.0.0.1.1.0.1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3083006"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152650"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" proved="true" arg1="(p = p1)">
         <goal name="case2_top_imples_p.0.0.0.1.1.0.1.0" expl="asserted formula" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="143405"/></proof>
         <proof prover="4"><result status="valid" time="0.22" steps="1212"/></proof>
         </goal>
         <goal name="case2_top_imples_p.0.0.0.1.1.0.1.1" proved="true">
         <proof prover="0"><result status="valid" time="0.06" steps="191718"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="159469"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case2_top_imples_p.0.0.0.1.1.0.2" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2865371"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149845"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="induction_arg_ty_lex" proved="true" arg1="right">
         <goal name="case2_top_imples_p.0.0.0.1.1.0.2.0" proved="true">
         <proof prover="2"><result status="valid" time="0.73" steps="100308"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="678658"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76449"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.11" steps="43153"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.18" steps="46975"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2820755"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167202"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2764485"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157797"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2808807"/></proof>
        <proof prover="2"><result status="valid" time="0.19" steps="47596"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3069466"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151587"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.1.0" expl="asserted formula">
         <proof prover="0"><result status="timeout" time="1.00" steps="2707839"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="140619"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.1.1" proved="true">
         <proof prover="2"><result status="valid" time="0.23" steps="52592"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.2">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2803642"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150282"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.2.0" expl="asserted formula">
         <proof prover="0"><result status="timeout" time="1.00" steps="2552017"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="139181"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.2.1" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145784"/></proof>
         <transf name="induction_arg_ty_lex" proved="true" arg1="right">
          <goal name="case2_conjunction_imples_p.0.0.0.1.1.0.2.1.0" proved="true">
          <proof prover="2"><result status="valid" time="0.83" steps="120054"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2"><result status="valid" time="0.22" steps="51222"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2"><result status="valid" time="0.22" steps="48506"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="48948"/></proof>
 </goal>
 <goal name="case3_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038738"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="56076"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_induction.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3098931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177591"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="case3_induction.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2113951"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163819"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="case3_induction.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3124275"/></proof>
    <proof prover="2"><result status="valid" time="0.11" steps="44209"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="case3_induction.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2184173"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="196733"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x1 x)">
     <goal name="case3_induction.0.0.1.0">
     <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
      <goal name="case3_induction.0.0.1.0.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="case3_induction.0.0.1.0.0.0" expl="destruct premise" proved="true">
       <proof prover="2"><result status="valid" time="0.18" steps="48660"/></proof>
       </goal>
       <goal name="case3_induction.0.0.1.0.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2098763"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185892"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case3_induction.0.0.1.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.11" steps="43098"/></proof>
        </goal>
        <goal name="case3_induction.0.0.1.0.0.1.1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2071877"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191423"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case3_induction.0.0.1.0.0.1.1.0">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1920182"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153287"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="case3_induction.0.0.1.0.0.1.1.0.0" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="597655"/></proof>
          <proof prover="2"><result status="valid" time="0.20" steps="49771"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
          <goal name="case3_induction.0.0.1.0.0.1.1.0.1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1398010"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174807"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
           <goal name="case3_induction.0.0.1.0.0.1.1.0.1.0" expl="asserted formula">
           <proof prover="0"><result status="timeout" time="1.00" steps="3837389"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="140355"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           </goal>
           <goal name="case3_induction.0.0.1.0.0.1.1.0.1.1" proved="true">
           <proof prover="2"><result status="valid" time="0.28" steps="56409"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="case3_induction.0.0.1.0.0.1.1.0.2">
          <proof prover="0"><result status="timeout" time="1.00" steps="597341"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="141788"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
