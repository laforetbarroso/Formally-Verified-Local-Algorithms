<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_new.mlw"/>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="28251"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27394"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28065"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="28030"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="26200"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="23704"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="AFtoRS_RStoAF.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="27620"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="26550"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="123773"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="126755"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="527443"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145478"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="32465"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="41497"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="37738"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="35969"/></proof>
 </goal>
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="33792"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6573933"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2249636"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2469543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="379235"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="(val_all_top)">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="33089"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="34299"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="32835"/></proof>
 </goal>
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="30103"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="36632"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="67177"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="33909"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="44133"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="37211"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="40456"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.70" steps="90966"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="36525"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="39735"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2"><result status="valid" time="0.18" steps="39921"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2150181"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186545"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2617438"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1618350"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.60" steps="2996"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219067"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="785"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="149998"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="791"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2574935"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276417"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2487193"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276394"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.20" steps="40678"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="38325"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338455"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="408052"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472376"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149065"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2468665"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149903"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="131862"/></proof>
       <proof prover="4"><result status="valid" time="0.13" steps="799"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.19" steps="40948"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="793"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="43462"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="133959"/></proof>
 <proof prover="4"><result status="valid" time="0.30" steps="1945"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="38903"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="44834"/></proof>
 </goal>
 <goal name="listset_to_listfset_distr" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401631"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310305"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="listset_to_listfset_distr.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="left">
   <goal name="listset_to_listfset_distr.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="listset_to_listfset_distr.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" proved="true" >
     <goal name="listset_to_listfset_distr.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="44060"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="listset_to_listfset_distr.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="167153"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="138"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_then_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763725"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165584"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_then_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_then_right_nil.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1742718"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="99027"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.54" steps="1028"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_then_right_nil.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3087940"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="124913"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
    </goal>
    <goal name="not_subset_spec_then_right_nil.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2481526"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="222356"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H2">
     <goal name="not_subset_spec_then_right_nil.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2364975"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="119960"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="39"/></proof>
     </goal>
     <goal name="not_subset_spec_then_right_nil.0.0.1.1" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="11756008"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1697538"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" proved="true" arg1="H2">
      <goal name="not_subset_spec_then_right_nil.0.0.1.1.0" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="201588"/></proof>
      <proof prover="4"><result status="valid" time="0.03" steps="127"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_spec_then_right_not_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2822702"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="188476"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="subset_spec_then_right_not_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_spec_then_right_not_nil.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="subset_spec_then_right_not_nil.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="43799"/></proof>
    </goal>
    <goal name="subset_spec_then_right_not_nil.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2931503"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171718"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x3">
     <goal name="subset_spec_then_right_not_nil.0.0.1.0" proved="true">
     <transf name="subst" proved="true" arg1="x5">
      <goal name="subset_spec_then_right_not_nil.0.0.1.0.0" proved="true">
      <transf name="case" proved="true" arg1="(subset x4 c)">
       <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.0" expl="true case" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="134848"/></proof>
       <proof prover="4"><result status="valid" time="0.02" steps="44"/></proof>
       </goal>
       <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1" expl="false case" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2755501"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165025"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
        <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0" expl="false case" proved="true">
        <transf name="compile_match" proved="true" >
         <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0" expl="false case" proved="true">
         <transf name="eliminate_let" proved="true" >
          <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0" expl="false case" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0" expl="false case" proved="true">
           <transf name="destruct" proved="true" arg1="H">
            <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0" expl="false case" proved="true">
            <transf name="destruct" proved="true" arg1="H">
             <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.08" steps="35671"/></proof>
             </goal>
             <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.1" expl="false case" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2735101"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160913"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="H3">
              <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.1.0" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.17" steps="42666"/></proof>
              </goal>
              <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.1.1" expl="false case" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2405121"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148490"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="H3">
               <goal name="subset_spec_then_right_not_nil.0.0.1.0.0.1.0.0.0.0.0.1.1.0" expl="false case" proved="true">
               <proof prover="2"><result status="timeout" time="1.00" steps="106601"/></proof>
               <proof prover="4"><result status="valid" time="0.02" steps="46"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_if_right_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2480379"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="255019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="not_subset_spec_if_right_nil.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_spec_if_right_nil.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="110830"/></proof>
   <proof prover="4"><result status="valid" time="0.20" steps="1110"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2090490"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182839"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="subset_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_findFirst.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2180989"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="193793"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="introduce_premises" proved="true" >
    <goal name="subset_findFirst.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175080"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191349"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="clauselist">
     <goal name="subset_findFirst.0.0.0.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2167519"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="95479"/></proof>
     <proof prover="4"><result status="valid" time="1.12" steps="1395"/></proof>
     </goal>
     <goal name="subset_findFirst.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2121716"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="187241"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="clauselist">
      <goal name="subset_findFirst.0.0.0.1.0" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="subset_findFirst.0.0.0.1.0.0" proved="true">
       <proof prover="2"><result status="valid" time="0.35" steps="45137"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="1560"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_findFirst_2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1474339"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109685"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_findFirst_2.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1121925"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="40576"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="subset_findFirst_2.1" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="42618"/></proof>
  </goal>
  <goal name="subset_findFirst_2.2" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="41756"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="concat_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2200665"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="223608"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="concat_findFirst.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="concat_findFirst.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="154776"/></proof>
   <proof prover="4"><result status="valid" time="0.24" steps="1404"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="if_mem_then_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2416387"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="194175"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_mem_then_subset_set_smb.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1641680"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134631"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="100326"/></proof>
   <proof prover="4"><result status="valid" time="0.58" steps="1528"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955177"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166640"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_set_smb_clauselist.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_set_smb_clauselist.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="654319"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168986"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="subset_set_smb_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="47738"/></proof>
    </goal>
    <goal name="subset_set_smb_clauselist.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.78" steps="85282"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="610"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2656112"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180051"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_subset_set_smb.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_subset_set_smb.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="45875"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761004"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" proved="true" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="42303"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1707639"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172719"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.34" steps="43163"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816447"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177277"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0" proved="true">
        <transf name="replace" proved="true" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2102707"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131239"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2434241"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118676"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.27" steps="42181"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038971"/></proof>
           <proof prover="2"><result status="valid" time="0.25" steps="40654"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.41" steps="52625"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.14" steps="42460"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="462678"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154046"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="43633"/></proof>
  </goal>
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3344032"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45503"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal s &gt; 1)">
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2810011"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0" expl="true case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="s">
     <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131944"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="40302"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="39"/></proof>
      </goal>
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5846692"/></proof>
      <proof prover="2"><result status="valid" time="0.42" steps="50571"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="541"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197408"/></proof>
   <proof prover="2"><result status="valid" time="0.37" steps="50437"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2824061"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168386"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction_1.0" proved="true">
  <transf name="exists" proved="true" arg1="(val_all_top)">
   <goal name="subset_of_evalsetconjunction_1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.70" steps="72673"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="6097522"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126353"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2851663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123986"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" proved="true" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2486786"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.81" steps="99214"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="case" proved="true" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="40207"/></proof>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2393648"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113319"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.1.0" expl="false case (true case)" proved="true">
     <proof prover="2"><result status="valid" time="0.42" steps="46254"/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.1.1" expl="false case" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2358643"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119501"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.1.1.0" expl="false case" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2625644"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130499"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
       <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0" expl="false case" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.09" steps="36895"/></proof>
        </goal>
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.1" expl="false case" proved="true">
        <proof prover="0"><result status="valid" time="0.11" steps="198813"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="86964"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="contr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="41409"/></proof>
 </goal>
 <goal name="distr_exists" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5040407"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="41783"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294650"/></proof>
 <proof prover="2"><result status="valid" time="0.37" steps="46524"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="satisf_clauselist_all_mem_satisf" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277560"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192334"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="satisf_clauselist_all_mem_satisf.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373312"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201939"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="satisf_clauselist_all_mem_satisf.0.0" proved="true">
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="satisf_clauselist_all_mem_satisf.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.34" steps="48341"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1331314"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98348"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_is_satisfiable_clauselist.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_is_satisfiable_clauselist.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_is_satisfiable_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="39289"/></proof>
    </goal>
    <goal name="sublist_is_satisfiable_clauselist.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1751538"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152242"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.18" steps="44080"/></proof>
     </goal>
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1090093"/></proof>
     <proof prover="2"><result status="valid" time="0.38" steps="50498"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2562090"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128444"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="110326"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="207"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="44123"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2659792"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="190490"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176750"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.2.0.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2029346"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150376"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.2.0.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2407470"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142616"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="algorithmA_spec&#39;vc.2.0.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.25" steps="49280"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="603"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.2.0.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2263923"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141838"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.0.0.1.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.2.0.0.1.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="valid" time="0.18" steps="47878"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="803"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA_spec&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155371"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="if_subset_then_mem_result">
    <goal name="algorithmA_spec&#39;vc.2.1.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1860195"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121057"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="algorithmA_spec&#39;vc.2.1.0.0" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2208327"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129233"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="algorithmA_spec&#39;vc.2.1.0.0.0" expl="VC for algorithmA_spec" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="algorithmA_spec&#39;vc.2.1.0.0.0.0" expl="VC for algorithmA_spec" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="102243"/></proof>
       <proof prover="4"><result status="valid" time="0.15" steps="852"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA_spec&#39;vc.2.1.0.1" expl="VC for algorithmA_spec" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027475"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139840"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="algorithmA_spec&#39;vc.2.1.0.1.0" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.37" steps="64987"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.2.1.0.1.1" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.23" steps="52416"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="749"/></proof>
      </goal>
      <goal name="algorithmA_spec&#39;vc.2.1.0.1.2" expl="VC for algorithmA_spec" proved="true">
      <proof prover="2"><result status="valid" time="0.21" steps="50506"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2754448"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="189375"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="42054"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="48877"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="algorithmA_spec&#39;vc.3.1.0" expl="VC for algorithmA_spec" proved="true">
    <proof prover="2"><result status="valid" time="0.60" steps="75131"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3056519"/></proof>
  <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="algorithmA_spec&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2314210"/></proof>
    <proof prover="2"><result status="valid" time="0.23" steps="51903"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.4.0.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2311517"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160942"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="algorithmA_spec&#39;vc.4.0.1.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="algorithmA_spec&#39;vc.4.0.1.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0" expl="postcondition" proved="true">
       <transf name="destruct" proved="true" arg1="H">
        <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="destruct" proved="true" arg1="H">
         <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="instantiate" proved="true" arg1="subset_set_smb_clauselist" arg2="clauselist">
          <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1">
           <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="instantiate" proved="true" arg1="Hinst" arg2="x">
            <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2177305"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145996"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.66" steps="91275"/></proof>
             </goal>
             <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
             <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8160101"/></proof>
             <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="753162"/></proof>
             <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
             <transf name="assert" proved="true" arg1="(subset (singleton (convertRStoAF x) ) (set_smb_clauselist clauselist))">
              <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
              <proof prover="2"><result status="valid" time="0.25" steps="51383"/></proof>
              </goal>
              <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1" expl="postcondition" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1970076"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128878"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
               <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0" expl="postcondition" proved="true">
               <transf name="instantiate" proved="true" arg1="Hinst" arg2="(x5++x2)">
                <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0.0" expl="postcondition" proved="true">
                <transf name="destruct" proved="true" arg1="Hinst">
                 <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
                 <proof prover="2"><result status="timeout" time="1.00" steps="132867"/></proof>
                 <proof prover="4"><result status="valid" time="0.14" steps="892"/></proof>
                 </goal>
                 <goal name="algorithmA_spec&#39;vc.4.0.1.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="postcondition" proved="true">
                 <proof prover="0" obsolete="true"><result status="valid" time="0.44" steps="1104830"/></proof>
                 <proof prover="2"><result status="valid" time="0.74" steps="113469"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_mem_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2199400"/></proof>
 <proof prover="2"><result status="valid" time="0.14" steps="45503"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="smb_generic" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502433"/></proof>
 <proof prover="2"><result status="valid" time="0.62" steps="72621"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2"><result status="valid" time="0.38" steps="54588"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="not_subset_spec_test" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="998797"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130723"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_test.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1428122"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130325"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="not_subset_spec_test.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_test.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="45797"/></proof>
    </goal>
    <goal name="not_subset_spec_test.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="108258"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="46"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2801256"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124941"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="equality_is_equal_list&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3682332"/></proof>
  <proof prover="2"><result status="valid" time="0.22" steps="46091"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="43890"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527581"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119434"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="equality_is_equal_list&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.10" steps="40479"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="43705"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="40636"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.25" steps="46060"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2406598"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115325"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_equal_list_reflexive&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2514671"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42817"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_equal_list">
   <goal name="is_equal_list_reflexive&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2515158"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165611"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="is_equal_list_reflexive&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2336425"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112270"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="is_equal_list_reflexive&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="43858"/></proof>
   </goal>
   <goal name="is_equal_list_reflexive&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="43972"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="44101"/></proof>
 </goal>
 <goal name="is_equal_list_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2517181"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154111"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_equal_list_findFirst.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2225855"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165075"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
   <goal name="is_equal_list_findFirst.0.0" proved="true">
   <transf name="destruct_term" proved="true" arg1="clauselist">
    <goal name="is_equal_list_findFirst.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294383"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153564"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="clauselist">
     <goal name="is_equal_list_findFirst.0.0.0.0" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="is_equal_list_findFirst.0.0.0.0.0" proved="true">
      <transf name="destruct_term" proved="true" arg1="x3">
       <goal name="is_equal_list_findFirst.0.0.0.0.0.0" proved="true">
       <transf name="subst" proved="true" arg1="x5">
        <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0" proved="true">
        <transf name="compile_match" proved="true" >
         <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0.0" proved="true">
         <transf name="eliminate_let" proved="true" >
          <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0.0.0" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0.0.0.0" proved="true">
           <transf name="destruct" proved="true" arg1="H">
            <goal name="is_equal_list_findFirst.0.0.0.0.0.0.0.0.0.0.0" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2096289"/></proof>
            <proof prover="2"><result status="valid" time="0.37" steps="54419"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="is_equal_list_findFirst.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.21" steps="51087"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423557"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="46730"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1580198"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="64851"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="44513"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="44310"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="255"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="95333"/></proof>
   <proof prover="4"><result status="valid" time="0.08" steps="264"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="44310"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2997534"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129390"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="44250"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6780028"/></proof>
   <proof prover="2"><result status="valid" time="0.22" steps="48610"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="184"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="111304"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="191"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="48610"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_to_match_findFirst&#39;vc" expl="VC for permut_to_match_findFirst" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permut_to_match_findFirst&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1671752"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137040"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="permut_to_match_findFirst&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.21" steps="44901"/></proof>
   </goal>
   <goal name="permut_to_match_findFirst&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="48744"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut_to_match_findFirst&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1692558"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140886"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="permut_to_match_findFirst&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2153448"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173970"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="(is_equal_list x2 x)">
    <goal name="permut_to_match_findFirst&#39;vc.1.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="133804"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="55"/></proof>
    </goal>
    <goal name="permut_to_match_findFirst&#39;vc.1.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.21" steps="47608"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permut_to_match_findFirst&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2171973"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186827"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="findFirst" arg2="in" arg3="H">
    <goal name="permut_to_match_findFirst&#39;vc.1.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2013640"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176847"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="result">
     <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="188757"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.63" steps="134966"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="695"/></proof>
     <transf name="subst" proved="true" arg1="result">
      <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="destruct_term" proved="true" arg1="x9">
        <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="subst" proved="true" arg1="x11">
         <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compile_match" proved="true" >
          <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="eliminate_let" proved="true" >
           <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="destruct" proved="true" arg1="H">
             <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="destruct" proved="true" arg1="H1">
              <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1578813"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="189402"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="unfold" proved="true" arg1="(++)" arg2="in" arg3="H2">
               <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
               <proof prover="2"><result status="timeout" time="1.00" steps="156594"/></proof>
               <proof prover="4"><result status="valid" time="0.10" steps="736"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1745934"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206255"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="unfold" proved="true" arg1="(++)" arg2="in" arg3="H3">
               <goal name="permut_to_match_findFirst&#39;vc.1.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="postcondition" proved="true">
               <proof prover="2"><result status="timeout" time="1.00" steps="162676"/></proof>
               <proof prover="4"><result status="valid" time="0.11" steps="757"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permut_to_match_findFirst&#39;vc.1.1.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338346"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="170099"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="result">
      <goal name="permut_to_match_findFirst&#39;vc.1.1.0.1.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2170427"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="198878"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="compile_match" proved="true" >
       <goal name="permut_to_match_findFirst&#39;vc.1.1.0.1.0.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2169809"/></proof>
       <proof prover="2"><result status="valid" time="0.23" steps="48981"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.27" steps="621"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="exists_permut_that_match_findFirst&#39;vc" expl="VC for exists_permut_that_match_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3698408"/></proof>
 <proof prover="2"><result status="valid" time="0.67" steps="84624"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_to_match_findFirst_lists&#39;vc" expl="VC for permut_to_match_findFirst_lists" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="53646"/></proof>
 </goal>
 <goal name="exists_permut_that_match_findFirst_lists&#39;vc" expl="VC for exists_permut_that_match_findFirst_lists" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="602702"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126745"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="exists_permut_that_match_findFirst_lists&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1128392"/></proof>
  <proof prover="2"><result status="valid" time="0.32" steps="62383"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="49575"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="49076"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="54082"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080190"/></proof>
 <proof prover="2"><result status="valid" time="0.99" steps="147439"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2081573"/></proof>
 <proof prover="2"><result status="valid" time="0.28" steps="55394"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_cl1_cl2" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="49193"/></proof>
 </goal>
 <goal name="find_permut" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="111833"/></proof>
 <proof prover="4"><result status="valid" time="0.09" steps="710"/></proof>
 </goal>
 <goal name="removeFromList_numocc" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1812989"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121491"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2247870"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122237"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="51763"/></proof>
    </goal>
    <goal name="removeFromList_numocc.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="128093"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="286"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1568407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125515"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc_2.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc_2.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="52001"/></proof>
    </goal>
    <goal name="removeFromList_numocc_2.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="109623"/></proof>
    <proof prover="4"><result status="valid" time="0.10" steps="1311"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2105040"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118867"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_length.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2159512"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114480"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" proved="true" arg1="(clauselist = Nil)">
   <goal name="removeFromList_length.0.0" expl="true case" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="52504"/></proof>
   </goal>
   <goal name="removeFromList_length.0.1" expl="false case" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160427"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117680"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="removeFromList_length.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="removeFromList_length.0.1.0.0" expl="false case" proved="true">
     <proof prover="2"><result status="valid" time="0.11" steps="47927"/></proof>
     </goal>
     <goal name="removeFromList_length.0.1.0.1" expl="false case" proved="true">
     <proof prover="2"><result status="timeout" time="2.00" steps="357958"/></proof>
     <proof prover="4"><result status="valid" time="0.06" steps="667"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_permut" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1553188"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121707"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_permut.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1725343"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118513"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="permut">
   <goal name="removeFromList_permut.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_permut.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1655081"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119617"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(x = elem)">
     <goal name="removeFromList_permut.0.0.0.0" expl="true case" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="53944"/></proof>
     </goal>
     <goal name="removeFromList_permut.0.0.0.1" expl="false case" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1657192"/></proof>
     <proof prover="2"><result status="valid" time="0.22" steps="53313"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_permut_concat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2091139"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122792"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_permut_concat.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1626528"/></proof>
  <proof prover="2"><result status="valid" time="0.38" steps="80653"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_elem_not_in_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424464"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122344"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_elem_not_in_list.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2419393"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136747"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="54530"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="concat_with_element" proved="true">
 <proof prover="2"><result status="valid" time="0.32" steps="61374"/></proof>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1454073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105159"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_concat_not_mem_l1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1459543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98112"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.29" steps="62814"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910038"/></proof>
 <proof prover="2"><result status="valid" time="0.27" steps="57935"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="857767"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="312454"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="139238"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="44"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="134669"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="44"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255490"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111610"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2395037"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107447"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="46605"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="49812"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.12" steps="45896"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2399925"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108239"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="47054"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="133594"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="128760"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="48"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4704247"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125330"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="48891"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.28" steps="55864"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.29" steps="56431"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_for_all" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1390617"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="71842"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_for_all.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2154148"/></proof>
  <proof prover="2"><result status="valid" time="0.25" steps="59818"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_general" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="47557"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_general.0" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="51395"/></proof>
  </goal>
  <goal name="not_subset_general.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2443561"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118174"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_general.1.0" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="2202787"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="140169"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_general.1.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="53517"/></proof>
    </goal>
    <goal name="not_subset_general.1.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778385"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="198244"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.22" steps="55866"/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778925"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106286"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="not_subset_spec">
      <goal name="not_subset_general.1.0.1.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="not_subset_general.1.0.1.1.0.0" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2297837"/></proof>
       <proof prover="2" timelimit="5"><result status="valid" time="1.67" steps="186355"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="not_subset_general.1.0.1.1.0.1" proved="true">
       <proof prover="2"><result status="valid" time="0.10" steps="46445"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_numOfSubset_0" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2503073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121511"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_numOfSubset_0.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2644547"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125048"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_numOfSubset_0.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.27" steps="57922"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="475"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2673230"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116569"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_0_not_subset&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1353144"/></proof>
  <proof prover="2"><result status="valid" time="0.59" steps="87527"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="599401"/></proof>
  <proof prover="2"><result status="valid" time="0.27" steps="61578"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1453114"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73242"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.2.0" expl="VC for numOfSubset_0_not_subset" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="53638"/></proof>
    </goal>
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="154827"/></proof>
    <proof prover="4"><result status="valid" time="0.09" steps="215"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="notSubset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="56224"/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_1" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="55612"/></proof>
 </goal>
 <goal name="addSubset_to_numOfSubset" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="58281"/></proof>
 </goal>
 <goal name="removeNumOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2038765"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150335"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeNumOfSubset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1522274"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167842"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeNumOfSubset.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="154226"/></proof>
   <proof prover="4"><result status="valid" time="0.43" steps="3026"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_clauselist_c_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1132002"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116127"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_clauselist_c_1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1498814"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130104"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="(exists set p. mem1 (set,p) clauselist /\ subset set c)">
   <goal name="numOfSubset_clauselist_c_1.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="53802"/></proof>
   </goal>
   <goal name="numOfSubset_clauselist_c_1.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1268318"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="(forall set1:fset atomicformula, p1:rightside. mem1 (set1,p1) (removeFromList (set, p) clauselist) -&gt; (not subset set1 c))">
    <goal name="numOfSubset_clauselist_c_1.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="54305"/></proof>
    </goal>
    <goal name="numOfSubset_clauselist_c_1.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1220980"/></proof>
    <proof prover="2"><result status="valid" time="0.24" steps="55260"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1_num_occ" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1973987"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="226357"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1_num_occ.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1026651"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129831"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1_num_occ.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="149264"/></proof>
   <proof prover="4"><result status="valid" time="0.18" steps="1420"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1561499"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118745"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2122453"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="610484"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="155187"/></proof>
   <proof prover="4"><result status="valid" time="0.23" steps="1869"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1_hd_right" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2119715"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140807"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1_hd_right.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2843749"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="865540"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="assert" proved="true" arg1="(not mem1 (set,p) x1)">
   <goal name="numOfSubset_1_hd_right.0.0" expl="asserted formula" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2959420"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144456"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="numOfSubset_1_hd_right.0.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="171087"/></proof>
    <proof prover="4"><result status="valid" time="0.13" steps="843"/></proof>
    </goal>
    <goal name="numOfSubset_1_hd_right.0.0.1" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="53378"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset_1_hd_right.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1075615"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="188689"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="(mem1 (set,p) x)">
    <goal name="numOfSubset_1_hd_right.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.49" steps="97263"/></proof>
    </goal>
    <goal name="numOfSubset_1_hd_right.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1337659"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165880"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="numOfSubset_1_hd_right.0.1.1.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1659331"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139038"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="x2">
      <goal name="numOfSubset_1_hd_right.0.1.1.0.0" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2144620"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153522"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="subset_findFirst_2" arg2="clauselist,c">
       <goal name="numOfSubset_1_hd_right.0.1.1.0.0.0" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="numOfSubset_1_hd_right.0.1.1.0.0.0.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2268438"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154125"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="numOfSubset_1_hd_right.0.1.1.0.0.0.0.0" proved="true">
         <proof prover="2"><result status="valid" time="0.20" steps="55042"/></proof>
         </goal>
         <goal name="numOfSubset_1_hd_right.0.1.1.0.0.0.0.1" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2898386"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156776"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="numOfSubset_1_hd_right.0.1.1.0.0.0.0.1.0" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2806990"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158514"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" proved="true" arg1="((set,p) = (set1,p1))">
           <goal name="numOfSubset_1_hd_right.0.1.1.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1053986"/></proof>
           <proof prover="2"><result status="valid" time="0.32" steps="58890"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
           <goal name="numOfSubset_1_hd_right.0.1.1.0.0.0.0.1.0.1" proved="true">
           <proof prover="2"><result status="valid" time="0.40" steps="73475"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="numOfSubset_1_hd_right.0.1.1.1" proved="true">
     <proof prover="2"><result status="valid" time="0.18" steps="52097"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findFirst_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2932025"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162406"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findFirst_nil.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1303575"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="74165"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="(not_subset_spec clauselist (add p c))">
   <goal name="findFirst_nil.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="56011"/></proof>
   </goal>
   <goal name="findFirst_nil.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1167724"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="74178"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="not_subset_general" arg2="clauselist">
    <goal name="findFirst_nil.0.1.0" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add p c)">
     <goal name="findFirst_nil.0.1.0.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1445159"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132478"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" proved="true" arg1="(not_subset_spec clauselist c)">
      <goal name="findFirst_nil.0.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.33" steps="71192"/></proof>
      </goal>
      <goal name="findFirst_nil.0.1.0.0.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1348361"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130962"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="not_subset_general" arg2="clauselist,c">
       <goal name="findFirst_nil.0.1.0.0.1.0" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2323350"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823577"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="instantiate" proved="true" arg1="not_subset_spec_then_right_nil" arg2="clauselist, c">
        <goal name="findFirst_nil.0.1.0.0.1.0.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1379126"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133464"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="findFirst_nil.0.1.0.0.1.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2"><result status="valid" time="0.11" steps="48430"/></proof>
         </goal>
         <goal name="findFirst_nil.0.1.0.0.1.0.0.1" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1381563"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131637"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="findFirst_nil.0.1.0.0.1.0.0.1.0" proved="true">
          <proof prover="2"><result status="valid" time="0.24" steps="59255"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_aux_findFirst" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="595898"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126221"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_aux_findFirst.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1859370"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210176"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="(num_occ (set,p) clauselist = 1)">
   <goal name="removeFromList_aux_findFirst.0.0" expl="asserted formula" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="890059"/></proof>
   <proof prover="2"><result status="valid" time="0.62" steps="110084"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="removeFromList_aux_findFirst.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="873244"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177074"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="(numOfSubset (removeFromList (set, p) clauselist) c = 0)">
    <goal name="removeFromList_aux_findFirst.0.1.0" expl="asserted formula" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="297018"/></proof>
    <proof prover="2"><result status="valid" time="0.30" steps="60958"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="178"/></proof>
    </goal>
    <goal name="removeFromList_aux_findFirst.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="872650"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161521"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" proved="true" arg1="(numOfSubset clauselist c = 1)">
     <goal name="removeFromList_aux_findFirst.0.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2187410"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1176257"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="assert" proved="true" arg1="(num_occ (set,p) (removeFromList (set, p) clauselist) = 0)">
      <goal name="removeFromList_aux_findFirst.0.1.1.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.24" steps="58755"/></proof>
      </goal>
      <goal name="removeFromList_aux_findFirst.0.1.1.0.1" expl="asserted formula" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2176084"/></proof>
      <proof prover="2"><result status="valid" time="0.17" steps="52472"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="removeFromList_aux_findFirst.0.1.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1100526"/></proof>
     <proof prover="2"><result status="valid" time="0.20" steps="52575"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2009871"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138025"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="56173"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2370706"/></proof>
  <proof prover="2"><result status="valid" time="0.24" steps="59033"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28" steps="64628"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2662931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134022"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="not_subset_spec" arg2="in" arg3="Requires">
   <goal name="not_subset_permut&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="destruct_term" proved="true" arg1="clauselist">
    <goal name="not_subset_permut&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1063516"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133062"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="replace" proved="true" arg1="clauselist" arg2="(Cons x1 x)" arg3="in" arg4="Requires">
     <goal name="not_subset_permut&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2387328"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112318"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="compile_match" proved="true" >
      <goal name="not_subset_permut&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2400060"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122559"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compile_match" proved="true" >
         <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="240039"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="236098"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="replace" proved="true" arg1="clauselist" arg2="(Cons (x2, x1) x)" arg3="in" arg4="H">
          <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2254994"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210097"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="compile_match" proved="true" >
           <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2392806"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210639"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="split_vc" proved="true" >
            <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2274755"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="212910"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" proved="true" arg1="(mem1 (x2,x1) clauselist2)">
             <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="2"><result status="timeout" time="2.00" steps="354045"/></proof>
             <proof prover="4"><result status="valid" time="0.06" steps="179"/></proof>
             </goal>
             <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2140372"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="215461"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" proved="true" arg1="not_subset_general" arg2="clauselist">
              <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1.0" expl="postcondition" proved="true">
              <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
               <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.54" steps="82966"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="not_subset_permut&#39;vc.3.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="2"><result status="valid" time="0.11" steps="51218"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="not_subset_permut&#39;vc.3.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="2"><result status="valid" time="0.11" steps="51659"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="not_subset_permut&#39;vc.3.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.23" steps="55806"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes_findFirst_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1697395"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155487"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="permutacoes_findFirst_nil.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2070851"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131528"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="permutacoes_findFirst_nil.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="permutacoes_findFirst_nil.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="permutacoes_findFirst_nil.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.11" steps="51768"/></proof>
     </goal>
     <goal name="permutacoes_findFirst_nil.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2128845"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127904"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="permutacoes_findFirst_nil.0.0.0.1.0" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2637565"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="216299"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" proved="true" arg1="not_subset_spec_if_right_nil" arg2="clauselist">
        <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0" proved="true">
        <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
         <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.46" steps="84826"/></proof>
           </goal>
           <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2473546"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144971"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" proved="true" arg1="not_subset_permut" arg2="clauselist">
            <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0" proved="true">
            <transf name="instantiate" proved="true" arg1="Hinst" arg2="clauselist2">
             <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0" proved="true">
             <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
              <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0" proved="true">
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
               <proof prover="2"><result status="valid" time="0.13" steps="50859"/></proof>
               </goal>
               <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1" proved="true">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2667921"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="178014"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" proved="true" arg1="Hinst">
                <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.0" expl="destruct premise" proved="true">
                <proof prover="2"><result status="valid" time="0.11" steps="49701"/></proof>
                </goal>
                <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1" proved="true">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2653782"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="183474"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="instantiate" proved="true" arg1="not_subset_spec_then_right_nil" arg2="clauselist2">
                 <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0" proved="true">
                 <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
                  <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0" proved="true">
                  <transf name="destruct" proved="true" arg1="Hinst">
                   <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
                   <proof prover="2"><result status="valid" time="0.11" steps="49875"/></proof>
                   </goal>
                   <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.1" proved="true">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2910827"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="188701"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="destruct" proved="true" arg1="Hinst">
                    <goal name="permutacoes_findFirst_nil.0.0.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.1.0" proved="true">
                    <proof prover="2"><result status="timeout" time="1.00" steps="144982"/></proof>
                    <proof prover="4"><result status="valid" time="0.06" steps="230"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2590609"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="215450"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" proved="true" arg1="not_subset_spec_if_right_nil" arg2="clauselist">
        <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0" proved="true">
        <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
         <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.89" steps="149266"/></proof>
           </goal>
           <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2758627"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145236"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" proved="true" arg1="not_subset_permut" arg2="clauselist">
            <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0" proved="true">
            <transf name="instantiate" proved="true" arg1="Hinst" arg2="clauselist2">
             <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0" proved="true">
             <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
              <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0" proved="true">
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
               <proof prover="2"><result status="valid" time="0.12" steps="50944"/></proof>
               </goal>
               <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1" proved="true">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763802"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="183613"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" proved="true" arg1="Hinst">
                <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.0" expl="destruct premise" proved="true">
                <proof prover="2"><result status="valid" time="0.12" steps="49786"/></proof>
                </goal>
                <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1" proved="true">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2695980"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186837"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="instantiate" proved="true" arg1="not_subset_spec_then_right_nil" arg2="clauselist2">
                 <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0" proved="true">
                 <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
                  <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0.0" proved="true">
                  <transf name="destruct" proved="true" arg1="Hinst">
                   <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
                   <proof prover="2"><result status="valid" time="0.12" steps="49960"/></proof>
                   </goal>
                   <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0.0.1" proved="true">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2936244"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191235"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="destruct" proved="true" arg1="Hinst">
                    <goal name="permutacoes_findFirst_nil.0.0.0.1.0.1.0.0.0.1.0.0.0.1.1.0.0.1.0" proved="true">
                    <proof prover="2"><result status="valid" time="0.22" steps="54995"/></proof>
                    <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="219"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equality_add" proved="true">
 <proof prover="2"><result status="valid" time="0.41" steps="74778"/></proof>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="449360"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181667"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_basecase&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1495979"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168156"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_basecase&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.20" steps="57079"/></proof>
     </goal>
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1473231"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166910"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="141417"/></proof>
       <proof prover="4"><result status="valid" time="0.35" steps="1333"/></proof>
       </goal>
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1781275"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="208820"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(left ++ l)">
        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0" expl="postcondition" proved="true">
        <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p) (add (convertRStoAF p1) c))">
         <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1802149"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="203126"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.31" steps="67302"/></proof>
          </goal>
          <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1799432"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219472"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0" expl="postcondition" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1899414"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="195239"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1883329"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="216516"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="replace" proved="true" arg1="(algorithmA_spec (removeFromList elem1 clauselist)
  (add (convertRStoAF p1) c))" arg2="(add (convertRStoAF p) (add (convertRStoAF p1) c))">
             <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0" expl="postcondition" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1898614"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="200401"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem2 clauselist)">
              <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0" expl="postcondition" proved="true">
              <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF elem21) c)">
               <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0" expl="postcondition" proved="true">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1909334"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="204004"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" proved="true" arg1="Hinst">
                <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
                <proof prover="2"><result status="valid" time="0.21" steps="58634"/></proof>
                </goal>
                <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1" expl="postcondition" proved="true">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1903838"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206912"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" proved="true" arg1="Hinst">
                 <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0" expl="postcondition" proved="true">
                 <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem2 clauselist) (Cons elem1 Nil))">
                  <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
                  <proof prover="2"><result status="valid" time="0.55" steps="95885"/></proof>
                  </goal>
                  <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1" expl="postcondition" proved="true">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1318166"/></proof>
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192711"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="destruct" proved="true" arg1="Hinst">
                   <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0" expl="postcondition" proved="true">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1418744"/></proof>
                   <proof prover="2"><result status="timeout" time="1.00" steps="195642"/></proof>
                   <proof prover="4"><result status="valid" time="0.33" steps="1546"/></proof>
                   </goal>
                   <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1" expl="postcondition" proved="true">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1355693"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181769"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(left ++ l)">
                    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0" expl="postcondition" proved="true">
                    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1359147"/></proof>
                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182321"/></proof>
                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                    <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p) (add (convertRStoAF elem21) c))">
                     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0" expl="postcondition" proved="true">
                     <transf name="destruct" proved="true" arg1="Hinst">
                      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.0" expl="destruct premise" proved="true">
                      <proof prover="2"><result status="valid" time="0.39" steps="73875"/></proof>
                      </goal>
                      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1" expl="postcondition" proved="true">
                      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1357470"/></proof>
                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185902"/></proof>
                      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                      <transf name="destruct" proved="true" arg1="Hinst">
                       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0" expl="postcondition" proved="true">
                       <transf name="destruct" proved="true" arg1="Hinst">
                        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0" expl="postcondition" proved="true">
                        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1442438"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="212251"/></proof>
                        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                        <transf name="replace" proved="true" arg1="(algorithmA_spec (removeFromList elem2 clauselist)
      (add (convertRStoAF elem21) c))" arg2="(add (convertRStoAF p) (add (convertRStoAF elem21) c))">
                         <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0" expl="postcondition" proved="true">
                         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2732213"/></proof>
                         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1037041"/></proof>
                         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                         <transf name="assert" proved="true" arg1="(p11 = p)">
                          <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                          <proof prover="2"><result status="timeout" time="1.00" steps="175922"/></proof>
                          <proof prover="4"><result status="valid" time="0.78" steps="4861"/></proof>
                          </goal>
                          <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1" expl="postcondition" proved="true">
                          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1978251"/></proof>
                          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="195000"/></proof>
                          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                          <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
                           <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
                           <proof prover="2"><result status="valid" time="0.25" steps="61604"/></proof>
                           </goal>
                           <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.1" expl="postcondition" proved="true">
                           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1874979"/></proof>
                           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192486"/></proof>
                           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                           <transf name="assert" proved="true" arg1="(right3 = Cons elem2 Nil)">
                            <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.1.0" expl="asserted formula" proved="true">
                            <proof prover="0"><result status="timeout" time="1.00" steps="1534480"/></proof>
                            <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="921744"/></proof>
                            <proof prover="4" timelimit="5"><result status="valid" time="2.40" steps="13469"/></proof>
                            </goal>
                            <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.1.1" expl="postcondition" proved="true">
                            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2467470"/></proof>
                            <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1051316"/></proof>
                            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                            <transf name="assert" proved="true" arg1="(p1 = elem21)">
                             <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
                             <proof prover="2"><result status="valid" time="0.33" steps="69337"/></proof>
                             </goal>
                             <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.1.1.1" expl="postcondition" proved="true">
                             <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2526582"/></proof>
                             <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1134439"/></proof>
                             <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                             <transf name="assert" proved="true" arg1="((convertRStoAF p1) = (convertRStoAF elem21))">
                              <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.1.1.1.0" expl="asserted formula" proved="true">
                              <proof prover="2"><result status="valid" time="0.14" steps="53589"/></proof>
                              </goal>
                              <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.1.1.1.1" expl="postcondition" proved="true">
                              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1759157"/></proof>
                              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191222"/></proof>
                              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                              <transf name="assert" proved="true" arg1="((convertRStoAF p) = (convertRStoAF p11))">
                               <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.1.1.1.1.0" expl="asserted formula" proved="true">
                               <proof prover="2"><result status="valid" time="0.15" steps="53601"/></proof>
                               </goal>
                               <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0.1.1.1.1.1.1" expl="postcondition" proved="true">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1932036"/></proof>
                               <proof prover="2"><result status="valid" time="0.22" steps="57900"/></proof>
                               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                         <proof prover="2"><result status="valid" time="0.23" steps="57989"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.1.0.0.1.0.1" expl="postcondition" proved="true">
                        <proof prover="2"><result status="timeout" time="1.00" steps="183445"/></proof>
                        <proof prover="4"><result status="valid" time="0.20" steps="463"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 <transf name="destruct" arg1="Hinst">
                  <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.0" expl="postcondition">
                  <proof prover="0"><result status="timeout" time="1.00" steps="2079085"/></proof>
                  <proof prover="2"><result status="timeout" time="1.00" steps="203568"/></proof>
                  <proof prover="4"><result status="timeout" time="1.00"/></proof>
                  </goal>
                  <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1" expl="postcondition">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1584715"/></proof>
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219304"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(left ++ l)">
                   <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0" expl="postcondition">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1497247"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="200966"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p) (add (convertRStoAF elem21) c))">
                    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0.0" expl="postcondition">
                    <transf name="destruct" arg1="Hinst">
                     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0.0.0" expl="destruct premise" proved="true">
                     <proof prover="2"><result status="valid" time="0.35" steps="73989"/></proof>
                     </goal>
                     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0.0.1" expl="postcondition">
                     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1435460"/></proof>
                     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="210299"/></proof>
                     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                     <transf name="destruct" arg1="Hinst">
                      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0" expl="postcondition">
                      <transf name="destruct" arg1="Hinst">
                       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0" expl="postcondition">
                       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1388647"/></proof>
                       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191414"/></proof>
                       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                       <transf name="replace" arg1="(algorithmA_spec (removeFromList elem2 clauselist)
      (add (convertRStoAF elem21) c))" arg2="(add (convertRStoAF p) (add (convertRStoAF elem21) c))">
                        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.0" expl="postcondition">
                        <proof prover="0"><result status="timeout" time="1.00" steps="2096397"/></proof>
                        <proof prover="2"><result status="timeout" time="1.00" steps="195534"/></proof>
                        <proof prover="4"><result status="timeout" time="1.00"/></proof>
                        </goal>
                        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                        <proof prover="2"><result status="valid" time="0.21" steps="57960"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1" expl="postcondition" proved="true">
                       <proof prover="2"><result status="timeout" time="1.00" steps="195392"/></proof>
                       <proof prover="4"><result status="valid" time="0.20" steps="442"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="2"><result status="valid" time="0.21" steps="56500"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0.1.0.0.1.0.1" expl="postcondition" proved="true">
            <proof prover="2"><result status="timeout" time="1.00" steps="205548"/></proof>
            <proof prover="4"><result status="valid" time="0.13" steps="355"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses">
 <proof prover="0"><result status="timeout" time="1.00" steps="1885864"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="159024"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138055"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119580"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1837167"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138583"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1831857"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135932"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
    <goal name="removeFromList_algorithmA&#39;vc.0.0.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0" expl="postcondition">
     <transf name="destruct" arg1="Hinst">
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="53196"/></proof>
      </goal>
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1221720"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152797"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0" expl="postcondition">
       <transf name="destruct" arg1="Hinst">
        <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0.0" expl="postcondition">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4462076"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="56433"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="eliminate_let" >
         <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0.0.0" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="55655"/></proof>
         <transf name="destruct" arg1="H">
          <goal name="removeFromList_algorithmA&#39;vc.4.1.0.0.1.0.1.0.0" expl="postcondition">
          <transf name="destruct" arg1="H">
           <goal name="removeFromList_algorithmA&#39;vc.4.1.0.0.1.0.1.0.0.0" expl="postcondition">
           <proof prover="0"><result status="timeout" time="1.00" steps="1631380"/></proof>
           <proof prover="2"><result status="failure" time="0.00"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           </goal>
           <goal name="removeFromList_algorithmA&#39;vc.4.1.0.0.1.0.1.0.0.1" expl="postcondition">
           <proof prover="0"><result status="timeout" time="1.00" steps="1865786"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="176639"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="H">
            <goal name="removeFromList_algorithmA&#39;vc.4.1.0.0.1.0.1.0.0.1.0" expl="postcondition">
            <proof prover="0"><result status="timeout" time="1.00" steps="1953679"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="176161"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="H">
             <goal name="removeFromList_algorithmA&#39;vc.4.1.0.0.1.0.1.0.0.1.0.0" expl="postcondition">
             <proof prover="0"><result status="timeout" time="1.00" steps="1969000"/></proof>
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0.1" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1980112"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130617"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="replace" arg1="(algorithmA_spec clauselist c)" arg2="(algorithmA_spec (left ++ l) (add (convertRStoAF p) c))">
         <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0.1.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1279435"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138854"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(exists s. right = Cons (s,p) l)">
          <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0.1.0.0" expl="asserted formula">
          <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="57620"/></proof>
          </goal>
          <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0.1.0.1" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1296889"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139089"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="introduce_exists" >
           <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0.1.0.1.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1300198"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139617"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="removeTwoClauses" arg2="clauselist,c,(s, p),(set, p1)">
            <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0.1.0.1.0.0" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165965"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.39" steps="2159"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0.1.1" expl="equality hypothesis">
         <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="53497"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="removeFromList_algorithmA&#39;vc.4.0" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2074287"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134209"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130127"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="242"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1327298"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.79" steps="107801"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2385706"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133330"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="permutacoes&#39;vc.2.0" expl="precondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="55482"/></proof>
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="permutacoes&#39;vc.2.0.0" expl="precondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="permutacoes&#39;vc.2.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2324535"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="53003"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="permutacoes&#39;vc.2.0.0.1" expl="precondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2005457"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146019"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="permutacoes&#39;vc.2.0.0.1.0" expl="precondition">
      <transf name="destruct" arg1="Hinst">
       <goal name="permutacoes&#39;vc.2.0.0.1.0.0" expl="precondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2126984"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145989"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
        <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0" expl="precondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2163670"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134395"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="Hinst" arg2="c">
         <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0" expl="precondition">
         <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="56762"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="53720"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.1" expl="precondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2167093"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134557"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.1.0" expl="precondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2139365"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="178492"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.1.0.0" expl="precondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816389"/></proof>
            <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="58428"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.2.0.0.1.0.0.0.0.1.0.1" expl="precondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1643962"/></proof>
            <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="58499"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="603"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permutacoes&#39;vc.2.0.0.1.0.1" expl="precondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761686"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="57766"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1700592"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165952"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" arg1="clauselist">
   <goal name="permutacoes&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1500063"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176119"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="subst" arg1="clauselist">
    <goal name="permutacoes&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="737684"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="194019"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="permutacoes&#39;vc.3.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="538952"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.91" steps="150035"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="eliminate_let" >
      <goal name="permutacoes&#39;vc.3.0.0.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183076"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.74" steps="103970"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x5 x4)">
       <goal name="permutacoes&#39;vc.3.0.0.1.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="c">
        <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0" expl="postcondition">
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.0" expl="destruct premise">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1158646"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155336"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0" expl="postcondition">
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="801897"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119509"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="replace" arg1="(left ++ l)" arg2="(x3 ++ x2)" arg3="in" arg4="Hinst">
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0" expl="postcondition">
            <proof prover="0"><result status="timeout" time="1.00" steps="764912"/></proof>
            <proof prover="2"><undone/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1" expl="equality hypothesis">
            <proof prover="0"><result status="timeout" time="1.00" steps="702083"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="166489"/></proof>
            <proof prover="4"><result status="valid" time="0.04" steps="54"/></proof>
            <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0" expl="equality hypothesis">
             <transf name="instantiate" arg1="Hinst" arg2="c">
              <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0.0" expl="equality hypothesis">
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0.0.0" expl="destruct premise">
               <proof prover="2"><undone/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0.0.1" expl="equality hypothesis">
               <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="1464687"/></proof>
               <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="726510"/></proof>
               <proof prover="4" timelimit="5"><result status="valid" time="0.04" steps="54"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0.0.1.0" expl="equality hypothesis">
                <proof prover="0"><result status="timeout" time="1.00" steps="790040"/></proof>
                <proof prover="2"><result status="timeout" time="1.00" steps="151091"/></proof>
                <proof prover="4"><result status="valid" time="0.05" steps="57"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0.0.1.0.0" expl="equality hypothesis">
                 <proof prover="2"><undone/></proof>
                 <proof prover="4"><result status="valid" time="0.05" steps="60"/></proof>
                 </goal>
                 <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.1.0.0.1.0.1" expl="equality hypothesis">
                 <proof prover="0"><result status="timeout" time="1.00" steps="961651"/></proof>
                 <proof prover="2"><undone/></proof>
                 <proof prover="4"><result status="valid" time="0.05" steps="60"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="247732"/></proof>
           <proof prover="2"><undone/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="54"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         <transf name="instantiate" arg1="removeFromList_algorithmA" arg2="clauselist2">
          <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.0.0" expl="destruct premise">
          <transf name="instantiate" arg1="Hinst" arg2="c">
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.0.0.0" expl="destruct premise">
           <transf name="instantiate" arg1="Hinst" arg2="(x1, x)">
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.0.0.0.0" expl="destruct premise">
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.0.0.0.0.0" expl="destruct premise">
             <proof prover="2" obsolete="true"><undone/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="889"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.0.0.0.0.1" expl="destruct premise">
             <proof prover="2" obsolete="true"><undone/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="42"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="10448"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="51247"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="42"/></proof>
         <transf name="instantiate" arg1="removeFromList_algorithmA" arg2="clauselist2">
          <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="c">
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0" expl="postcondition">
           <transf name="instantiate" arg1="Hinst" arg2="(x1, x)">
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0" expl="postcondition">
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0.0" expl="destruct premise">
             <proof prover="2" obsolete="true"><undone/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="42"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0.1" expl="postcondition">
             <proof prover="2" obsolete="true"><undone/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="42"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permutacoes&#39;vc.3.0.0.1" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="463751"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="348632"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="eliminate_let" >
      <goal name="permutacoes&#39;vc.3.0.0.1.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1150256"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.56" steps="103970"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x5 x4)">
       <goal name="permutacoes&#39;vc.3.0.0.1.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="c">
        <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0" expl="postcondition">
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.0" expl="destruct premise">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5751059"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="714356"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0" expl="postcondition">
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="valid" time="0.39" steps="76262"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="804996"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128840"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0" expl="postcondition">
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.0" expl="destruct premise">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="813824"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128236"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0" expl="postcondition">
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.0" expl="postcondition">
               <proof prover="2"><result status="valid" time="0.71" steps="109418"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1" expl="postcondition">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1431797"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160202"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="assert" arg1="(exists set. right = Cons (set,p) l)">
                <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.0" expl="asserted formula">
                <proof prover="2"><result status="valid" time="0.22" steps="57754"/></proof>
                </goal>
                <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1" expl="postcondition">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1524555"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159860"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="introduce_exists" >
                 <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0" expl="postcondition">
                 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1529210"/></proof>
                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160227"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 <transf name="instantiate" arg1="removeFromList_algorithmA" arg2="clauselist2,c,(set,p)">
                  <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0" expl="postcondition">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1527451"/></proof>
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165837"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="destruct" arg1="Hinst">
                   <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.0" expl="destruct premise">
                   <proof prover="2"><result status="valid" time="0.13" steps="53420"/></proof>
                   </goal>
                   <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1" expl="postcondition">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1528372"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162923"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="destruct" arg1="Hinst">
                    <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1.0" expl="destruct premise">
                    <proof prover="2"><result status="timeout" time="1.00" steps="152995"/></proof>
                    <proof prover="4"><result status="valid" time="0.13" steps="343"/></proof>
                    </goal>
                    <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1.1" expl="postcondition">
                    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1527643"/></proof>
                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166831"/></proof>
                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                    <transf name="destruct" arg1="Hinst">
                     <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1.1.0" expl="destruct premise">
                     <proof prover="2"><result status="valid" time="0.21" steps="56202"/></proof>
                     </goal>
                     <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1.1.1" expl="postcondition">
                     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1532294"/></proof>
                     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162661"/></proof>
                     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                     <transf name="destruct" arg1="Hinst">
                      <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1.1.1.0" expl="postcondition">
                      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1622590"/></proof>
                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167364"/></proof>
                      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                      <transf name="replace" arg1="(algorithmA_spec clauselist2 c)" arg2="(algorithmA_spec (removeFromList (set, p) clauselist2)
      (add (convertRStoAF p) c))">
                       <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1.1.1.0.0" expl="postcondition">
                       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1697078"/></proof>
                       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148224"/></proof>
                       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                       <transf name="replace" arg1="(algorithmA_spec (Cons x5 x4) c)" arg2="(algorithmA_spec (x3 ++ x2) (add (convertRStoAF x) c))">
                        <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1.1.1.0.0.0" expl="postcondition">
                        <proof prover="2"><result status="valid" time="0.49" steps="84073"/></proof>
                        </goal>
                        <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1.1.1.0.0.1" expl="equality hypothesis">
                        <proof prover="2"><result status="valid" time="0.23" steps="59713"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1.0.1.1.0.0.1.1.1.0.1" expl="equality hypothesis">
                       <proof prover="2"><result status="valid" time="0.32" steps="68079"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1.0.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="53218"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1184111"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="53066"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0" expl="postcondition">
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="800658"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116797"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="802719"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117740"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0.0" expl="destruct premise">
             <proof prover="2" obsolete="true"><undone/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0.1" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="794955"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117742"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0.1.0" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="938733"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131629"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0.1.0.0" expl="postcondition">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1420514"/></proof>
               <proof prover="2" obsolete="true"><undone/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.0.0.1.0.1" expl="postcondition">
               <proof prover="2" obsolete="true"><undone/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.3.0.0.1.0.0.0.1.0.1" expl="postcondition">
           <proof prover="2" obsolete="true"><undone/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutacoes&#39;vc.3.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="58282"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_A&#39;vc" expl="VC for monotone_A">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2109125"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123359"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="monotone_A&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1634038"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106893"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_A&#39;vc.0.0" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2081574"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182302"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
    <goal name="monotone_A&#39;vc.0.0.0" expl="variant decrease">
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="monotone_A&#39;vc.0.0.0.0" expl="variant decrease">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2270609"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="229242"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="monotone_A&#39;vc.0.0.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="53245"/></proof>
      </goal>
      <goal name="monotone_A&#39;vc.0.0.0.0.1" expl="variant decrease">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2265242"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176694"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="monotone_A&#39;vc.0.0.0.0.1.0" expl="variant decrease">
       <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="60442"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="441"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_A&#39;vc.0.1" expl="variant decrease">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126792"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="186"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="monotone_A&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2086113"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="57296"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="208"/></proof>
  </goal>
  <goal name="monotone_A&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2774932"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="79412"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="monotone_A&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2381507"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148906"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_A&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1918429"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.43" steps="79241"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="eliminate_let" >
    <goal name="monotone_A&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1912688"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111675"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="exists_permut_that_match_findFirst" arg2="clauselist">
     <goal name="monotone_A&#39;vc.3.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1952454"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118138"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="Hinst" arg2="c">
      <goal name="monotone_A&#39;vc.3.0.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="d">
       <goal name="monotone_A&#39;vc.3.0.0.0.0.0" expl="postcondition">
       <transf name="destruct" arg1="Hinst">
        <goal name="monotone_A&#39;vc.3.0.0.0.0.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="51564"/></proof>
        </goal>
        <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1955986"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.40" steps="78877"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.0" expl="destruct premise">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6210277"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="815624"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="split_vc" >
          <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.0.0" expl="destruct premise">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6777702"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="926885"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1962372"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165236"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="434"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1960323"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137782"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1960337"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137798"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0.0" expl="postcondition">
            <transf name="destruct" arg1="Hinst">
             <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0.0.0" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2072348"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152642"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
              <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0.0.0.0" expl="postcondition">
              <transf name="instantiate" arg1="Hinst" arg2="c">
               <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0.0.0.0.0" expl="postcondition">
               <transf name="destruct" arg1="Hinst">
                <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="destruct premise">
                <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="53900"/></proof>
                </goal>
                <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0.0.0.0.0.1" expl="postcondition">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2099917"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154326"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0.0.0.0.0.1.0" expl="postcondition">
                 <transf name="destruct" arg1="Hinst">
                  <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0" expl="postcondition">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1782066"/></proof>
                  <proof prover="2" obsolete="true"><result status="valid" time="0.45" steps="109781"/></proof>
                  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="62"/></proof>
                  <transf name="assert" arg1="(is_equal_list (left ++ l) (x3 ++ x2))">
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.0" expl="asserted formula">
                   <proof prover="2"><undone/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="62"/></proof>
                   </goal>
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1" expl="postcondition">
                   <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="233390"/></proof>
                   <proof prover="2" obsolete="true"><result status="valid" time="0.94" steps="148124"/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="64"/></proof>
                   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0" expl="postcondition">
                    <transf name="instantiate" arg1="Hinst" arg2="d">
                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0" expl="postcondition">
                     <transf name="destruct" arg1="Hinst">
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="destruct premise">
                      <proof prover="2"><undone/></proof>
                      </goal>
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="postcondition">
                      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1815914"/></proof>
                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165441"/></proof>
                      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                      <transf name="destruct" arg1="Hinst">
                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0" expl="postcondition">
                       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4693120"/></proof>
                       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="759269"/></proof>
                       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                       <transf name="destruct" arg1="Hinst">
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="261002"/></proof>
                        <proof prover="2"><undone/></proof>
                        <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="70"/></proof>
                        </goal>
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2124214"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168365"/></proof>
                        <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="70"/></proof>
                        <transf name="instantiate" arg1="permutacoes" arg2="clauselist">
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0" expl="postcondition">
                         <transf name="instantiate" arg1="Hinst" arg2="clauselist2">
                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0" expl="postcondition">
                          <transf name="instantiate" arg1="Hinst" arg2="d">
                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0" expl="postcondition">
                           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2116815"/></proof>
                           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164243"/></proof>
                           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                           <transf name="destruct" arg1="Hinst">
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.0" expl="destruct premise">
                            <proof prover="2"><undone/></proof>
                            </goal>
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1" expl="postcondition">
                            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2116030"/></proof>
                            <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="58028"/></proof>
                            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                            <transf name="assert" arg1="(x = p)">
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0" expl="asserted formula">
                             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1073551"/></proof>
                             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180443"/></proof>
                             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                             <transf name="assert" arg1="( (algorithmA_spec (x3 ++ x2) (add (convertRStoAF x) d)) ==&#39; algorithmA_spec (left ++ l) (add (convertRStoAF p) d))">
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.0" expl="asserted formula">
                              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1520798"/></proof>
                              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139218"/></proof>
                              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                              <transf name="assert" arg1="(permut (x3 ++ x2) (left ++ l))">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.0.0" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1347790"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143702"/></proof>
                               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                               <transf name="assert" arg1="(exists set. right = Cons (set,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.0.0.0" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1408727"/></proof>
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147869"/></proof>
                                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                <transf name="introduce_exists" >
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.0.0.0.0" expl="asserted formula">
                                 <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set,p,left1,right1,l1,left,right,l">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0.1.0.0" expl="asserted formula">
                                  <proof prover="2"><undone/></proof>
                                  <proof prover="4" obsolete="true"><result status="valid" time="0.35" steps="1801"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.0.0.1" expl="asserted formula">
                                <proof prover="2"><undone/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.0.1" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="291482"/></proof>
                               <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="70775"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="335"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.0.1.0" expl="asserted formula">
                                <proof prover="2"><undone/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="73"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.0.1.1" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="293882"/></proof>
                                <proof prover="2"><undone/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.13" steps="355"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1" expl="asserted formula">
                              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1443413"/></proof>
                              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154946"/></proof>
                              <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="800"/></proof>
                              <transf name="assert" arg1="(permut (x3 ++ x2) (left ++ l))">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.0" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1219851"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156699"/></proof>
                               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                               <transf name="assert" arg1="(exists set. right = Cons (set,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.0.0" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1242479"/></proof>
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157879"/></proof>
                                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                <transf name="introduce_exists" >
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.0.0.0" expl="asserted formula">
                                 <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set,p,left1,right1,l1,left,right,l">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0" expl="asserted formula">
                                  <proof prover="2"><undone/></proof>
                                  <proof prover="4" obsolete="true"><result status="valid" time="1.04" steps="1840"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.0.1" expl="asserted formula">
                                <proof prover="2"><undone/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="289418"/></proof>
                               <proof prover="2" obsolete="true"><result status="valid" time="0.37" steps="70081"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="333"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.0" expl="asserted formula">
                                <proof prover="2"><undone/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="353"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.1" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="228402"/></proof>
                                <proof prover="2"><undone/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.46" steps="875"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1" expl="postcondition">
                             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2100527"/></proof>
                             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159627"/></proof>
                             <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="320"/></proof>
                             <transf name="assert" arg1="( (algorithmA_spec (x3 ++ x2) (add (convertRStoAF x) d)) ==&#39; algorithmA_spec (left ++ l) (add (convertRStoAF p) d))">
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0" expl="asserted formula">
                              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1926272"/></proof>
                              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138124"/></proof>
                              <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="328"/></proof>
                              <transf name="assert" arg1="(permut (x3 ++ x2) (left ++ l))">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.0" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1305767"/></proof>
                               <proof prover="2"><undone/></proof>
                               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                               </goal>
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.1" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2149427"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154587"/></proof>
                               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.1.0" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1960158"/></proof>
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150580"/></proof>
                                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                <transf name="introduce_exists" >
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.1.0.0" expl="asserted formula">
                                 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2075835"/></proof>
                                 <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="55368"/></proof>
                                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                 <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.1.0.0" expl="asserted formula">
                                  <transf name="instantiate" arg1="Hinst" arg2="p">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.1.0.0.0" expl="asserted formula">
                                   <transf name="instantiate" arg1="Hinst" arg2="left">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.1.0.0.0.0" expl="asserted formula">
                                    <transf name="instantiate" arg1="Hinst" arg2="right">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.1.0.0.0.0.0" expl="asserted formula">
                                     <transf name="instantiate" arg1="Hinst" arg2="l">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.1.0.0.0.0.0.0" expl="asserted formula">
                                      <transf name="instantiate" arg1="Hinst" arg2="x3">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.1.0.0.0.0.0.0.0" expl="asserted formula">
                                       <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.1.0.0.0.0.0.0.0.0" expl="asserted formula">
                                        <transf name="instantiate" arg1="Hinst" arg2="x2">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.0.1.1.1.0.0.0.0.0.0.0.0.0" expl="asserted formula">
                                         <proof prover="2"><undone/></proof>
                                         <proof prover="4" obsolete="true"><result status="valid" time="0.47" steps="485"/></proof>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.0.1.1" expl="asserted formula">
                                <proof prover="2"><undone/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.13" steps="357"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1" expl="postcondition">
                              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1559411"/></proof>
                              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154135"/></proof>
                              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                              <transf name="assert" arg1="(permut (x3 ++ x2) (left ++ l))">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1360580"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146740"/></proof>
                               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.0" expl="asserted formula">
                                <proof prover="2"><undone/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="69"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1360485"/></proof>
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141183"/></proof>
                                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                <transf name="introduce_exists" >
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0" expl="asserted formula">
                                 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1394720"/></proof>
                                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133679"/></proof>
                                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                 <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0" expl="asserted formula">
                                  <transf name="instantiate" arg1="Hinst" arg2="p">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0" expl="asserted formula">
                                   <transf name="instantiate" arg1="Hinst" arg2="left">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0" expl="asserted formula">
                                    <transf name="instantiate" arg1="Hinst" arg2="right">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0" expl="asserted formula">
                                     <transf name="instantiate" arg1="Hinst" arg2="l">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0.0" expl="asserted formula">
                                      <transf name="instantiate" arg1="Hinst" arg2="x3">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0" expl="asserted formula">
                                       <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.0" expl="asserted formula">
                                        <transf name="instantiate" arg1="Hinst" arg2="x2">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.0.0" expl="asserted formula">
                                         <proof prover="2"><undone/></proof>
                                         <proof prover="4" obsolete="true"><result status="valid" time="0.22" steps="723"/></proof>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1" expl="postcondition">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1545148"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138989"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.69" steps="1817"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.0" expl="asserted formula">
                                <proof prover="2"><undone/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="71"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1" expl="postcondition">
                                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1597416"/></proof>
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144271"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.76" steps="1905"/></proof>
                                <transf name="introduce_exists" >
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0" expl="postcondition">
                                 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1599358"/></proof>
                                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142389"/></proof>
                                 <proof prover="4" obsolete="true"><result status="valid" time="0.72" steps="1903"/></proof>
                                 <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0" expl="postcondition">
                                  <transf name="instantiate" arg1="Hinst" arg2="p">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0" expl="postcondition">
                                   <transf name="instantiate" arg1="Hinst" arg2="left">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0" expl="postcondition">
                                    <transf name="instantiate" arg1="Hinst" arg2="right">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0" expl="postcondition">
                                     <transf name="instantiate" arg1="Hinst" arg2="l">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0.0" expl="postcondition">
                                      <transf name="instantiate" arg1="Hinst" arg2="x3">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0.0.0" expl="postcondition">
                                       <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0.0.0.0" expl="postcondition">
                                        <transf name="instantiate" arg1="Hinst" arg2="x2">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
                                         <proof prover="2"><undone/></proof>
                                         <proof prover="4" obsolete="true"><result status="valid" time="0.79" steps="1990"/></proof>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="monotone_A&#39;vc.3.0.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1" expl="postcondition">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1778493"/></proof>
                  <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="64114"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="assert" arg1="(is_equal_list (left ++ l) (x3 ++ x2))">
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0" expl="asserted formula">
                   <proof prover="2"><undone/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="269"/></proof>
                   </goal>
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1" expl="postcondition">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1778662"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152752"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0" expl="postcondition">
                    <transf name="instantiate" arg1="Hinst" arg2="d">
                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0" expl="postcondition">
                     <transf name="destruct" arg1="Hinst">
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="destruct premise">
                      <proof prover="2"><undone/></proof>
                      </goal>
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="postcondition">
                      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1810057"/></proof>
                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155986"/></proof>
                      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                      <transf name="destruct" arg1="Hinst">
                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0" expl="postcondition">
                       <transf name="destruct" arg1="Hinst">
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.0" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2124408"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159261"/></proof>
                        <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="70"/></proof>
                        <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0" expl="asserted formula">
                         <proof prover="2"><undone/></proof>
                         </goal>
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1" expl="postcondition">
                         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1950911"/></proof>
                         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159817"/></proof>
                         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                         <transf name="introduce_exists" >
                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0" expl="postcondition">
                          <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0" expl="postcondition">
                           <transf name="instantiate" arg1="Hinst" arg2="p">
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0" expl="postcondition">
                            <transf name="instantiate" arg1="Hinst" arg2="left">
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0" expl="postcondition">
                             <transf name="instantiate" arg1="Hinst" arg2="right">
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0" expl="postcondition">
                              <transf name="instantiate" arg1="Hinst" arg2="l">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0" expl="postcondition">
                               <transf name="instantiate" arg1="Hinst" arg2="x3">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0" expl="postcondition">
                                <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0" expl="postcondition">
                                 <transf name="instantiate" arg1="Hinst" arg2="x2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
                                  <transf name="destruct" arg1="Hinst">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0" expl="destruct premise">
                                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1470229"/></proof>
                                   <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="58864"/></proof>
                                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                   <transf name="destruct" arg1="Hinst">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.0" expl="destruct premise">
                                    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1473403"/></proof>
                                    <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="56583"/></proof>
                                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                    <transf name="destruct" arg1="Hinst">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="destruct premise">
                                     <proof prover="2"><undone/></proof>
                                     <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="350"/></proof>
                                     </goal>
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1" expl="postcondition">
                                     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1438656"/></proof>
                                     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156200"/></proof>
                                     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                     <transf name="assert" arg1="((algorithmA_spec (x3 ++ x2) (add (convertRStoAF x) d)) ==&#39; (algorithmA_spec (left ++ l) (add (convertRStoAF p) d)))">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="asserted formula">
                                      <proof prover="2"><undone/></proof>
                                      <proof prover="4" obsolete="true"><result status="valid" time="0.56" steps="1458"/></proof>
                                      </goal>
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1" expl="postcondition">
                                      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1443462"/></proof>
                                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156324"/></proof>
                                      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                      <transf name="instantiate" arg1="permutacoes" arg2="clauselist">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0" expl="postcondition">
                                       <transf name="instantiate" arg1="Hinst" arg2="clauselist2">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0.0" expl="postcondition">
                                        <transf name="instantiate" arg1="Hinst" arg2="d">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0.0.0" expl="postcondition">
                                         <transf name="destruct" arg1="Hinst">
                                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0.0.0.0" expl="destruct premise">
                                          <proof prover="2"><undone/></proof>
                                          </goal>
                                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.1.0.0.0.1" expl="postcondition">
                                          <proof prover="2"><undone/></proof>
                                          <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="823"/></proof>
                                          </goal>
                                         </transf>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1" expl="postcondition">
                                    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1120028"/></proof>
                                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185058"/></proof>
                                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                    <transf name="destruct" arg1="Hinst">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="destruct premise">
                                     <proof prover="2"><undone/></proof>
                                     <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="350"/></proof>
                                     </goal>
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1" expl="postcondition">
                                     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2748837"/></proof>
                                     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1002049"/></proof>
                                     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                                     <transf name="instantiate" arg1="permutacoes" arg2="clauselist, clauselist2, d">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="postcondition">
                                      <transf name="destruct" arg1="Hinst">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0" expl="destruct premise">
                                       <proof prover="2"><undone/></proof>
                                       </goal>
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1" expl="postcondition">
                                       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1103835"/></proof>
                                       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167181"/></proof>
                                       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                       <transf name="destruct" arg1="Hinst">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.0" expl="destruct premise">
                                        <proof prover="2"><undone/></proof>
                                        </goal>
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1" expl="postcondition">
                                        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1097003"/></proof>
                                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159906"/></proof>
                                        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                        <transf name="replace" arg1="(algorithmA_spec clauselist d)" arg2="(algorithmA_spec clauselist2 d)">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0" expl="postcondition">
                                         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1104422"/></proof>
                                         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163024"/></proof>
                                         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                         <transf name="replace" arg1="(algorithmA_spec clauselist2 d)" arg2="(algorithmA_spec (left ++ l) (add (convertRStoAF p) d))">
                                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0.0" expl="postcondition">
                                          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1200737"/></proof>
                                          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161892"/></proof>
                                          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                          <transf name="replace" arg1="(algorithmA_spec clauselist c)" arg2="(algorithmA_spec (left1 ++ l1) (add (convertRStoAF p1) c))">
                                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0.0.0" expl="postcondition">
                                           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1200748"/></proof>
                                           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163378"/></proof>
                                           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                           <transf name="instantiate" arg1="permutacoes" arg2="(left1 ++ l1)">
                                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0.0.0.0" expl="postcondition">
                                            <transf name="instantiate" arg1="Hinst" arg2="(left ++ l)">
                                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0.0.0.0.0" expl="postcondition">
                                             <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p) d)">
                                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0.0.0.0.0.0" expl="postcondition">
                                              <transf name="destruct" arg1="Hinst">
                                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0.0.0.0.0.0.0" expl="destruct premise">
                                               <proof prover="2"><undone/></proof>
                                               </goal>
                                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0.0.0.0.0.0.1" expl="postcondition">
                                               <proof prover="2"><undone/></proof>
                                               <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="849"/></proof>
                                               </goal>
                                              </transf>
                                              </goal>
                                             </transf>
                                             </goal>
                                            </transf>
                                            </goal>
                                           </transf>
                                           </goal>
                                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0.0.1" expl="equality hypothesis">
                                           <proof prover="2"><undone/></proof>
                                           </goal>
                                          </transf>
                                          </goal>
                                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.0.1" expl="equality hypothesis">
                                          <proof prover="2"><undone/></proof>
                                          </goal>
                                         </transf>
                                         </goal>
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.1.1.1" expl="equality hypothesis">
                                         <proof prover="2"><undone/></proof>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1" expl="postcondition">
                                   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4320963"/></proof>
                                   <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="57807"/></proof>
                                   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                                   <transf name="destruct" arg1="Hinst">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.0" expl="destruct premise">
                                    <proof prover="2"><undone/></proof>
                                    </goal>
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1" expl="postcondition">
                                    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1765304"/></proof>
                                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162230"/></proof>
                                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                    <transf name="destruct" arg1="Hinst">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="destruct premise">
                                     <proof prover="2"><undone/></proof>
                                     <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="354"/></proof>
                                     </goal>
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1" expl="postcondition">
                                     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1215796"/></proof>
                                     <proof prover="2"><undone/></proof>
                                     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1" expl="postcondition">
                        <proof prover="2"><undone/></proof>
                        <proof prover="4" obsolete="true"><result status="valid" time="0.22" steps="291"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_A&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1965762"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152869"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="eliminate_let" >
    <goal name="monotone_A&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1990410"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150638"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="exists_permut_that_match_findFirst" arg2="clauselist">
     <goal name="monotone_A&#39;vc.3.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2015966"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146408"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="Hinst" arg2="c">
      <goal name="monotone_A&#39;vc.3.1.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="d">
       <goal name="monotone_A&#39;vc.3.1.0.0.0.0" expl="postcondition">
       <transf name="destruct" arg1="Hinst">
        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="52041"/></proof>
        </goal>
        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2018838"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148372"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.0" expl="destruct premise">
         <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="203500"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="61601"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="50"/></proof>
         <transf name="split_vc" >
          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.0.0" expl="destruct premise">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1728731"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.40" steps="75013"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="50"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2026044"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158699"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2025860"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147278"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2025225"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149401"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0" expl="postcondition">
            <transf name="destruct" arg1="Hinst">
             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1905357"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172965"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0" expl="postcondition">
              <transf name="instantiate" arg1="Hinst" arg2="c">
               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0" expl="postcondition">
               <transf name="destruct" arg1="Hinst">
                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="destruct premise">
                <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="54384"/></proof>
                </goal>
                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1" expl="postcondition">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1809471"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162355"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0" expl="postcondition">
                 <transf name="destruct" arg1="Hinst">
                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0" expl="postcondition">
                  <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="269645"/></proof>
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155898"/></proof>
                  <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="62"/></proof>
                  <transf name="assert" arg1="(is_equal_list (left ++ l) (x3 ++ x2))">
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0" expl="asserted formula">
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131692"/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="62"/></proof>
                   </goal>
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1" expl="postcondition">
                   <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="271813"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165649"/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="64"/></proof>
                   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0" expl="postcondition">
                    <transf name="instantiate" arg1="Hinst" arg2="d">
                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0" expl="postcondition">
                     <transf name="destruct" arg1="Hinst">
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="destruct premise">
                      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="60130"/></proof>
                      </goal>
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="postcondition">
                      <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="282169"/></proof>
                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157515"/></proof>
                      <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="64"/></proof>
                      <transf name="destruct" arg1="Hinst">
                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0" expl="postcondition">
                       <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.09" steps="287503"/></proof>
                       <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="1.68" steps="268462"/></proof>
                       <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="67"/></proof>
                       <transf name="destruct" arg1="Hinst">
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.0" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="284593"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158178"/></proof>
                        <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="70"/></proof>
                        </goal>
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="303680"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160221"/></proof>
                        <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="70"/></proof>
                        <transf name="instantiate" arg1="permutacoes" arg2="clauselist">
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0" expl="postcondition">
                         <transf name="instantiate" arg1="Hinst" arg2="clauselist2">
                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0" expl="postcondition">
                          <transf name="instantiate" arg1="Hinst" arg2="d">
                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0" expl="postcondition">
                           <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="308663"/></proof>
                           <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="66395"/></proof>
                           <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="71"/></proof>
                           <transf name="destruct" arg1="Hinst">
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.0" expl="destruct premise">
                            <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="54156"/></proof>
                            </goal>
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1" expl="postcondition">
                            <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="308655"/></proof>
                            <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="66384"/></proof>
                            <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="71"/></proof>
                            <transf name="assert" arg1="(x = p)">
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0" expl="asserted formula">
                             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1094009"/></proof>
                             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134481"/></proof>
                             <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="71"/></proof>
                             <transf name="assert" arg1="( (algorithmA_spec (x3 ++ x2) (add (convertRStoAF x) d)) ==&#39; algorithmA_spec (left ++ l) (add (convertRStoAF p) d))">
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.0" expl="asserted formula">
                              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1649814"/></proof>
                              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133576"/></proof>
                              <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="71"/></proof>
                              <transf name="assert" arg1="(permut (x3 ++ x2) (left ++ l))">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.0.0" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1680454"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138094"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="71"/></proof>
                               <transf name="assert" arg1="(exists set. right = Cons (set,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.0.0.0" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="230564"/></proof>
                                <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="60090"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="69"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.0.0.1" expl="asserted formula">
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150943"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="75"/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.0.1" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1595121"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133435"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.0.1.0" expl="asserted formula">
                                <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="60105"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="71"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.0.1.1" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1565888"/></proof>
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143027"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="77"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.1" expl="asserted formula">
                              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1100305"/></proof>
                              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135379"/></proof>
                              <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                              <transf name="assert" arg1="(permut (x3 ++ x2) (left ++ l))">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.1.0" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1656008"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139499"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                               <transf name="assert" arg1="(exists set. right = Cons (set,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.1.0.0" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="232268"/></proof>
                                <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="60109"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="71"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.1.0.1" expl="asserted formula">
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150608"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="77"/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.1.1" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1097982"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133503"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="75"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.1.1.0" expl="asserted formula">
                                <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="60124"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.0.1.1.1" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1099434"/></proof>
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148206"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="79"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1" expl="postcondition">
                             <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="305142"/></proof>
                             <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="65329"/></proof>
                             <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                             <transf name="assert" arg1="( (algorithmA_spec (x3 ++ x2) (add (convertRStoAF x) d)) ==&#39; algorithmA_spec (left ++ l) (add (convertRStoAF p) d))">
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.0" expl="asserted formula">
                              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1714588"/></proof>
                              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136137"/></proof>
                              <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                              <transf name="assert" arg1="(permut (x3 ++ x2) (left ++ l))">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.0.0" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1666992"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150708"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                               </goal>
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.0.1" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="288964"/></proof>
                               <proof prover="2" obsolete="true"><result status="valid" time="0.39" steps="69652"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="75"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.0.1.0" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="230622"/></proof>
                                <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="60358"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.0.1.1" expl="asserted formula">
                                <proof prover="2" obsolete="true"><result status="valid" time="0.40" steps="74166"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="79"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1" expl="postcondition">
                              <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="305449"/></proof>
                              <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="65427"/></proof>
                              <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="75"/></proof>
                              <transf name="assert" arg1="(permut (x3 ++ x2) (left ++ l))">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0" expl="asserted formula">
                               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1678853"/></proof>
                               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137140"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="75"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.0" expl="asserted formula">
                                <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="60369"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1" expl="asserted formula">
                                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1607501"/></proof>
                                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134800"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="79"/></proof>
                                <transf name="introduce_exists" >
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0" expl="asserted formula">
                                 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1568526"/></proof>
                                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136399"/></proof>
                                 <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="77"/></proof>
                                 <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0" expl="asserted formula">
                                  <transf name="instantiate" arg1="Hinst" arg2="p">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0" expl="asserted formula">
                                   <transf name="instantiate" arg1="Hinst" arg2="left">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0" expl="asserted formula">
                                    <transf name="instantiate" arg1="Hinst" arg2="right">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0" expl="asserted formula">
                                     <transf name="instantiate" arg1="Hinst" arg2="l">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0.0" expl="asserted formula">
                                      <transf name="instantiate" arg1="Hinst" arg2="x3">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0" expl="asserted formula">
                                       <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.0" expl="asserted formula">
                                        <transf name="instantiate" arg1="Hinst" arg2="x2">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.0.0" expl="asserted formula">
                                         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137837"/></proof>
                                         <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="78"/></proof>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1" expl="postcondition">
                               <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="307261"/></proof>
                               <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="65493"/></proof>
                               <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="77"/></proof>
                               <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.0" expl="asserted formula">
                                <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="60384"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="75"/></proof>
                                </goal>
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1" expl="postcondition">
                                <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="308617"/></proof>
                                <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="65966"/></proof>
                                <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="81"/></proof>
                                <transf name="introduce_exists" >
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0" expl="postcondition">
                                 <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="308657"/></proof>
                                 <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="65905"/></proof>
                                 <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="79"/></proof>
                                 <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0" expl="postcondition">
                                  <transf name="instantiate" arg1="Hinst" arg2="p">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0" expl="postcondition">
                                   <transf name="instantiate" arg1="Hinst" arg2="left">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0" expl="postcondition">
                                    <transf name="instantiate" arg1="Hinst" arg2="right">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0" expl="postcondition">
                                     <transf name="instantiate" arg1="Hinst" arg2="l">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0.0" expl="postcondition">
                                      <transf name="instantiate" arg1="Hinst" arg2="x3">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0.0.0" expl="postcondition">
                                       <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0.0.0.0" expl="postcondition">
                                        <transf name="instantiate" arg1="Hinst" arg2="x2">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1.1.1.1.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
                                         <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="78229"/></proof>
                                         <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="82"/></proof>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1" expl="postcondition">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1740157"/></proof>
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157463"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="assert" arg1="(is_equal_list (left ++ l) (x3 ++ x2))">
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.0" expl="asserted formula">
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140432"/></proof>
                   <proof prover="4" obsolete="true"><result status="valid" time="0.10" steps="296"/></proof>
                   </goal>
                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1" expl="postcondition">
                   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1738808"/></proof>
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159472"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2">
                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0" expl="postcondition">
                    <transf name="instantiate" arg1="Hinst" arg2="d">
                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0" expl="postcondition">
                     <transf name="destruct" arg1="Hinst">
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="destruct premise">
                      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="60246"/></proof>
                      </goal>
                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="postcondition">
                      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1763314"/></proof>
                      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156068"/></proof>
                      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                      <transf name="destruct" arg1="Hinst">
                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0" expl="postcondition">
                       <transf name="destruct" arg1="Hinst">
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1722265"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167615"/></proof>
                        <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="311"/></proof>
                        <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.0" expl="asserted formula">
                         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150122"/></proof>
                         <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="321"/></proof>
                         </goal>
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1" expl="postcondition">
                         <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="218072"/></proof>
                         <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="64616"/></proof>
                         <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="74"/></proof>
                         <transf name="introduce_exists" >
                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0" expl="postcondition">
                          <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0" expl="postcondition">
                           <transf name="instantiate" arg1="Hinst" arg2="p">
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0" expl="postcondition">
                            <transf name="instantiate" arg1="Hinst" arg2="left">
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0" expl="postcondition">
                             <transf name="instantiate" arg1="Hinst" arg2="right">
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0" expl="postcondition">
                              <transf name="instantiate" arg1="Hinst" arg2="l">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0" expl="postcondition">
                               <transf name="instantiate" arg1="Hinst" arg2="x3">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0" expl="postcondition">
                                <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0" expl="postcondition">
                                 <transf name="instantiate" arg1="Hinst" arg2="x2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
                                  <transf name="destruct" arg1="Hinst">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="destruct premise">
                                   <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="233430"/></proof>
                                   <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="61917"/></proof>
                                   <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="72"/></proof>
                                   </goal>
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="postcondition">
                                   <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.07" steps="224405"/></proof>
                                   <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="57787"/></proof>
                                   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                                   <transf name="destruct" arg1="Hinst">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1.0" expl="destruct premise">
                                    <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="61312"/></proof>
                                    </goal>
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1.1" expl="postcondition">
                                    <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="224357"/></proof>
                                    <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="57793"/></proof>
                                    <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="73"/></proof>
                                    <transf name="destruct" arg1="Hinst">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="destruct premise">
                                     <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="61374"/></proof>
                                     <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="72"/></proof>
                                     </goal>
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1.1.1" expl="postcondition">
                                     <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="224592"/></proof>
                                     <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="60397"/></proof>
                                     <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="74"/></proof>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1" expl="postcondition">
                        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1209823"/></proof>
                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176501"/></proof>
                        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                        <transf name="assert" arg1="(exists set2. right = Cons (set2,p) l)">
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.0" expl="asserted formula">
                         <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="59792"/></proof>
                         <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="68"/></proof>
                         </goal>
                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1" expl="postcondition">
                         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1221666"/></proof>
                         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162822"/></proof>
                         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                         <transf name="introduce_exists" >
                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0" expl="postcondition">
                          <transf name="instantiate" arg1="permut_list_permut_sublist" arg2="set2">
                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0" expl="postcondition">
                           <transf name="instantiate" arg1="Hinst" arg2="p">
                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0" expl="postcondition">
                            <transf name="instantiate" arg1="Hinst" arg2="left">
                             <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0" expl="postcondition">
                             <transf name="instantiate" arg1="Hinst" arg2="right">
                              <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0" expl="postcondition">
                              <transf name="instantiate" arg1="Hinst" arg2="l">
                               <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0" expl="postcondition">
                               <transf name="instantiate" arg1="Hinst" arg2="x3">
                                <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0" expl="postcondition">
                                <transf name="instantiate" arg1="Hinst" arg2="(Cons (x1, x) x2)">
                                 <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0" expl="postcondition">
                                 <transf name="instantiate" arg1="Hinst" arg2="x2">
                                  <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
                                  <transf name="destruct" arg1="Hinst">
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0" expl="destruct premise">
                                   <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="239001"/></proof>
                                   <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="62794"/></proof>
                                   <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="72"/></proof>
                                   </goal>
                                   <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1" expl="postcondition">
                                   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3268596"/></proof>
                                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147552"/></proof>
                                   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                                   <transf name="destruct" arg1="Hinst">
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.0" expl="destruct premise">
                                    <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="61405"/></proof>
                                    </goal>
                                    <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1" expl="postcondition">
                                    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1229488"/></proof>
                                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143567"/></proof>
                                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                    <transf name="destruct" arg1="Hinst">
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="destruct premise">
                                     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106025"/></proof>
                                     <proof prover="4" obsolete="true"><result status="valid" time="0.17" steps="386"/></proof>
                                     </goal>
                                     <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1" expl="postcondition">
                                     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1230445"/></proof>
                                     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="175105"/></proof>
                                     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                     <transf name="instantiate" arg1="permutacoes" arg2="(left ++ l)">
                                      <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="postcondition">
                                      <transf name="instantiate" arg1="Hinst" arg2="(x3 ++ x2)">
                                       <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0" expl="postcondition">
                                       <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p) d)">
                                        <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0" expl="postcondition">
                                        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1334068"/></proof>
                                        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="175969"/></proof>
                                        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                        <transf name="destruct" arg1="Hinst">
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0.0" expl="destruct premise">
                                         <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="56737"/></proof>
                                         </goal>
                                         <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0.1" expl="postcondition">
                                         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1336243"/></proof>
                                         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="170772"/></proof>
                                         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                         <transf name="destruct" arg1="Hinst">
                                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0.1.0" expl="destruct premise">
                                          <proof prover="2" obsolete="true"><result status="valid" time="0.34" steps="76447"/></proof>
                                          </goal>
                                          <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0.1.1" expl="postcondition">
                                          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1338483"/></proof>
                                          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174789"/></proof>
                                          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                          <transf name="replace" arg1="( algorithmA_spec clauselist c)" arg2="(algorithmA_spec (left1 ++ l1) (add (convertRStoAF p1) c))">
                                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0.1.1.0" expl="postcondition">
                                           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1510588"/></proof>
                                           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156516"/></proof>
                                           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                                           <transf name="instantiate" arg1="permutacoes" arg2="clauselist,clauselist2,d">
                                            <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0.1.1.0.0" expl="postcondition">
                                            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130387"/></proof>
                                            <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="946"/></proof>
                                            </goal>
                                           </transf>
                                           </goal>
                                           <goal name="monotone_A&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1.1.0.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0.1.1.1" expl="equality hypothesis">
                                           <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="56950"/></proof>
                                           </goal>
                                          </transf>
                                          </goal>
                                         </transf>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7297570"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="715499"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="58658"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="56647"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6285900"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="786667"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="case" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1979662"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123868"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1575264"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120543"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1915190"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="683215"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="54547"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.98" steps="1638"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5665152"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="781552"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.0" expl="true case (postcondition)">
       <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="54554"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1" expl="true case (postcondition)">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1648914"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120014"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="Hinst" arg2="(pick c)">
        <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1.0" expl="true case (postcondition)">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123371"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.39" steps="1658"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115664"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.84" steps="1550"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723350"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="57644"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="bot_not_in_set_then_sat_set&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.31" steps="58763"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="56725"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3128856"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138541"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_set">
   <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0" expl="VC for bot_not_in_set_then_sat_set">
   <transf name="exists" arg1="(val_all_top)">
    <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0.0">
    <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="54387"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p">
 <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="376103"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139549"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="63327"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3347062"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="56502"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case3">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="56676"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case4">
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="57309"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1412420"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="56507"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2834289"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137916"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="437"/></proof>
 </goal>
 <goal name="findFirst&#39;vc" expl="VC for findFirst">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4198129"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147526"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="findFirst&#39;vc.0" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120144"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="44"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="findFirst&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2423265"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219510"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.1.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="58579"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.1" expl="postcondition">
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="58652"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="findFirst&#39;vc.1.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116835"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="48"/></proof>
   <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2724201"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161412"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1469582"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="70581"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.0.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="56435"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="168"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="56535"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="53"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.0.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120283"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="53"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1344105"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79040"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.1.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="60380"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="171"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="61114"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="197"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.1.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="175638"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="203"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1447388"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73094"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.2.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="59381"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="53"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.34" steps="61710"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="657"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.2.2" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="164229"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.10" steps="666"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.3" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1339592"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79631"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.2.3.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="56489"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="521"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.1" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15911231"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="56564"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="194"/></proof>
    </goal>
    <goal name="findFirst&#39;vc.2.3.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2619652"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136228"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="200"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.2.4" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="59764"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="findFirst&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940533"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165423"/></proof>
  <transf name="split_vc" >
   <goal name="findFirst&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2694447"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160019"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9086325"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890140"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.42" steps="82664"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="53"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.1" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="146286"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.22" steps="42691"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.52" steps="86255"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="49"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.0.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2621410"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140350"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.0.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.0.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.67" steps="90591"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="findFirst&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2715442"/></proof>
   <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159903"/></proof>
   <transf name="split_vc" >
    <goal name="findFirst&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2654036"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="52953"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.0.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="82128"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="53"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2608141"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156385"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.1.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.50" steps="80352"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="findFirst&#39;vc.3.1.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616339"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157998"/></proof>
    <transf name="unfold" arg1="findFirst" arg2="in" arg3="H">
     <goal name="findFirst&#39;vc.3.1.2.0" expl="postcondition">
     <transf name="compute_hyp_specified" >
      <goal name="findFirst&#39;vc.3.1.2.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.67" steps="91433"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="489"/></proof>
      <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417057"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="88141"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120496"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="60123"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3912485"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135828"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2059962"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151056"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.2.0.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.2.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3174189"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153843"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.2.0.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="55679"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.2.0.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2282404"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151641"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.2.0.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2249898"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164986"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.2.0.0.0.1.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1994485"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="58168"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="863"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.2.0.0.0.1.0.1" expl="postcondition">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5969685"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="55797"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.17" steps="1062"/></proof>
        <transf name="destruct" arg1="Ensures2">
         <goal name="algorithmA&#39;vc.4.0.0.0.1.0.1.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2145912"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160666"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Ensures2">
          <goal name="algorithmA&#39;vc.4.0.0.0.1.0.1.0.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2163297"/></proof>
          <proof prover="2"><result status="failure" time="0.00"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1950911"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150315"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
    <goal name="algorithmA&#39;vc.2.1.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.91" steps="127638"/></proof>
    <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
     <goal name="algorithmA&#39;vc.2.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2796654"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164677"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="algorithmA&#39;vc.2.1.0.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="56149"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.2.1.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2665984"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164662"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.2.1.0.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2710770"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166576"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
        <goal name="algorithmA&#39;vc.2.1.0.0.1.0.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154112"/></proof>
        <transf name="destruct_term" arg1="(findFirst (listset_to_listfset clauselist) (to_fset c))">
         <goal name="algorithmA&#39;vc.2.1.0.0.1.0.0.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1644272"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149671"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2313043"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181095"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723676"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="55907"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="x">
    <goal name="algorithmA&#39;vc.3.1.0" expl="VC for algorithmA">
    <proof prover="2"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2616063"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="55048"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="x">
    <goal name="algorithmA&#39;vc.3.1.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.56" steps="99255"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2641367"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162274"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1807059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151207"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.4.0.0" expl="postcondition">
    <transf name="induction_arg_ty_lex" arg1="clauselist">
     <goal name="algorithmA&#39;vc.4.0.0.0" expl="VC for algorithmA">
     <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="70533"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2234169"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144702"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="algorithmA&#39;vc.4.1.0" expl="VC for algorithmA">
    <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="79526"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="65058"/></proof>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1129867"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133132"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_top_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="56609"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="60437"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080277"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129798"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="137037"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0">
       <transf name="subst" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0">
        <transf name="unfold" arg1="findFirst" arg2="in" arg3="Hinst1">
         <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0">
         <transf name="compile_match" >
          <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1321114"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="68852"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="eliminate_let" >
           <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0">
           <transf name="eliminate_if" >
            <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="740107"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153256"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.0">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="912895"/></proof>
             <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="65124"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="672568"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115514"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="replace" arg1="(left ++ x2)" arg2="(Nil: list (fset atomicformula, rightside))" arg3="in" arg4="Hinst">
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="796049"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114625"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Nil: list (fset atomicformula, rightside))">
                <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0">
                <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF x) (singleton ATop))">
                 <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0">
                 <transf name="destruct" arg1="Hinst">
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="destruct premise">
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123482"/></proof>
                  <transf name="destruct" arg1="Hinst">
                   <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0">
                   <transf name="destruct" arg1="Hinst">
                    <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0">
                    <proof prover="2"><undone/></proof>
                    <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="259"/></proof>
                    </goal>
                    <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1">
                    <proof prover="2"><undone/></proof>
                    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="259"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.1">
                  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="180814"/></proof>
                  <proof prover="2"><undone/></proof>
                  <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="226"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2547162"/></proof>
               <proof prover="2"><undone/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="57"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="710558"/></proof>
             <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="61384"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1535778"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126180"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="replace" arg1="(left ++ x2)" arg2="(Nil: list (fset atomicformula, rightside))" arg3="in" arg4="Hinst">
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.0">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="904301"/></proof>
               <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="977695"/></proof>
               <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.03" steps="5562"/></proof>
               </goal>
               <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="600885"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76501"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Nil: list (fset atomicformula, rightside))">
                <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0" expl="equality hypothesis">
                <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF x) (singleton ATop))">
                 <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0.0" expl="equality hypothesis">
                 <transf name="destruct" arg1="Hinst">
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="destruct premise">
                  <proof prover="2" obsolete="true"><result status="valid" time="0.31" steps="68946"/></proof>
                  <proof prover="4" obsolete="true"><result status="valid" time="0.94" steps="5493"/></proof>
                  </goal>
                  <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="equality hypothesis">
                  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="603080"/></proof>
                  <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="63587"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="destruct" arg1="Hinst">
                   <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0.0.1.0" expl="equality hypothesis">
                   <transf name="destruct" arg1="Hinst">
                    <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0" expl="equality hypothesis">
                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166198"/></proof>
                    <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="63"/></proof>
                    </goal>
                    <goal name="case1_top_imples_p.1.0.0.1.0.0.0.0.0.0.0.1.0.1.0.0.1.0.1" expl="equality hypothesis">
                    <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="78712"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1501570"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="175690"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_conjuction_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="60671"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2843633"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126702"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5746229"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="800664"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.0">
       <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="60900"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="1284"/></proof>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.0.1">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="182191"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="1412"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="64192"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="64389"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="64600"/></proof>
 </goal>
 <goal name="case2_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1965027"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="193193"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_top_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="56365"/></proof>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2413194"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130762"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2763665"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="61318"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.74" steps="3401"/></proof>
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.0.1">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173972"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.94" steps="4745"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1307008"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="281647"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="56584"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2820755"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167202"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1720933"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="61574"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.62" steps="3147"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1797228"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="179238"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.79" steps="4386"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="69014"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="65784"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p">
 <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="65590"/></proof>
 </goal>
 <goal name="case3_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3697089"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147978"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_induction_general.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3197985"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168576"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="case3_induction_general.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2440883"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109581"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="case3_induction_general.0.0.0">
    <proof prover="0" obsolete="true"><result status="valid" time="0.02"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="59242"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="40"/></proof>
    </goal>
    <goal name="case3_induction_general.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2987140"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149689"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" arg1="x">
     <goal name="case3_induction_general.0.0.1.0">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="646054"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154397"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H3">
      <goal name="case3_induction_general.0.0.1.0.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="63299"/></proof>
      </goal>
      <goal name="case3_induction_general.0.0.1.0.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="644837"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159659"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="H3">
       <goal name="case3_induction_general.0.0.1.0.1.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="59838"/></proof>
       </goal>
       <goal name="case3_induction_general.0.0.1.0.1.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="762259"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154675"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="H3">
        <goal name="case3_induction_general.0.0.1.0.1.1.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140428"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="53"/></proof>
        </goal>
        <goal name="case3_induction_general.0.0.1.0.1.1.1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1542283"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136885"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="case3_induction_general.0.0.1.1">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126973"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="53"/></proof>
     </goal>
    </transf>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(Cons x1 x)">
     <goal name="case3_induction_general.0.0.1.0">
     <transf name="instantiate" arg1="Hinst" arg2="c">
      <goal name="case3_induction_general.0.0.1.0.0">
      <transf name="destruct" arg1="Hinst">
       <goal name="case3_induction_general.0.0.1.0.0.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="57772"/></proof>
       </goal>
       <goal name="case3_induction_general.0.0.1.0.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2870660"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115132"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case3_induction_general.0.0.1.0.0.1.0">
        <transf name="destruct" arg1="Hinst">
         <goal name="case3_induction_general.0.0.1.0.0.1.0.0">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1370065"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="60988"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(is_satisfiable_af (convertRStoAF p))">
          <goal name="case3_induction_general.0.0.1.0.0.1.0.1.0" expl="asserted formula">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3779430"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151789"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(is_satisfiable_clauselist right)">
           <goal name="case3_induction_general.0.0.1.0.0.1.0.1.0.0" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1002879"/></proof>
           <proof prover="2"><result status="failure" time="0.00"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.17" steps="883"/></proof>
           </goal>
           <goal name="case3_induction_general.0.0.1.0.0.1.0.1.0.1" expl="asserted formula">
           <proof prover="2"><result status="failure" time="0.00"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.26" steps="876"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="case3_induction_general.0.0.1.0.0.1.0.1.1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1510450"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147114"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(is_satisfiable_clauselist (left++l))">
           <goal name="case3_induction_general.0.0.1.0.0.1.0.1.1.0" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1478025"/></proof>
           <proof prover="2"><result status="failure" time="0.00"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="1.00" steps="2838"/></proof>
           </goal>
           <goal name="case3_induction_general.0.0.1.0.0.1.0.1.1.1">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1029494"/></proof>
           <proof prover="2"><result status="failure" time="0.00"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="case3_induction_general.0.0.1.0.0.1.0.1">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="978120"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="336517"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424592"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.34" steps="70815"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
</file>
</why3session>
