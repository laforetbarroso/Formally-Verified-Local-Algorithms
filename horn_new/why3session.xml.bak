<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_new.mlw"/>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="28251"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27394"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28065"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="28030"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="26200"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="23704"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="AFtoRS_RStoAF.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="27620"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="26550"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="123773"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="126755"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="527443"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145478"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="32465"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="41497"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="37738"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="35969"/></proof>
 </goal>
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="34047"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6573933"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2249636"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2469543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="379235"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="(val_all_top)">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="33344"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="34554"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="33090"/></proof>
 </goal>
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="30317"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="36887"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="67432"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="34164"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="44388"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="37466"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="40711"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.93" steps="92968"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="36780"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="39990"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2"><result status="valid" time="0.18" steps="40176"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2150181"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186545"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2617438"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1618350"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.60" steps="2996"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219067"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="785"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="218789"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="793"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2574935"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276417"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2487193"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276394"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.20" steps="40933"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="38580"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338455"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="408052"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472376"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149065"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2468665"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149903"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="154352"/></proof>
       <proof prover="4"><result status="valid" time="0.13" steps="801"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.19" steps="41234"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="793"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="43717"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="165001"/></proof>
 <proof prover="4"><result status="valid" time="0.30" steps="1947"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="39158"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="45089"/></proof>
 </goal>
 <goal name="length_equal_listset_to_list_fset" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="3665476"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="227829"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="length_equal_listset_to_list_fset.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="cl">
   <goal name="length_equal_listset_to_list_fset.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="164960"/></proof>
   <proof prover="4"><result status="valid" time="0.10" steps="492"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="listset_to_listfset_distr" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="4417470"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="262922"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="listset_to_listfset_distr.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="left">
   <goal name="listset_to_listfset_distr.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="listset_to_listfset_distr.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" proved="true" >
     <goal name="listset_to_listfset_distr.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="44515"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="listset_to_listfset_distr.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="194879"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="154"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2592517"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111099"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2247870"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122237"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="40691"/></proof>
    </goal>
    <goal name="removeFromList_numocc.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="120640"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="260"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2416889"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145646"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc_2.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc_2.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="40929"/></proof>
    </goal>
    <goal name="removeFromList_numocc_2.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="114833"/></proof>
    <proof prover="4"><result status="valid" time="0.10" steps="722"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2105040"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118867"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_length.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2159512"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114480"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" proved="true" arg1="(clauselist = Nil)">
   <goal name="removeFromList_length.0.0" expl="true case" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="41527"/></proof>
   </goal>
   <goal name="removeFromList_length.0.1" expl="false case" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160427"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117680"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="removeFromList_length.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="removeFromList_length.0.1.0.0" expl="false case" proved="true">
     <proof prover="2"><result status="valid" time="0.11" steps="37409"/></proof>
     </goal>
     <goal name="removeFromList_length.0.1.0.1" expl="false case" proved="true">
     <proof prover="2"><result status="valid" time="0.28" steps="56345"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="667"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_if_only_if_some" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="41699"/></proof>
 </goal>
 <goal name="findOneSubset_mem_subset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3422201"/></proof>
 <proof prover="2"><result status="valid" time="0.16" steps="41942"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="findOneSubset_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3431020"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177114"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_nil.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3372789"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180326"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_nil.0.0" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="findOneSubset_nil.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="36508"/></proof>
    </goal>
    <goal name="findOneSubset_nil.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.21" steps="42939"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_notsubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3742862"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201761"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_notsubset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3781072"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="252236"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_notsubset.0.0" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="findOneSubset_notsubset.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2717005"/></proof>
    <proof prover="2"><result status="valid" time="0.09" steps="36643"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="findOneSubset_notsubset.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="40219"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="G">
 <proof prover="0"><result status="timeout" time="1.00" steps="3214409"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="238705"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="if_mem_then_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2876564"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137385"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_mem_then_subset_set_smb.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1641680"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134631"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="118493"/></proof>
   <proof prover="4"><result status="valid" time="0.65" steps="1558"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955177"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166640"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_set_smb_clauselist.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_set_smb_clauselist.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="654319"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168986"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="subset_set_smb_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="48648"/></proof>
    </goal>
    <goal name="subset_set_smb_clauselist.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.78" steps="94493"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="610"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2656112"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180051"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_subset_set_smb.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_subset_set_smb.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="46785"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761004"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" proved="true" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="43477"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1707639"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172719"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.20" steps="44650"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816447"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177277"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0" proved="true">
        <transf name="replace" proved="true" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2102707"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131239"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2434241"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118676"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.27" steps="43283"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038971"/></proof>
           <proof prover="2"><result status="valid" time="0.25" steps="41399"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.25" steps="53802"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.14" steps="43297"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3752049"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="253838"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3451143"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180880"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="44697"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955214"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125730"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="clauselist, c">
    <goal name="algorithmA_spec&#39;vc.0.1.0" expl="variant decrease" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="algorithmA_spec&#39;vc.0.1.0.0" expl="variant decrease" proved="true">
     <proof prover="2"><result status="valid" time="0.13" steps="45480"/></proof>
     </goal>
     <goal name="algorithmA_spec&#39;vc.0.1.0.1" expl="variant decrease" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2869379"/></proof>
     <proof prover="2"><result status="valid" time="0.19" steps="46544"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="43602"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="43634"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3216326"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="184752"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.10" steps="41121"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2"><result status="valid" time="0.13" steps="41182"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2"><result status="valid" time="0.36" steps="65491"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9028784"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="706422"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8818520"/></proof>
   <proof prover="2"><result status="valid" time="0.24" steps="51311"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="2206875"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="168731"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" proved="true" arg1="H">
    <goal name="algorithmA_spec&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.05" steps="161122"/></proof>
    <proof prover="2"><result status="valid" time="0.29" steps="53428"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="167"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="2384831"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="152159"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="algorithmA_spec&#39;vc.4.1.1.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="algorithmA_spec&#39;vc.4.1.1.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2403840"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="132737"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="H">
        <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2399198"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="135864"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" proved="true" arg1="subset_set_smb_clauselist" arg2="clauselist">
         <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1">
          <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="instantiate" proved="true" arg1="Hinst" arg2="x">
           <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="0"><result status="timeout" time="1.00" steps="2360321"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="140300"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
            <proof prover="0"><result status="valid" time="0.06" steps="184125"/></proof>
            <proof prover="2"><result status="valid" time="0.17" steps="42536"/></proof>
            <proof prover="4"><result status="valid" time="0.04" steps="180"/></proof>
            </goal>
            <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
            <proof prover="0"><result status="timeout" time="1.00" steps="2446908"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="135499"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" proved="true" arg1="(subset (singleton (convertRStoAF x) ) (set_smb_clauselist clauselist))">
             <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
             <proof prover="0"><result status="valid" time="0.05" steps="166667"/></proof>
             <proof prover="2"><result status="valid" time="0.27" steps="52189"/></proof>
             <proof prover="4"><result status="valid" time="0.17" steps="934"/></proof>
             <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
              <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
              <proof prover="0"><result status="valid" time="0.05" steps="167468"/></proof>
              <proof prover="2"><result status="valid" time="0.28" steps="52699"/></proof>
              <proof prover="4"><result status="valid" time="0.17" steps="956"/></proof>
              <transf name="instantiate" proved="true" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
               <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
               <proof prover="0"><result status="valid" time="0.05" steps="167804"/></proof>
               <proof prover="2"><result status="valid" time="0.30" steps="54368"/></proof>
               <proof prover="4"><result status="valid" time="0.22" steps="1190"/></proof>
               <transf name="destruct" proved="true" arg1="Hinst">
                <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
                <proof prover="2"><result status="valid" time="0.27" steps="51635"/></proof>
                </goal>
                <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.0.0.0.1" expl="asserted formula" proved="true">
                <proof prover="0"><result status="valid" time="0.05" steps="168419"/></proof>
                <proof prover="2"><result status="valid" time="0.29" steps="53063"/></proof>
                <proof prover="4"><result status="valid" time="0.19" steps="1059"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1" expl="postcondition" proved="true">
             <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="8995479"/></proof>
             <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="651356"/></proof>
             <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
             <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
              <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1.0" expl="postcondition" proved="true">
              <proof prover="0"><result status="timeout" time="1.00" steps="2380202"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="133198"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="instantiate" proved="true" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
               <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1.0.0" expl="postcondition" proved="true">
               <proof prover="0"><result status="timeout" time="1.00" steps="2376307"/></proof>
               <proof prover="2"><result status="timeout" time="1.00" steps="123723"/></proof>
               <proof prover="4"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" proved="true" arg1="Hinst">
                <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
                <proof prover="2"><result status="valid" time="0.27" steps="52145"/></proof>
                </goal>
                <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1.0.0.1" expl="postcondition" proved="true">
                <proof prover="0"><result status="timeout" time="1.00" steps="2309929"/></proof>
                <proof prover="2" timelimit="5"><result status="valid" time="0.97" steps="135667"/></proof>
                <proof prover="4"><result status="timeout" time="1.00"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3460135"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113302"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="46818"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.39" steps="58470"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="44571"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="44603"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12555206"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="921624"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutacoes&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="44853"/></proof>
   </goal>
   <goal name="permutacoes&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2498921"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154538"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" proved="true" arg1="H">
    <goal name="permutacoes&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2776338"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152915"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" proved="true" >
     <goal name="permutacoes&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2922605"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H">
      <goal name="permutacoes&#39;vc.4.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3018729"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154599"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
       <goal name="permutacoes&#39;vc.4.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2915737"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150442"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.1.0.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.09" steps="40227"/></proof>
        </goal>
        <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2942766"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154440"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.0" expl="destruct premise" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2729841"/></proof>
         <proof prover="2"><result status="valid" time="0.10" steps="40225"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2422884"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154831"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0" expl="postcondition" proved="true">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8567818"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="817922"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="assert" proved="true" arg1="(algorithmA_spec clauselist2 c ==&#39; c)">
           <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2596512"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150927"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0" expl="asserted formula" proved="true">
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.10" steps="40256"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1" expl="asserted formula" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2693012"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151747"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1.0" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.21" steps="40254"/></proof>
              <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1.1" expl="asserted formula" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2391809"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164347"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1.1.0" expl="asserted formula" proved="true">
               <proof prover="2"><result status="valid" time="0.20" steps="44241"/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="170"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1.1.1" expl="asserted formula" proved="true">
               <proof prover="2"><result status="valid" time="0.20" steps="45234"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.1" expl="postcondition" proved="true">
           <proof prover="2"><result status="valid" time="0.16" steps="41685"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1" expl="postcondition" proved="true">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12986983"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="904855"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0" expl="postcondition" proved="true">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="11975841"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="741488"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2822395"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158422"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.10" steps="40283"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1" expl="postcondition" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2877107"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163443"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.0" expl="destruct premise" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940253"/></proof>
              <proof prover="2"><result status="valid" time="0.10" steps="40281"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.1" expl="postcondition" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2930587"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185233"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.1.0" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.31" steps="44901"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.1.1" expl="postcondition" proved="true">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1960635"/></proof>
               <proof prover="2"><result status="valid" time="0.21" steps="56505"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1" expl="postcondition" proved="true">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8059390"/></proof>
           <proof prover="2"><result status="valid" time="0.36" steps="61479"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2101624"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171302"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.10" steps="40413"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2099666"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162200"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.0" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.10" steps="40411"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.1" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2095127"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164233"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.1.0" expl="postcondition">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2341227"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186874"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.1.1.0" expl="postcondition">
                <proof prover="2"><result status="failure" time="0.00"/></proof>
                </goal>
                <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.1.1.1" expl="postcondition">
                <proof prover="2"><result status="failure" time="0.00"/></proof>
                <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="1524"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.1.1" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.38" steps="65122"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permutacoes&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2997428"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155517"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="permutacoes&#39;vc.4.1.1.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="permutacoes&#39;vc.4.1.1.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="permutacoes&#39;vc.4.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9100191"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="395440"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="instantiate" proved="true" arg1="findOneSubset_exists" arg2="clauselist2,c">
        <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2366600"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116560"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="177447"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.23" steps="45123"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="171"/></proof>
         <transf name="assert" proved="true" arg1="(not is_nil clauselist)">
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="146945"/></proof>
          <proof prover="2"><result status="valid" time="0.15" steps="42192"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.0.1" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.22" steps="47002"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2266659"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="118287"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1,x">
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2249624"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111090"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.0" expl="destruct premise" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2262654"/></proof>
           <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="49190"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.0.0" expl="destruct premise" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2398409"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104631"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.10" steps="40882"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.0.0.1" expl="destruct premise" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421317"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104610"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.0.0.1.0" expl="destruct premise" proved="true">
              <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8944744"/></proof>
              <proof prover="2"><result status="valid" time="0.10" steps="40880"/></proof>
              <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.0.0.1.1" expl="destruct premise" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2913552"/></proof>
              <proof prover="2"><result status="valid" time="0.24" steps="50041"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1" expl="postcondition" proved="true">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9628902"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="756263"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2360209"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118258"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.11" steps="40904"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1" expl="postcondition" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2382988"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117969"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1.0" expl="destruct premise" proved="true">
              <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.02" steps="8436"/></proof>
              <proof prover="2"><result status="valid" time="0.11" steps="40902"/></proof>
              <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.02" steps="52"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1.1" expl="postcondition" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2276281"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119530"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1.1.0" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.22" steps="47389"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1.1.1" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.22" steps="48343"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2533818"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117732"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="47193"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="44925"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="44957"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="44987"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="61416"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2200494"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="202150"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="monotone_algA&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2412353"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146529"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="monotone_algA&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="monotone_algA&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="timeout" time="2.00" steps="399736"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="142"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_algA&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2496849"/></proof>
   <proof prover="2"><result status="valid" time="0.42" steps="73181"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="140"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.5.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255435"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117531"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="eliminate_let" proved="true" >
    <goal name="monotone_algA&#39;vc.5.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="2260118"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="132555"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="monotone_algA&#39;vc.5.2.0.0" expl="postcondition" proved="true">
     <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="8298461"/></proof>
     <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="771642"/></proof>
     <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
     <transf name="assert" proved="true" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
      <goal name="monotone_algA&#39;vc.5.2.0.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.64" steps="90351"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.5.2.0.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="2261074"/></proof>
      <proof prover="2" timelimit="5"><result status="valid" time="1.86" steps="274424"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="monotone_algA&#39;vc.5.2.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="2464276"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="131400"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" proved="true" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
      <goal name="monotone_algA&#39;vc.5.2.0.1.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.43" steps="65495"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.5.2.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2247250"/></proof>
      <proof prover="2"><result status="valid" time="0.40" steps="69942"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="462678"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="54514"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="45831"/></proof>
  </goal>
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3344032"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45503"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal s &gt; 1)">
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2810011"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0" expl="true case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="s">
     <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131944"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="42380"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="39"/></proof>
      </goal>
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5846692"/></proof>
      <proof prover="2"><result status="valid" time="0.42" steps="52886"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="541"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197408"/></proof>
   <proof prover="2"><result status="valid" time="0.37" steps="52754"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2824061"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168386"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction_1.0" proved="true">
  <transf name="exists" proved="true" arg1="(val_all_top)">
   <goal name="subset_of_evalsetconjunction_1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.45" steps="75284"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="6097522"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126353"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2851663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123986"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" proved="true" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2486786"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.81" steps="99214"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="case" proved="true" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="42291"/></proof>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2393648"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113319"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.1.0" expl="false case (true case)" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="48574"/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.1.1" expl="false case" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2358643"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119501"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.1.1.0" expl="false case" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2625644"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130499"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
       <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0" expl="false case" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.09" steps="38739"/></proof>
        </goal>
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.1" expl="false case" proved="true">
        <proof prover="0"><result status="valid" time="0.11" steps="211558"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="110616"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="contr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="43471"/></proof>
 </goal>
 <goal name="distr_exists" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5040407"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="43851"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294650"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="48826"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="satisf_clauselist_all_mem_satisf" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277560"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192334"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="satisf_clauselist_all_mem_satisf.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373312"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201939"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="satisf_clauselist_all_mem_satisf.0.0" proved="true">
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="satisf_clauselist_all_mem_satisf.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.34" steps="51156"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1331314"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98348"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_is_satisfiable_clauselist.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_is_satisfiable_clauselist.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_is_satisfiable_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="41263"/></proof>
    </goal>
    <goal name="sublist_is_satisfiable_clauselist.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1751538"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152242"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.18" steps="46746"/></proof>
     </goal>
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1090093"/></proof>
     <proof prover="2"><result status="valid" time="0.38" steps="53012"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb_generic" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10250884"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="765763"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="smb_generic.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="0.50" steps="77355"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2"><result status="valid" time="0.38" steps="56276"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="not_subset_spec_test" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2719674"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114161"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_test.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1428122"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130325"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="not_subset_spec_test.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_test.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.23" steps="46952"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
    </goal>
    <goal name="not_subset_spec_test.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="2.00" steps="226404"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2801256"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124941"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="equality_is_equal_list&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3682332"/></proof>
  <proof prover="2"><result status="valid" time="0.22" steps="47142"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="44819"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527581"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119434"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="equality_is_equal_list&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="41376"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="44634"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="41533"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="47111"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2406598"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115325"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_equal_list_reflexive&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2514671"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42817"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_equal_list">
   <goal name="is_equal_list_reflexive&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2515158"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165611"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="is_equal_list_reflexive&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2336425"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112270"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="is_equal_list_reflexive&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="44787"/></proof>
   </goal>
   <goal name="is_equal_list_reflexive&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="44901"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="45030"/></proof>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423557"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="47791"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1580198"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="64851"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="45332"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="45129"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="268"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="99271"/></proof>
   <proof prover="4"><result status="valid" time="0.05" steps="271"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="45129"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2997534"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129390"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="45069"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="49653"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="195"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6780028"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="115492"/></proof>
   <proof prover="4"><result status="valid" time="0.04" steps="197"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="49653"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_ref" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="45658"/></proof>
 </goal>
 <goal name="permut_trans" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="45776"/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="47638"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="46994"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="52627"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080190"/></proof>
 <proof prover="2"><result status="valid" time="0.55" steps="70926"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2081573"/></proof>
 <proof prover="2"><result status="valid" time="0.28" steps="54168"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_cl1_cl2" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="46959"/></proof>
 </goal>
 <goal name="concat_with_element" proved="true">
 <proof prover="2"><result status="valid" time="0.32" steps="57646"/></proof>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1454073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105159"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_concat_not_mem_l1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1459543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98112"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.42" steps="58487"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910038"/></proof>
 <proof prover="2"><result status="valid" time="0.27" steps="54080"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_permut" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1553188"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121707"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_permut.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1725343"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118513"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="permut">
   <goal name="removeFromList_permut.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_permut.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1655081"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119617"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(x = elem)">
     <goal name="removeFromList_permut.0.0.0.0" expl="true case" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="51678"/></proof>
     </goal>
     <goal name="removeFromList_permut.0.0.0.1" expl="false case" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1657192"/></proof>
     <proof prover="2"><result status="valid" time="0.22" steps="50867"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_permut_concat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2091139"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122792"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_permut_concat.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1626528"/></proof>
  <proof prover="2"><result status="valid" time="0.52" steps="83041"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_elem_not_in_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424464"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122344"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_elem_not_in_list.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2419393"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136747"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="52012"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="857767"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="312454"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="119044"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="131163"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255490"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111610"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2395037"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107447"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="43358"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="46552"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.12" steps="42533"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2399925"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108239"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="43800"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="52"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="117832"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="54"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="124849"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="52"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4704247"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125330"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="45566"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="52786"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.25" steps="53399"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_for_all" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1390617"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="71842"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_for_all.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2154148"/></proof>
  <proof prover="2"><result status="valid" time="0.38" steps="56736"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_general" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="47557"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_general.0" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="48133"/></proof>
  </goal>
  <goal name="not_subset_general.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2443561"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118174"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_general.1.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2202787"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140169"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_general.1.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="50028"/></proof>
    </goal>
    <goal name="not_subset_general.1.0.1" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1499880"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="648797"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.22" steps="52650"/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778925"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106286"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="not_subset_spec">
      <goal name="not_subset_general.1.0.1.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="not_subset_general.1.0.1.1.0.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2210738"/></proof>
       <proof prover="2"><result status="valid" time="1.83" steps="185755"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="not_subset_general.1.0.1.1.0.1" proved="true">
       <proof prover="2"><result status="valid" time="0.10" steps="43082"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_numOfSubset_0" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2503073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121511"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_numOfSubset_0.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2644547"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125048"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_numOfSubset_0.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.27" steps="54539"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="475"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2673230"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116569"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_0_not_subset&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1353144"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="123934"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="161"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="599401"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="132711"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="49"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1453114"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73242"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.2.0" expl="VC for numOfSubset_0_not_subset" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="50149"/></proof>
    </goal>
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="105621"/></proof>
    <proof prover="4"><result status="valid" time="0.05" steps="225"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="notSubset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="53016"/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_1" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="52323"/></proof>
 </goal>
 <goal name="addSubset_to_numOfSubset" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="55097"/></proof>
 </goal>
 <goal name="removeNumOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2038765"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150335"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeNumOfSubset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1522274"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167842"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeNumOfSubset.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="122258"/></proof>
   <proof prover="4"><result status="valid" time="0.38" steps="2628"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_clauselist_c_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1132002"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116127"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_clauselist_c_1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1498814"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130104"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="(exists set p. mem1 (set,p) clauselist /\ subset set c)">
   <goal name="numOfSubset_clauselist_c_1.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="50464"/></proof>
   </goal>
   <goal name="numOfSubset_clauselist_c_1.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1268318"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="(forall set1:fset atomicformula, p1:rightside. mem1 (set1,p1) (removeFromList (set, p) clauselist) -&gt; (not subset set1 c))">
    <goal name="numOfSubset_clauselist_c_1.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="50944"/></proof>
    </goal>
    <goal name="numOfSubset_clauselist_c_1.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1220980"/></proof>
    <proof prover="2"><result status="valid" time="0.24" steps="52091"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1_num_occ" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1973987"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="226357"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1_num_occ.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1026651"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129831"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1_num_occ.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="135377"/></proof>
   <proof prover="4"><result status="valid" time="0.22" steps="1433"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1561499"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118745"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2122453"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="610484"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="147960"/></proof>
   <proof prover="4"><result status="valid" time="0.26" steps="1565"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2009871"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138025"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="52261"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2370706"/></proof>
  <proof prover="2"><result status="valid" time="0.40" steps="55403"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.46" steps="60059"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2662931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134022"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="not_subset_spec" arg2="in" arg3="Requires">
   <goal name="not_subset_permut&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="destruct_term" proved="true" arg1="clauselist">
    <goal name="not_subset_permut&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1271690"/></proof>
    <proof prover="2"><result status="valid" time="1.13" steps="135506"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="not_subset_permut&#39;vc.3.0.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1269894"/></proof>
    <proof prover="2"><result status="valid" time="0.28" steps="51974"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equality_add" proved="true">
 <proof prover="2"><result status="valid" time="0.56" steps="71507"/></proof>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="480279"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="196776"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_basecase&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1495979"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168156"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_basecase&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.20" steps="52948"/></proof>
     </goal>
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1473231"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166910"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4473183"/></proof>
      <proof prover="2"><result status="valid" time="0.21" steps="52959"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1422513"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149082"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1589306"/></proof>
       <proof prover="2"><result status="valid" time="0.29" steps="61781"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="1.49" steps="213311"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses_inductive_case2&#39;vc" expl="VC for removeTwoClauses_inductive_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1936611"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168015"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_inductive_case2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4455282"/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="535463"/></proof>
  <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.22" steps="54374"/></proof>
     </goal>
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1797972"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130637"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2015634"/></proof>
      <proof prover="2"><result status="valid" time="0.19" steps="54385"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="989577"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144085"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.45" steps="946108"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="61974"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.17" steps="1001"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="503064"/></proof>
        <proof prover="2"><result status="valid" time="0.37" steps="66069"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.22" steps="53105"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5247964"/></proof>
       <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="732718"/></proof>
       <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0" expl="postcondition" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="1423868"/></proof>
        <proof prover="2" timelimit="5"><result status="valid" time="1.80" steps="226080"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5568983"/></proof>
        <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="739027"/></proof>
        <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1.0" expl="postcondition" proved="true">
         <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5661703"/></proof>
         <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="700226"/></proof>
         <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
         <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1.0.0" expl="VC for removeTwoClauses_inductive_case2" proved="true">
          <proof prover="2" timelimit="5"><result status="valid" time="2.68" steps="332371"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1.1" expl="postcondition" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="1645110"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="122758"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1.1.0" expl="VC for removeTwoClauses_inductive_case2" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="1796386"/></proof>
          <proof prover="2" timelimit="5"><result status="valid" time="1.53" steps="198978"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6415372"/></proof>
 <proof prover="2"><result status="valid" time="0.26" steps="60904"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138055"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119580"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1837167"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138583"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1831857"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135932"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
    <goal name="removeFromList_algorithmA&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.13" steps="52178"/></proof>
      </goal>
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1221720"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152797"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0" expl="destruct premise" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1151625"/></proof>
       <proof prover="2"><result status="valid" time="0.13" steps="52176"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2072136"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135362"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.0" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160085"/></proof>
        <proof prover="2"><result status="valid" time="0.26" steps="59372"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.26" steps="61819"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7297570"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="715499"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="58769"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="56654"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6285900"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="786667"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1979662"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123868"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1575264"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120543"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1915190"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="683215"/></proof>
      <proof prover="2"><result status="valid" time="0.16" steps="54609"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.98" steps="1638"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5665152"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="781552"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" proved="true" arg1="H">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.0" expl="true case (postcondition)" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1648914"/></proof>
       <proof prover="2"><result status="valid" time="0.19" steps="54616"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1" expl="true case (postcondition)" proved="true">
       <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="3154761"/></proof>
       <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="707011"/></proof>
       <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
       <transf name="instantiate" proved="true" arg1="Hinst" arg2="(pick c)">
        <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1.0" expl="true case (postcondition)" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="120403"/></proof>
        <proof prover="4"><result status="valid" time="0.41" steps="1813"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8711205"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="597289"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="case" proved="true" arg1="(cardinal c = 1)">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0" expl="false case (true case. postcondition)" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10469230"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="567581"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0" expl="false case (true case. postcondition)" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9611796"/></proof>
     <proof prover="2"><result status="valid" time="0.19" steps="54376"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     </goal>
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1" expl="false case (true case. postcondition)" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="2051801"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="103434"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
      <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="9495172"/></proof>
      <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="628784"/></proof>
      <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
      <transf name="assert" proved="true" arg1="(exists x. c = singleton x)">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="117490"/></proof>
       <proof prover="4"><result status="valid" time="0.09" steps="535"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1" expl="false case (true case. postcondition)" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2125707"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="114978"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="introduce_exists" proved="true" >
        <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2128378"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="107189"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="subst" proved="true" arg1="c">
         <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2023604"/></proof>
         <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="575632"/></proof>
         <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
         <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
          <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
          <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton x)">
           <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
           <proof prover="0"><result status="timeout" time="1.00" steps="2360950"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="111232"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
            <proof prover="2"><result status="valid" time="0.22" steps="55514"/></proof>
            </goal>
            <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1" expl="false case (true case. postcondition)" proved="true">
            <proof prover="0"><result status="timeout" time="1.00" steps="2329451"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="111854"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" proved="true" arg1="Hinst" arg2="x">
             <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0" expl="false case (true case. postcondition)" proved="true">
             <proof prover="0"><result status="timeout" time="1.00" steps="2374201"/></proof>
             <proof prover="2"><result status="timeout" time="1.00" steps="115088"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0.0" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.23" steps="57607"/></proof>
              </goal>
              <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0.1" expl="false case (true case. postcondition)" proved="true">
              <proof prover="0"><result status="timeout" time="1.00" steps="2464033"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="113432"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="assert" proved="true" arg1="(eval_atomicformula x val_all_top = top1)">
               <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
               <proof prover="2"><result status="timeout" time="1.00" steps="107367"/></proof>
               <proof prover="4"><result status="valid" time="0.81" steps="2457"/></proof>
               </goal>
               <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0.1.1" expl="false case (true case. postcondition)" proved="true">
               <proof prover="2"><result status="valid" time="0.31" steps="60653"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.1" expl="false case (postcondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.25" steps="57080"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723350"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="57644"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="bot_not_in_set_then_sat_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="58874"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="56732"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3128856"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138541"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_set">
   <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0" expl="VC for bot_not_in_set_then_sat_set" proved="true">
   <transf name="exists" proved="true" arg1="(val_all_top)">
    <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.26" steps="54449"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p" proved="true">
 <proof prover="0"><result status="valid" time="0.20" steps="362299"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="146986"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2"><result status="valid" time="0.46" steps="61846"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3347062"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="56157"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case3" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="56331"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case4" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="57098"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1412420"/></proof>
 <proof prover="2"><result status="valid" time="0.16" steps="56527"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2834289"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="130454"/></proof>
 <proof prover="4"><result status="valid" time="0.07" steps="468"/></proof>
 </goal>
 <goal name="removeFromList_not_empty_setc_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2241812"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116095"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_not_empty_setc_clauselist.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8510920"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="690191"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_not_empty_setc_clauselist.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.42" steps="77111"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="979345"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123441"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_top_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="56757"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.32" steps="60623"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2269024"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164847"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="137037"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" proved="true" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0" expl="destruct premise" proved="true">
       <transf name="subst" proved="true" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2300008"/></proof>
        <proof prover="2"><result status="valid" time="0.24" steps="60511"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2002335"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="58685"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.1.1.0" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3789846"/></proof>
       <proof prover="2"><result status="valid" time="0.21" steps="60754"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="case1_top_imples_p.1.0.0.1.1.1" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2277177"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="145192"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case1_top_imples_p.1.0.0.1.1.1.0" proved="true">
        <proof prover="0"><result status="valid" time="0.06" steps="212099"/></proof>
        <proof prover="2"><result status="valid" time="0.24" steps="60824"/></proof>
        <proof prover="4"><result status="valid" time="0.04" steps="55"/></proof>
        </goal>
        <goal name="case1_top_imples_p.1.0.0.1.1.1.1" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2249732"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="136814"/></proof>
        <proof prover="4"><result status="valid" time="0.82" steps="5048"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2306697"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="139214"/></proof>
         <proof prover="4"><result status="valid" time="0.18" steps="1114"/></proof>
         </goal>
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1" proved="true">
         <proof prover="2"><result status="valid" time="0.43" steps="72641"/></proof>
         <proof prover="4"><result status="valid" time="0.87" steps="4851"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1963047"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117628"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_conjuction_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.33" steps="60851"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2843633"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126702"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2267413"/></proof>
      <proof prover="2"><result status="valid" time="0.23" steps="60953"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2231126"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="58929"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1112624"/></proof>
       <proof prover="2"><result status="valid" time="0.21" steps="60998"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.1" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2152729"/></proof>
       <proof prover="2"><result status="timeout" time="2.00" steps="243359"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.0" proved="true">
        <proof prover="0"><result status="valid" time="0.06" steps="213142"/></proof>
        <proof prover="2"><result status="valid" time="0.23" steps="61063"/></proof>
        <proof prover="4"><result status="valid" time="0.04" steps="59"/></proof>
        </goal>
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="137526"/></proof>
        <proof prover="4"><result status="valid" time="0.36" steps="2379"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2"><result status="valid" time="0.36" steps="63462"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.33" steps="63659"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.35" steps="63870"/></proof>
 </goal>
 <goal name="case2_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1965027"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="193193"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case2_top_imples_p.0" proved="true">
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="56311"/></proof>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1565640"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="56309"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_top_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2039074"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="59362"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1103452"/></proof>
       <proof prover="2"><result status="valid" time="0.23" steps="61453"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.1.1" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="1576148"/></proof>
       <proof prover="2"><result status="timeout" time="2.00" steps="240206"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case2_top_imples_p.0.0.0.1.1.1.0" proved="true">
        <proof prover="2"><result status="valid" time="0.24" steps="61523"/></proof>
        </goal>
        <goal name="case2_top_imples_p.0.0.0.1.1.1.1" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="1554504"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="140104"/></proof>
        <proof prover="4"><result status="valid" time="0.43" steps="2603"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="case2_top_imples_p.0.0.0.1.1.1.1.0" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="145268"/></proof>
         <proof prover="4"><result status="valid" time="0.16" steps="903"/></proof>
         </goal>
         <goal name="case2_top_imples_p.0.0.0.1.1.1.1.1" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="1663075"/></proof>
         <proof prover="2"><result status="valid" time="0.48" steps="90648"/></proof>
         <proof prover="4" timelimit="5"><result status="valid" time="0.20" steps="1697"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1307008"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="281647"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case2_conjunction_imples_p.0" proved="true">
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="56530"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2013086"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="56528"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2035166"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="59612"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1263000"/></proof>
       <proof prover="2"><result status="valid" time="0.22" steps="61703"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.1" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="1561038"/></proof>
       <proof prover="2"><result status="timeout" time="2.00" steps="240998"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.0" proved="true">
        <proof prover="2"><result status="valid" time="0.23" steps="61768"/></proof>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="1761881"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="182616"/></proof>
        <proof prover="4"><result status="valid" time="0.33" steps="2273"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="165661"/></proof>
         <proof prover="4"><result status="valid" time="0.11" steps="753"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="1879847"/></proof>
         <proof prover="2"><result status="valid" time="0.86" steps="177662"/></proof>
         <proof prover="4" timelimit="5"><result status="valid" time="0.27" steps="1822"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2"><result status="valid" time="0.32" steps="68449"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2"><result status="valid" time="0.25" steps="65054"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="64883"/></proof>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1871066"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135753"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="65920"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1334937"/></proof>
  <proof prover="2"><result status="valid" time="0.41" steps="74151"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1916618"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138195"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="1649427"/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="658040"/></proof>
   <proof prover="4" timelimit="5"><result status="valid" time="2.44" steps="3147"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982709"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="253248"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982180"/></proof>
   <proof prover="2"><result status="valid" time="0.24" steps="60537"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="63181"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="63189"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.6" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="54796"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1821812"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131841"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1850482"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="121162"/></proof>
   <proof prover="4"><result status="valid" time="0.04" steps="57"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="case3_induction_general&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1012395"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76964"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" proved="true" >
     <goal name="case3_induction_general&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1074324"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="127110"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="57"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction_general&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1653921"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="125766"/></proof>
   <proof prover="4"><result status="valid" time="0.07" steps="217"/></proof>
   </goal>
   <goal name="case3_induction_general&#39;vc.7.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="1939225"/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="624330"/></proof>
   <proof prover="4" timelimit="5"><result status="valid" time="2.39" steps="5119"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="case3_induction_general&#39;vc.7.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="1933365"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="146718"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" proved="true" >
     <goal name="case3_induction_general&#39;vc.7.2.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="1939262"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="142369"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H">
      <goal name="case3_induction_general&#39;vc.7.2.0.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.36" steps="70941"/></proof>
      </goal>
      <goal name="case3_induction_general&#39;vc.7.2.0.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="2371718"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="147252"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="H">
       <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2401286"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="147071"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="H1">
        <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0" expl="postcondition" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2363147"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="147229"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="H1">
         <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0.0" expl="postcondition" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2357653"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="148546"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="H1">
          <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="2338476"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="143443"/></proof>
          <proof prover="4" timelimit="5"><result status="valid" time="3.63" steps="5731"/></proof>
          </goal>
          <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0.0.1" expl="postcondition" proved="true">
          <proof prover="2"><result status="valid" time="0.38" steps="73564"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0.1" expl="postcondition" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2287721"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="146097"/></proof>
         <proof prover="4" timelimit="5"><result status="valid" time="3.74" steps="5515"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424592"/></proof>
 <proof prover="2"><result status="valid" time="0.37" steps="70562"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="G1">
 <proof prover="0"><result status="timeout" time="1.00" steps="1965624"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="126245"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="unsat_then_bot" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2122438"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131308"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="unsat_then_bot.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2207281"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126996"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="eval_rightside" arg2="in" arg3="H">
   <goal name="unsat_then_bot.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2221833"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127031"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="H" arg2="val_all_top">
    <goal name="unsat_then_bot.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2387013"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="3.01" steps="391433"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" proved="true" arg1="(assign_rightside p val_all_top)">
     <goal name="unsat_then_bot.0.0.0.0" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2257572"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="144760"/></proof>
     <proof prover="4"><result status="valid" time="0.19" steps="1192"/></proof>
     </goal>
     <goal name="unsat_then_bot.0.0.0.1" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="2296047"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="135625"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="replace" proved="true" arg1="(assign_rightside p val_all_top)" arg2="(RProp x)" arg3="in" arg4="Hinst">
      <goal name="unsat_then_bot.0.0.0.1.0" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="138624"/></proof>
      <proof prover="4"><result status="valid" time="0.60" steps="1322"/></proof>
      </goal>
      <goal name="unsat_then_bot.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="55378"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_unsat_then_p_is_bot" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277140"/></proof>
 <proof prover="2"><result status="valid" time="0.29" steps="62648"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="is_unsat_then_subset_singletonATop">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4002451"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="630467"/></proof>
 <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="is_unsat_then_subset_singletonATop.0">
  <proof prover="0"><result status="timeout" time="1.00" steps="1437853"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="127635"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="cl">
   <goal name="is_unsat_then_subset_singletonATop.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="is_unsat_then_subset_singletonATop.0.0.0">
    <proof prover="0"><result status="timeout" time="1.00" steps="1503343"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="143529"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="is_unsat_then_subset_singletonATop.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="63845"/></proof>
     </goal>
     <goal name="is_unsat_then_subset_singletonATop.0.0.0.1">
     <proof prover="0"><result status="timeout" time="1.00" steps="1459429"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="136362"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="is_unsat_then_subset_singletonATop.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.24" steps="63926"/></proof>
      </goal>
      <goal name="is_unsat_then_subset_singletonATop.0.0.0.1.1">
      <proof prover="0"><result status="timeout" time="1.00" steps="1458603"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="136407"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="is_unsat_then_subset_singletonATop.0.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.30" steps="66500"/></proof>
       </goal>
       <goal name="is_unsat_then_subset_singletonATop.0.0.0.1.1.1">
       <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5657119"/></proof>
       <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="556054"/></proof>
       <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="is_unsat_then_subset_singletonATop.0.0.0.1.1.1.0">
        <proof prover="0"><result status="timeout" time="1.00" steps="1960474"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="140597"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="is_unsat_then_subset_singletonATop.0.0.0.1.1.1.1">
        <proof prover="0"><result status="timeout" time="1.00" steps="1954592"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="142163"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_unsat_then_subset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2076416"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125402"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="is_unsat_then_subset.0">
  <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="6389025"/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="551675"/></proof>
  <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="cl,c">
   <goal name="is_unsat_then_subset.0.0">
   <transf name="destruct" arg1="Hinst">
    <goal name="is_unsat_then_subset.0.0.0" expl="destruct premise" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="57478"/></proof>
    </goal>
    <goal name="is_unsat_then_subset.0.0.1">
    <proof prover="0"><result status="timeout" time="1.00" steps="1823132"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="136048"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="is_unsat_then_subset.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="57476"/></proof>
     </goal>
     <goal name="is_unsat_then_subset.0.0.1.1">
     <proof prover="0"><result status="timeout" time="1.00" steps="1822731"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="144180"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="is_unsat_then_subset.0.0.1.1.0" proved="true">
      <proof prover="2"><result status="valid" time="0.30" steps="65979"/></proof>
      </goal>
      <goal name="is_unsat_then_subset.0.0.1.1.1">
      <proof prover="0"><result status="timeout" time="1.00" steps="2065104"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="146389"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="is_unsat_then_subset.0.0.1.1.1.0">
       <proof prover="0"><result status="timeout" time="1.00" steps="2067713"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="146237"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="is_unsat_then_subset.0.0.1.1.1.1">
       <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4224431"/></proof>
       <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="563432"/></proof>
       <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="is_unsat_then_subset.0.0.1.1.1.1.0">
        <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4147421"/></proof>
        <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="529517"/></proof>
        <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
        </goal>
        <goal name="is_unsat_then_subset.0.0.1.1.1.1.1">
        <proof prover="0"><result status="timeout" time="1.00" steps="2167781"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="152140"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_clauselist_then_exists_one_clause_unsat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2102458"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113729"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="unsat_clauselist_then_exists_one_clause_unsat.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2107167"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113357"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.58" steps="89533"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_induction_general&#39;vc" expl="VC for unsat_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1622071"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136463"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_induction_general&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1718449"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137518"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="(exists x p. is_unsatisfiable_clause (x,p) /\ mem1 (x,p) clauselist)">
   <goal name="unsat_induction_general&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5138798"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="613223"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="unfold" proved="true" arg1="is_unsatisfiable_clauselist" arg2="in" arg3="Requires3">
    <goal name="unsat_induction_general&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1780045"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128470"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="Requires3">
     <goal name="unsat_induction_general&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2754530"/></proof>
     <proof prover="2"><result status="valid" time="0.13" steps="56027"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     </goal>
     <goal name="unsat_induction_general&#39;vc.0.0.0.1" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.15" steps="56075"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="unsat_induction_general&#39;vc.0.1" expl="unreachable point" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="55700"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.21" steps="1053"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1845259"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134954"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
   <goal name="unsat_induction_general&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1848870"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143455"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="unsat_induction_general&#39;vc.1.0.0" expl="destruct premise" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="57780"/></proof>
    </goal>
    <goal name="unsat_induction_general&#39;vc.1.0.1" expl="assertion" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1845990"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140327"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="unsat_induction_general&#39;vc.1.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="57778"/></proof>
     </goal>
     <goal name="unsat_induction_general&#39;vc.1.0.1.1" expl="assertion" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1845224"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145330"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="unsat_induction_general&#39;vc.1.0.1.1.0" expl="assertion" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2240260"/></proof>
      <proof prover="2"><result status="valid" time="0.14" steps="56582"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.1.0.1.1.1" expl="assertion" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="2236510"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="130944"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="unsat_induction_general&#39;vc.1.0.1.1.1.0" expl="assertion" proved="true">
       <proof prover="2"><result status="valid" time="0.36" steps="71246"/></proof>
       </goal>
       <goal name="unsat_induction_general&#39;vc.1.0.1.1.1.1" expl="assertion" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="133593"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2242907"/></proof>
  <proof prover="2"><result status="valid" time="0.38" steps="67423"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="191"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.3" expl="unreachable point" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="1848513"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="147684"/></proof>
  <proof prover="4"><result status="valid" time="0.86" steps="2644"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="66914"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.43" steps="74852"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.6" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1688663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122721"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="(x &lt;&gt; RProp bot1)">
   <goal name="unsat_induction_general&#39;vc.6.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="61726"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.6.1" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1788340"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127092"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(exists y1 y2. mem1 (y1,y2) clauselist /\ rs_eq_pos y2 (RProp bot1))">
    <goal name="unsat_induction_general&#39;vc.6.1.0" expl="asserted formula" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2832186"/></proof>
    <proof prover="2"><result status="valid" time="0.46" steps="93755"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="unsat_induction_general&#39;vc.6.1.1" expl="precondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4723503"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="676224"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="introduce_exists" >
     <goal name="unsat_induction_general&#39;vc.6.1.1.0" expl="precondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="1331862"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="134116"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" arg1="(y2 &lt;&gt; x)">
      <goal name="unsat_induction_general&#39;vc.6.1.1.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.22" steps="61872"/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.6.1.1.0.1" expl="precondition">
      <proof prover="0"><result status="timeout" time="1.00" steps="1339072"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="132254"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    <transf name="unfold" arg1="is_unsatisfiable_clauselist" arg2="in" arg3="Requires4">
     <goal name="unsat_induction_general&#39;vc.6.1.1.0" expl="precondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1212097"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120882"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Requires4">
      <goal name="unsat_induction_general&#39;vc.6.1.1.0.0" expl="precondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1342392"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134056"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
       <goal name="unsat_induction_general&#39;vc.6.1.1.0.0.0" expl="VC for unsat_induction_general" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1046429"/></proof>
       <proof prover="2"><result status="valid" time="0.17" steps="58962"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="unsat_induction_general&#39;vc.6.1.1.0.1" expl="precondition">
      <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4832129"/></proof>
      <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="699918"/></proof>
      <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
      <transf name="induction_arg_ty_lex" arg1="clauselist">
       <goal name="unsat_induction_general&#39;vc.6.1.1.0.1.0" expl="VC for unsat_induction_general">
       <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="1041213"/></proof>
       <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="550204"/></proof>
       <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="61424"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="64072"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.27" steps="64080"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1134473"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142757"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="unsat_induction_general&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1352949"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139466"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
    <goal name="unsat_induction_general&#39;vc.10.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1354483"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130359"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="unsat_induction_general&#39;vc.10.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="57813"/></proof>
     </goal>
     <goal name="unsat_induction_general&#39;vc.10.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1354353"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129848"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="unsat_induction_general&#39;vc.10.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.14" steps="57811"/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.10.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1354752"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130958"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="unsat_induction_general&#39;vc.10.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.17" steps="57841"/></proof>
       </goal>
       <goal name="unsat_induction_general&#39;vc.10.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2979977"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="136332"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="unsat_induction_general&#39;vc.10.0.0.1.1.1.0" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.34" steps="70988"/></proof>
        </goal>
        <goal name="unsat_induction_general&#39;vc.10.0.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="193522"/></proof>
        <proof prover="4"><result status="valid" time="0.20" steps="1344"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="unsat_induction_general&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246075"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152187"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="unsat_induction_general&#39;vc.10.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246067"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151659"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
     <goal name="unsat_induction_general&#39;vc.10.1.0.0" expl="VC for unsat_induction_general" proved="true">
     <proof prover="2"><result status="valid" time="0.30" steps="69929"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="G2">
 <proof prover="0"><result status="timeout" time="1.00" steps="2128244"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="125276"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="unsat_induction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2211890"/></proof>
 <proof prover="2"><result status="valid" time="0.33" steps="71410"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2153270"/></proof>
 <proof prover="2"><result status="valid" time="0.25" steps="64009"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="horn_sat_soundness" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2264845"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132017"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="horn_sat_soundness.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2258299"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139066"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" proved="true" arg1="clauselist">
   <goal name="horn_sat_soundness.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2350304"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137488"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="((horn_logic clauselist = True) -&gt; (not mem ABot (algorithmA_spec clauselist (singleton ATop))))">
    <goal name="horn_sat_soundness.0.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.25" steps="64012"/></proof>
    </goal>
    <goal name="horn_sat_soundness.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2218545"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137541"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="h">
     <goal name="horn_sat_soundness.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8472244"/></proof>
     <proof prover="2"><result status="valid" time="0.36" steps="64759"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     </goal>
     <goal name="horn_sat_soundness.0.0.1.1" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="61286"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="horn_sat_soundness.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2030547"/></proof>
   <proof prover="2"><result status="valid" time="0.41" steps="74984"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn_unsat_soundness" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2264903"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122276"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="horn_unsat_soundness.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175706"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131859"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="((horn_logic clauselist = False) -&gt; (mem ABot (algorithmA_spec clauselist (singleton ATop))))
">
   <goal name="horn_unsat_soundness.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.24" steps="64026"/></proof>
   </goal>
   <goal name="horn_unsat_soundness.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2245775"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131491"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="unsat_induction" arg2="clauselist">
    <goal name="horn_unsat_soundness.0.1.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="horn_unsat_soundness.0.1.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2296997"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119683"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="horn_unsat_soundness.0.1.0.0.0" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2267940"/></proof>
      <proof prover="2"><result status="valid" time="0.24" steps="64423"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="horn_unsat_soundness.0.1.0.0.1" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="55993"/></proof>
      </goal>
      <goal name="horn_unsat_soundness.0.1.0.0.2" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="55993"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="horn_unsat_soundness.0.1.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="61314"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="G3">
 <proof prover="0"><result status="timeout" time="1.00" steps="2047007"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="125217"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="GG" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="61324"/></proof>
 </goal>
 <goal name="not_unsat_clause_sat_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2111198"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122344"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_unsat_clause_sat_clause.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8187100"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="694388"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="unfold" arg1="is_unsatisfiable_clause" arg2="in" arg3="H">
   <goal name="not_unsat_clause_sat_clause.0.0">
   <transf name="destruct_term" arg1="clause">
    <goal name="not_unsat_clause_sat_clause.0.0.0">
    <transf name="subst" arg1="clause">
     <goal name="not_unsat_clause_sat_clause.0.0.0.0">
     <transf name="compile_match" >
      <goal name="not_unsat_clause_sat_clause.0.0.0.0.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2158014"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133350"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2285410"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133350"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="split_vc" >
        <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7647966"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="612148"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="assert" arg1="((exists f.
not eval_setconjunction x1 f = top1 \/ eval_rightside (assign_rightside x f) = top1))">
         <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="2"><result status="valid" time="0.23" steps="61799"/></proof>
         </goal>
         <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8136656"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="648485"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="unfold" arg1="is_satisfiable_clause">
          <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1.0">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7408360"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="536020"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="split_vc" >
           <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1.0.0">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7409503"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="536020"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="unfold" arg1="is_unsatisfiable_set">
            <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1.0.0.0">
            <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="7475846"/></proof>
            <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="577104"/></proof>
            <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
            <transf name="destruct" arg1="h">
             <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1.0.0.0.0">
             <proof prover="0"><result status="timeout" time="1.00" steps="2269977"/></proof>
             <proof prover="2"><result status="timeout" time="1.00" steps="134048"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="not_unsat_clause_sat_clause.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2205399"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125199"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clause" arg2="in" arg3="H">
   <goal name="not_unsat_clause_sat_clause.1.0" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="not_unsat_clause_sat_clause.1.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="H">
     <goal name="not_unsat_clause_sat_clause.1.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="65091"/></proof>
     </goal>
     <goal name="not_unsat_clause_sat_clause.1.0.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.31" steps="61590"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_unsat_sat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255755"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143820"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_unsat_sat.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7624259"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="409561"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_unsat_sat.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.32" steps="68398"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="not_unsat_sat.1" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="77929"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_sat_unsat" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="61420"/></proof>
 </goal>
 <goal name="horn_sat_completeness" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="63832"/></proof>
 </goal>
 <goal name="horn_unsat_completeness" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2185813"/></proof>
 <proof prover="2"><result status="valid" time="0.31" steps="63845"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="G4">
 <proof prover="0"><result status="timeout" time="1.00" steps="2012286"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="124994"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_prog&#39;vc" expl="VC for removeFromList_prog" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2344047"/></proof>
 <proof prover="2"><result status="valid" time="0.83" steps="118172"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="G5">
 <proof prover="0"><result status="timeout" time="1.00" steps="2136048"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="126675"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1909438"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146393"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401492"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146149"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.32" steps="69799"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5180706"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="416618"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="assert" proved="true" arg1="(length (listset_to_listfset o) &lt; length (listset_to_listfset clauselist))">
    <goal name="algorithmA&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="104431"/></proof>
    <proof prover="4"><result status="valid" time="0.13" steps="474"/></proof>
    </goal>
    <goal name="algorithmA&#39;vc.0.1.1" expl="variant decrease" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4655795"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="650039"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" proved="true" arg1="(length (listset_to_listfset o) = length o)">
     <goal name="algorithmA&#39;vc.0.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4823108"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="277327"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="induction_arg_ty_lex" proved="true" arg1="o">
      <goal name="algorithmA&#39;vc.0.1.1.0.0" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1147276"/></proof>
      <proof prover="2"><result status="valid" time="0.30" steps="70617"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.0.1.1.1" expl="variant decrease" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2215796"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137990"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" proved="true" arg1="(length (listset_to_listfset clauselist) = length clauselist)">
      <goal name="algorithmA&#39;vc.0.1.1.1.0" expl="asserted formula" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2448998"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158622"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
       <goal name="algorithmA&#39;vc.0.1.1.1.0.0" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4920176"/></proof>
       <proof prover="2"><result status="valid" time="0.31" steps="70813"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="algorithmA&#39;vc.0.1.1.1.1" expl="variant decrease" proved="true">
      <proof prover="2"><result status="valid" time="0.23" steps="62993"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="64597"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="64631"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="64825"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2266318"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.16" steps="268742"/></proof>
     <proof prover="2"><result status="valid" time="0.26" steps="62608"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="9500891"/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="396940"/></proof>
   <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
   <transf name="destruct" proved="true" arg1="H">
    <goal name="algorithmA&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.24" steps="63212"/></proof>
    </goal>
    <goal name="algorithmA&#39;vc.3.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="2299222"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="134620"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="algorithmA&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="2257814"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="117028"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="eliminate_let" proved="true" >
      <goal name="algorithmA&#39;vc.3.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="2237338"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="116851"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="H">
       <goal name="algorithmA&#39;vc.3.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2212624"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="115867"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="H">
        <goal name="algorithmA&#39;vc.3.1.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2331330"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="115731"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="H">
         <goal name="algorithmA&#39;vc.3.1.1.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="141855"/></proof>
         <proof prover="4"><result status="valid" time="0.05" steps="199"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.3.1.1.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="116168"/></proof>
         <proof prover="4"><result status="valid" time="0.84" steps="2640"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138125"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134305"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2230152"/></proof>
   <proof prover="2"><result status="valid" time="0.28" steps="65005"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1814558"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142954"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4760847"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="794443"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
      <goal name="algorithmA&#39;vc.4.0.0.0.0" expl="VC for algorithmA" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6027565"/></proof>
      <proof prover="2"><result status="valid" time="0.40" steps="73716"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="2088011"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="138834"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4577493"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="477096"/></proof>
    <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
     <goal name="algorithmA&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(to_fset c)">
      <goal name="algorithmA&#39;vc.4.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="2203640"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="142243"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="algorithmA&#39;vc.4.1.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="2"><result status="valid" time="0.15" steps="59163"/></proof>
       </goal>
       <goal name="algorithmA&#39;vc.4.1.0.0.0.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2060711"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="137829"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="algorithmA&#39;vc.4.1.0.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.14" steps="59161"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.4.1.0.0.0.1.1" expl="postcondition" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2163536"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="138320"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="algorithmA&#39;vc.4.1.0.0.0.1.1.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.21" steps="62607"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.4.1.0.0.0.1.1.1" expl="postcondition" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="139334"/></proof>
         <proof prover="4"><result status="valid" time="0.90" steps="2489"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5169960"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="569973"/></proof>
    <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <transf name="eliminate_let" proved="true" >
     <goal name="algorithmA&#39;vc.4.1.1.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="H">
      <goal name="algorithmA&#39;vc.4.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4982929"/></proof>
      <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="544061"/></proof>
      <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" proved="true" arg1="H">
       <goal name="algorithmA&#39;vc.4.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2060161"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="135880"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="H">
        <goal name="algorithmA&#39;vc.4.1.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.14" steps="56676"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2156963"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="137109"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
         <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0" expl="postcondition" proved="true">
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="(to_fset c)">
          <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0" expl="postcondition" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.15" steps="59446"/></proof>
           </goal>
           <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1" expl="postcondition" proved="true">
           <proof prover="0"><result status="timeout" time="1.00" steps="2119225"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="136646"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.0" expl="destruct premise" proved="true">
            <proof prover="2"><result status="valid" time="0.15" steps="59444"/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.1" expl="postcondition" proved="true">
            <proof prover="0"><result status="timeout" time="1.00" steps="2101820"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="135506"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.1.0" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.33" steps="68362"/></proof>
             </goal>
             <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.1.1" expl="postcondition" proved="true">
             <proof prover="0"><result status="timeout" time="1.00" steps="2007260"/></proof>
             <proof prover="2"><result status="timeout" time="1.00" steps="140212"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.1.1.0" expl="postcondition" proved="true">
              <proof prover="0"><result status="timeout" time="1.00" steps="2005050"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="138139"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
               <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.1.1.0.0" expl="VC for algorithmA" proved="true">
               <proof prover="2"><result status="valid" time="0.28" steps="75910"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.1.1.1" expl="postcondition" proved="true">
              <proof prover="0"><result status="timeout" time="1.00" steps="1935067"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="137104"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.1.1.1.0" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.22" steps="63086"/></proof>
               </goal>
               <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.1.1.1.1" expl="postcondition" proved="true">
               <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="6382996"/></proof>
               <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="432280"/></proof>
               <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
               <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
                <goal name="algorithmA&#39;vc.4.1.1.0.0.0.1.0.0.1.1.1.1.1.0" expl="VC for algorithmA" proved="true">
                <proof prover="2"><result status="valid" time="0.42" steps="88529"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="algorithmA&#39;vc.4.1.1.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="1809617"/></proof>
      <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="623316"/></proof>
      <proof prover="4" timelimit="5"><result status="valid" time="0.98" steps="2881"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="66026"/></proof>
 </goal>
 <goal name="G6">
 <proof prover="0"><result status="timeout" time="1.00" steps="2253214"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="126541"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
</file>
</why3session>
