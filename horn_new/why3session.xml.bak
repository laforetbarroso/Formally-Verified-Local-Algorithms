<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_new.mlw"/>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="28251"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27394"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28065"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="28030"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="26200"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="23704"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="AFtoRS_RStoAF.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="27620"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="26550"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="123773"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="126755"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="527443"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145478"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="32465"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="41497"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="37738"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="35969"/></proof>
 </goal>
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="34047"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6573933"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2249636"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2469543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="379235"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="(val_all_top)">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="33344"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="34554"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="33090"/></proof>
 </goal>
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="30317"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="36887"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="67432"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="34164"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="44388"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="37466"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="40711"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.93" steps="92968"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="36780"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="39990"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2"><result status="valid" time="0.18" steps="40176"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2150181"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186545"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2617438"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1618350"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.60" steps="2996"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219067"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="785"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="218789"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="793"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2574935"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276417"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2487193"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276394"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.20" steps="40933"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="38580"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338455"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="408052"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472376"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149065"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2468665"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149903"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="154352"/></proof>
       <proof prover="4"><result status="valid" time="0.13" steps="801"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.19" steps="41234"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="793"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="43717"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="165001"/></proof>
 <proof prover="4"><result status="valid" time="0.30" steps="1947"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="39158"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="45089"/></proof>
 </goal>
 <goal name="listset_to_listfset_distr" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401631"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310305"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="listset_to_listfset_distr.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="left">
   <goal name="listset_to_listfset_distr.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="listset_to_listfset_distr.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" proved="true" >
     <goal name="listset_to_listfset_distr.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="44465"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="listset_to_listfset_distr.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="205408"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="142"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2592517"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111099"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2247870"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122237"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="40642"/></proof>
    </goal>
    <goal name="removeFromList_numocc.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="122823"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="256"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2416889"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145646"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc_2.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc_2.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="40880"/></proof>
    </goal>
    <goal name="removeFromList_numocc_2.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="121146"/></proof>
    <proof prover="4"><result status="valid" time="0.10" steps="711"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2105040"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118867"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_length.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2159512"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114480"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" proved="true" arg1="(clauselist = Nil)">
   <goal name="removeFromList_length.0.0" expl="true case" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="41437"/></proof>
   </goal>
   <goal name="removeFromList_length.0.1" expl="false case" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160427"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117680"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="removeFromList_length.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="removeFromList_length.0.1.0.0" expl="false case" proved="true">
     <proof prover="2"><result status="valid" time="0.11" steps="37361"/></proof>
     </goal>
     <goal name="removeFromList_length.0.1.0.1" expl="false case" proved="true">
     <proof prover="2"><result status="valid" time="0.28" steps="56142"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="667"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_mem_subset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3422201"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191388"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_mem_subset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3823428"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="39928"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="findOneSubset_mem_subset.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3759059"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="42173"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="G">
 <proof prover="0"><result status="timeout" time="1.00" steps="3143636"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="229058"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="if_mem_then_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2876564"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137385"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_mem_then_subset_set_smb.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1641680"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134631"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="117342"/></proof>
   <proof prover="4"><result status="valid" time="0.65" steps="1550"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955177"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166640"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_set_smb_clauselist.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_set_smb_clauselist.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="654319"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168986"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="subset_set_smb_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="48262"/></proof>
    </goal>
    <goal name="subset_set_smb_clauselist.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.78" steps="92596"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="610"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2656112"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180051"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_subset_set_smb.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_subset_set_smb.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="46328"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761004"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" proved="true" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="43106"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1707639"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172719"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.20" steps="44238"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816447"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177277"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0" proved="true">
        <transf name="replace" proved="true" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2102707"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131239"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2434241"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118676"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.27" steps="42942"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038971"/></proof>
           <proof prover="2"><result status="valid" time="0.25" steps="41040"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.25" steps="53552"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.14" steps="42938"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3752049"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="253838"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3451143"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180880"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="44235"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955214"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125730"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="clauselist, c">
    <goal name="algorithmA_spec&#39;vc.0.1.0" expl="variant decrease" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="algorithmA_spec&#39;vc.0.1.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.13" steps="40692"/></proof>
     </goal>
     <goal name="algorithmA_spec&#39;vc.0.1.0.1" expl="variant decrease" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2869379"/></proof>
     <proof prover="2"><result status="valid" time="0.19" steps="45259"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="43231"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="43263"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3216326"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="184752"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2"><result status="valid" time="0.13" steps="40762"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.10" steps="40823"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2"><result status="valid" time="0.36" steps="64026"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9028784"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="706422"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1969895"/></proof>
   <proof prover="2"><result status="valid" time="0.23" steps="50798"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2141317"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="49894"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" proved="true" arg1="H">
    <goal name="algorithmA_spec&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2150058"/></proof>
    <proof prover="2"><result status="valid" time="0.24" steps="52878"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2312908"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145876"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="algorithmA_spec&#39;vc.4.1.1.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="algorithmA_spec&#39;vc.4.1.1.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2385871"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="129810"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="H">
        <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2401513"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="129636"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" proved="true" arg1="subset_set_smb_clauselist" arg2="clauselist">
         <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1">
          <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="instantiate" proved="true" arg1="Hinst" arg2="x">
           <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="0"><result status="timeout" time="1.00" steps="2438329"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="150554"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
            <proof prover="0"><result status="valid" time="0.10" steps="306456"/></proof>
            <proof prover="2"><result status="valid" time="0.22" steps="46807"/></proof>
            <proof prover="4"><result status="valid" time="0.04" steps="172"/></proof>
            </goal>
            <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
            <proof prover="0"><result status="timeout" time="1.00" steps="2454925"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="155150"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" proved="true" arg1="(subset (singleton (convertRStoAF x) ) (set_smb_clauselist clauselist))">
             <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
             <proof prover="2"><result status="valid" time="0.26" steps="51407"/></proof>
             </goal>
             <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1" expl="postcondition" proved="true">
             <proof prover="0"><result status="timeout" time="1.00" steps="2532560"/></proof>
             <proof prover="2"><result status="timeout" time="1.00" steps="142958"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
              <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1.0" expl="postcondition" proved="true">
              <proof prover="0"><result status="timeout" time="1.00" steps="2277596"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="129115"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="instantiate" proved="true" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
               <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1.0.0" expl="postcondition" proved="true">
               <proof prover="0"><result status="timeout" time="1.00" steps="2335407"/></proof>
               <proof prover="2"><result status="timeout" time="1.00" steps="133591"/></proof>
               <proof prover="4"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" proved="true" arg1="Hinst">
                <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
                <proof prover="2"><result status="valid" time="0.28" steps="52855"/></proof>
                </goal>
                <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0.0.0.1.1.0.0.1" expl="postcondition" proved="true">
                <proof prover="0"><result status="timeout" time="1.00" steps="2352271"/></proof>
                <proof prover="2" timelimit="5"><result status="valid" time="0.96" steps="132474"/></proof>
                <proof prover="4"><result status="timeout" time="1.00"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3460135"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113302"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="46322"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.39" steps="57714"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="44200"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="44232"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12555206"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="921624"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutacoes&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="44378"/></proof>
   </goal>
   <goal name="permutacoes&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2498921"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154538"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" proved="true" arg1="H">
    <goal name="permutacoes&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2776338"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152915"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" proved="true" >
     <goal name="permutacoes&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2922605"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H">
      <goal name="permutacoes&#39;vc.4.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3018729"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154599"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
       <goal name="permutacoes&#39;vc.4.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2915737"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150442"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.1.0.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.09" steps="39865"/></proof>
        </goal>
        <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2942766"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154440"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.0" expl="destruct premise" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2729841"/></proof>
         <proof prover="2"><result status="valid" time="0.10" steps="39863"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2422884"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154831"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0" expl="postcondition" proved="true">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8567818"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="817922"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="assert" proved="true" arg1="(algorithmA_spec clauselist2 c ==&#39; c)">
           <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2596512"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150927"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0" expl="asserted formula" proved="true">
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.10" steps="39894"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1" expl="asserted formula" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2693012"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151747"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1.0" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.21" steps="39892"/></proof>
              <proof prover="4" obsolete="true"><undone/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1.1" expl="asserted formula" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2391809"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164347"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1.1.0" expl="asserted formula" proved="true">
               <proof prover="2"><result status="valid" time="0.20" steps="43829"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.0.0.1.1.1" expl="asserted formula" proved="true">
               <proof prover="2"><result status="valid" time="0.20" steps="44797"/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="170"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.0.1" expl="postcondition" proved="true">
           <proof prover="2"><result status="valid" time="0.16" steps="41314"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1" expl="postcondition" proved="true">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12986983"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="904855"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0" expl="postcondition" proved="true">
           <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="8059390"/></proof>
           <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="736151"/></proof>
           <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
           <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0" expl="postcondition" proved="true">
            <proof prover="0"><result status="timeout" time="1.00" steps="2101624"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="171302"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.10" steps="39921"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1" expl="postcondition" proved="true">
             <proof prover="0"><result status="timeout" time="1.00" steps="2099666"/></proof>
             <proof prover="2"><result status="timeout" time="1.00" steps="162200"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.0" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.10" steps="39919"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.1" expl="postcondition" proved="true">
              <proof prover="0"><result status="timeout" time="1.00" steps="2095127"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="164233"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.1.0" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.20" steps="44474"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.1.1" expl="postcondition" proved="true">
               <proof prover="0"><result status="timeout" time="1.00" steps="2341227"/></proof>
               <proof prover="2"><result status="timeout" time="1.00" steps="186874"/></proof>
               <proof prover="4"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" proved="true" arg1="Hinst">
                <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.1.1.0" expl="postcondition" proved="true">
                <proof prover="2"><result status="valid" time="0.20" steps="44902"/></proof>
                </goal>
                <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.0.0.1.1.1.1" expl="postcondition" proved="true">
                <proof prover="2"><result status="timeout" time="1.00" steps="112374"/></proof>
                <proof prover="4"><result status="valid" time="0.23" steps="1524"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1" expl="postcondition" proved="true">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="11975841"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="741488"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2822395"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158422"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.10" steps="40051"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1" expl="postcondition" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2877107"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163443"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.0" expl="destruct premise" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2940253"/></proof>
              <proof prover="2"><result status="valid" time="0.10" steps="40049"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.1" expl="postcondition" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2930587"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185233"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.1.0" expl="postcondition" proved="true">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1960635"/></proof>
               <proof prover="2"><result status="valid" time="0.21" steps="46521"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.1.1.1" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.49" steps="66935"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permutacoes&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2997428"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155517"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="permutacoes&#39;vc.4.1.1.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="permutacoes&#39;vc.4.1.1.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="permutacoes&#39;vc.4.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9100191"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="395440"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="instantiate" proved="true" arg1="findOneSubset_exists" arg2="clauselist2,c">
        <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2366600"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116560"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="177447"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.23" steps="45123"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="171"/></proof>
         <transf name="assert" proved="true" arg1="(not is_nil clauselist)">
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="146945"/></proof>
          <proof prover="2"><result status="valid" time="0.15" steps="41821"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.0.1" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.22" steps="46534"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373420"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="97271"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1,x">
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2249624"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111090"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.22" steps="48826"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1" expl="postcondition" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2262654"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115301"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2398409"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104631"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.10" steps="40542"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1" expl="postcondition" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421317"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104610"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1.0" expl="destruct premise" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2913552"/></proof>
              <proof prover="2"><result status="valid" time="0.11" steps="40540"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1.1" expl="postcondition" proved="true">
              <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="8944744"/></proof>
              <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="671629"/></proof>
              <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1.1.0" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.21" steps="46781"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0.1.0.1.0.1.1.1" expl="postcondition" proved="true">
               <proof prover="2"><result status="valid" time="0.21" steps="47793"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3146240"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114050"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="48450"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="44554"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="44586"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="44616"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="60204"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2369985"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="199860"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="monotone_algA&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2496849"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="183818"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="140"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2412353"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146529"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="monotone_algA&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="monotone_algA&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.41" steps="72540"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_algA&#39;vc.5.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="2255435"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="117531"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="eliminate_let" proved="true" >
    <goal name="monotone_algA&#39;vc.5.2.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="H">
     <goal name="monotone_algA&#39;vc.5.2.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.60" steps="87199"/></proof>
     </goal>
     <goal name="monotone_algA&#39;vc.5.2.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="2403669"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="117679"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H">
      <goal name="monotone_algA&#39;vc.5.2.0.1.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.95" steps="119891"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="462678"/></proof>
 <proof prover="2"><result status="valid" time="0.28" steps="54514"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="45419"/></proof>
  </goal>
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3344032"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45503"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal s &gt; 1)">
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2810011"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0" expl="true case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="s">
     <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131944"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="42009"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="39"/></proof>
      </goal>
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5846692"/></proof>
      <proof prover="2"><result status="valid" time="0.42" steps="52357"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="541"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197408"/></proof>
   <proof prover="2"><result status="valid" time="0.37" steps="52252"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2824061"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168386"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction_1.0" proved="true">
  <transf name="exists" proved="true" arg1="(val_all_top)">
   <goal name="subset_of_evalsetconjunction_1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.45" steps="74587"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="6097522"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126353"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2851663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123986"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" proved="true" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2486786"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.81" steps="99214"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="case" proved="true" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="41920"/></proof>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2393648"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113319"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.1.0" expl="false case (true case)" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="48048"/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.1.1" expl="false case" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2358643"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119501"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.1.1.0" expl="false case" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2625644"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130499"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
       <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0" expl="false case" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.09" steps="38377"/></proof>
        </goal>
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.1" expl="false case" proved="true">
        <proof prover="0"><result status="valid" time="0.11" steps="208362"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="112416"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="contr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="43112"/></proof>
 </goal>
 <goal name="distr_exists" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5040407"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="43492"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294650"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="48313"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="satisf_clauselist_all_mem_satisf" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277560"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192334"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="satisf_clauselist_all_mem_satisf.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373312"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201939"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="satisf_clauselist_all_mem_satisf.0.0" proved="true">
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="satisf_clauselist_all_mem_satisf.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.34" steps="50735"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1331314"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98348"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_is_satisfiable_clauselist.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_is_satisfiable_clauselist.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_is_satisfiable_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="40901"/></proof>
    </goal>
    <goal name="sublist_is_satisfiable_clauselist.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1751538"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152242"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.18" steps="46334"/></proof>
     </goal>
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1090093"/></proof>
     <proof prover="2"><result status="valid" time="0.38" steps="52655"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb_generic" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10250884"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="765763"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="smb_generic.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><undone/></proof>
  <proof prover="2"><result status="valid" time="0.50" steps="76807"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2"><result status="valid" time="0.38" steps="55740"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="not_subset_spec_test" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2719674"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114161"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_test.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1428122"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130325"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="not_subset_spec_test.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_test.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.26" steps="46552"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
    </goal>
    <goal name="not_subset_spec_test.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="125174"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2801256"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124941"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="equality_is_equal_list&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3682332"/></proof>
  <proof prover="2"><result status="valid" time="0.22" steps="46730"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="44448"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527581"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119434"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="equality_is_equal_list&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="41014"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="44263"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="41171"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="46699"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2406598"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115325"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_equal_list_reflexive&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2514671"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42817"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_equal_list">
   <goal name="is_equal_list_reflexive&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2515158"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165611"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="is_equal_list_reflexive&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2336425"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112270"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="is_equal_list_reflexive&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="44416"/></proof>
   </goal>
   <goal name="is_equal_list_reflexive&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="44530"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="44659"/></proof>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423557"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="47379"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1580198"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="64851"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="44961"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="44758"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="268"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="100643"/></proof>
   <proof prover="4"><result status="valid" time="0.05" steps="268"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="44758"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2997534"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129390"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="44698"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6780028"/></proof>
   <proof prover="2"><result status="valid" time="0.24" steps="49140"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="195"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="2.00" steps="178170"/></proof>
   <proof prover="4"><result status="valid" time="0.05" steps="195"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="49140"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_ref" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="45287"/></proof>
 </goal>
 <goal name="permut_trans" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="45405"/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="47267"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="46623"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="52227"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080190"/></proof>
 <proof prover="2"><result status="valid" time="0.55" steps="70917"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2081573"/></proof>
 <proof prover="2"><result status="valid" time="0.28" steps="53768"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_cl1_cl2" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="46588"/></proof>
 </goal>
 <goal name="concat_with_element" proved="true">
 <proof prover="2"><result status="valid" time="0.32" steps="57124"/></proof>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1454073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105159"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_concat_not_mem_l1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1459543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98112"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.42" steps="57974"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910038"/></proof>
 <proof prover="2"><result status="valid" time="0.27" steps="53668"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_permut" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1553188"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121707"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_permut.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1725343"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118513"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="permut">
   <goal name="removeFromList_permut.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_permut.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1655081"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119617"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(x = elem)">
     <goal name="removeFromList_permut.0.0.0.0" expl="true case" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="51163"/></proof>
     </goal>
     <goal name="removeFromList_permut.0.0.0.1" expl="false case" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1657192"/></proof>
     <proof prover="2"><result status="valid" time="0.22" steps="50455"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_permut_concat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2091139"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122792"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_permut_concat.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1626528"/></proof>
  <proof prover="2"><result status="valid" time="0.52" steps="82409"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_elem_not_in_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424464"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122344"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_elem_not_in_list.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2419393"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136747"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="51641"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="857767"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="312454"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="120680"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="130771"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255490"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111610"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2395037"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107447"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.12" steps="42996"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="46181"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="42171"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2399925"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108239"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.16" steps="43445"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="50"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="119211"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="54"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="147559"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="52"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4704247"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125330"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.12" steps="45256"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.36" steps="52408"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.25" steps="52972"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_for_all" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1390617"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="71842"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_for_all.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2154148"/></proof>
  <proof prover="2"><result status="valid" time="0.38" steps="56214"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_general" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="47557"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_general.0" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="47774"/></proof>
  </goal>
  <goal name="not_subset_general.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2443561"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118174"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_general.1.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2202787"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140169"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_general.1.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="49657"/></proof>
    </goal>
    <goal name="not_subset_general.1.0.1" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1499880"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="648797"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.22" steps="52291"/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778925"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106286"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="not_subset_spec">
      <goal name="not_subset_general.1.0.1.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="not_subset_general.1.0.1.1.0.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2210738"/></proof>
       <proof prover="2"><result status="valid" time="1.83" steps="182956"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="not_subset_general.1.0.1.1.0.1" proved="true">
       <proof prover="2"><result status="valid" time="0.10" steps="42720"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_numOfSubset_0" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2503073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121511"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_numOfSubset_0.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2644547"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125048"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_numOfSubset_0.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.27" steps="54118"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="475"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2673230"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116569"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_0_not_subset&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1353144"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="128515"/></proof>
  <proof prover="4"><result status="valid" time="0.05" steps="159"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="599401"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="147949"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="49"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1453114"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73242"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.2.0" expl="VC for numOfSubset_0_not_subset" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="49778"/></proof>
    </goal>
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="107129"/></proof>
    <proof prover="4"><result status="valid" time="0.05" steps="222"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="notSubset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="52657"/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_1" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="51963"/></proof>
 </goal>
 <goal name="addSubset_to_numOfSubset" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="54731"/></proof>
 </goal>
 <goal name="removeNumOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2038765"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150335"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeNumOfSubset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1522274"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167842"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeNumOfSubset.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="123478"/></proof>
   <proof prover="4"><result status="valid" time="0.38" steps="2615"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_clauselist_c_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1132002"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116127"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_clauselist_c_1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1498814"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130104"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="(exists set p. mem1 (set,p) clauselist /\ subset set c)">
   <goal name="numOfSubset_clauselist_c_1.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="50145"/></proof>
   </goal>
   <goal name="numOfSubset_clauselist_c_1.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1268318"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="(forall set1:fset atomicformula, p1:rightside. mem1 (set1,p1) (removeFromList (set, p) clauselist) -&gt; (not subset set1 c))">
    <goal name="numOfSubset_clauselist_c_1.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="50625"/></proof>
    </goal>
    <goal name="numOfSubset_clauselist_c_1.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1220980"/></proof>
    <proof prover="2"><result status="valid" time="0.24" steps="51679"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1_num_occ" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1973987"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="226357"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1_num_occ.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1026651"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129831"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1_num_occ.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="137549"/></proof>
   <proof prover="4"><result status="valid" time="0.22" steps="1425"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1561499"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118745"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2122453"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="610484"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="148618"/></proof>
   <proof prover="4"><result status="valid" time="0.89" steps="2448"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2009871"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138025"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="51849"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2370706"/></proof>
  <proof prover="2"><result status="valid" time="0.40" steps="54882"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.46" steps="59493"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2662931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134022"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="not_subset_spec" arg2="in" arg3="Requires">
   <goal name="not_subset_permut&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="destruct_term" proved="true" arg1="clauselist">
    <goal name="not_subset_permut&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1269894"/></proof>
    <proof prover="2"><result status="valid" time="1.05" steps="134115"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="not_subset_permut&#39;vc.3.0.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1271690"/></proof>
    <proof prover="2"><result status="valid" time="0.36" steps="51499"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equality_add" proved="true">
 <proof prover="2"><result status="valid" time="0.56" steps="70756"/></proof>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="480279"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="196776"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_basecase&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1495979"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168156"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_basecase&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.20" steps="52577"/></proof>
     </goal>
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1473231"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166910"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4473183"/></proof>
      <proof prover="2"><result status="valid" time="0.21" steps="52588"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="1414899"/></proof>
      <proof prover="2" timelimit="5"><result status="valid" time="3.12" steps="413436"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses_inductive_case2&#39;vc" expl="VC for removeTwoClauses_inductive_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1936611"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168015"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_inductive_case2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1829057"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149853"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.22" steps="54003"/></proof>
     </goal>
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1797972"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130637"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2015634"/></proof>
      <proof prover="2"><result status="valid" time="0.19" steps="54014"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1379784"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118712"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0" expl="asserted formula">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="528659"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.1" expl="postcondition">
        <proof prover="2"><undone/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1493164"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122265"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem2 clauselist)">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0" expl="postcondition">
        <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF elem21) c)">
         <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0" expl="postcondition">
         <transf name="destruct" arg1="Hinst">
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.0" expl="destruct premise">
          <proof prover="2"><undone/></proof>
          </goal>
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1513883"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127126"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.0" expl="postcondition">
           <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.09" steps="316170"/></proof>
           <proof prover="2"><undone/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.07" steps="270"/></proof>
           </goal>
           <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1748133"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135330"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.0" expl="postcondition">
            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6184828"/></proof>
            <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="603124"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
            <transf name="assert" arg1="(is_equal_list (removeFromList elem2 clauselist) (Cons elem1 Nil))">
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.0.0" expl="asserted formula">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="625700"/></proof>
             <proof prover="2"><undone/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             </goal>
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.0.1" expl="postcondition">
             <proof prover="2"><undone/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1" expl="postcondition">
            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6721227"/></proof>
            <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="556887"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
            <transf name="induction_arg_ty_lex" arg1="clauselist">
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0" expl="VC for removeTwoClauses_inductive_case2">
             <proof prover="2"><undone/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="989577"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144085"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1414182"/></proof>
       <proof prover="2"><result status="valid" time="0.29" steps="62762"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem2 clauselist)">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0" expl="postcondition">
        <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF elem21) c)">
         <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0" expl="postcondition">
         <transf name="destruct" arg1="Hinst">
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="55138"/></proof>
          </goal>
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0.1" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1438277"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146939"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0.1.0" expl="destruct premise">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4908229"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="924634"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="destruct" arg1="Hinst1">
            <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.0.0" expl="destruct premise">
            <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5025839"/></proof>
            <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="941715"/></proof>
            <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
            <transf name="assert" arg1="(not ((convertRStoAF elem21) = ABot))">
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.0.0.0" expl="asserted formula">
             <proof prover="2"><result status="valid" time="0.12" steps="47578"/></proof>
             </goal>
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.0.0.1" expl="destruct premise">
             <proof prover="0"><result status="timeout" time="1.00" steps="1649379"/></proof>
             <proof prover="2"><result status="timeout" time="1.00" steps="200257"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             <transf name="assert" arg1="(not mem ABot c)">
              <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.0.0.1.0" expl="asserted formula">
              <proof prover="0"><result status="timeout" time="1.00" steps="1532732"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="180947"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              </goal>
              <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.0.0.1.1" expl="destruct premise">
              <proof prover="2"><result status="valid" time="0.20" steps="54818"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.0.1" expl="destruct premise">
            <proof prover="0"><result status="timeout" time="1.00" steps="1491348"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="225583"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0.1.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1428948"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146470"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0.1.1.0" expl="postcondition">
            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5649073"/></proof>
            <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="655535"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0" expl="postcondition">
             <proof prover="0"><result status="timeout" time="1.00" steps="1486193"/></proof>
             <proof prover="2"><result status="timeout" time="1.00" steps="170348"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             <transf name="assert" arg1="(mem1 elem1 (removeFromList elem2 clauselist))">
              <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.0" expl="asserted formula">
              <proof prover="2"><result status="valid" time="0.31" steps="66149"/></proof>
              </goal>
              <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.1" expl="postcondition">
              <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4935191"/></proof>
              <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="653584"/></proof>
              <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
              <transf name="induction_arg_ty_lex" arg1="clauselist">
               <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.1.0" expl="VC for removeTwoClauses_inductive_case2">
               <proof prover="2"><result status="valid" time="0.76" steps="121481"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.1" expl="postcondition">
             <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5844907"/></proof>
             <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="810720"/></proof>
             <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.1.0" expl="postcondition">
              <proof prover="0"><result status="timeout" time="1.00" steps="1731101"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="157799"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="induction_arg_ty_lex" arg1="clauselist">
               <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.1.0.0" expl="VC for removeTwoClauses_inductive_case2">
               <proof prover="2"><result status="valid" time="0.77" steps="123410"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.1.1" expl="postcondition">
              <proof prover="0"><result status="timeout" time="1.00" steps="1707078"/></proof>
              <proof prover="2"><result status="timeout" time="1.00" steps="162911"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="induction_arg_ty_lex" arg1="clauselist">
               <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.1.1.0" expl="VC for removeTwoClauses_inductive_case2">
               <proof prover="2"><result status="valid" time="0.88" steps="138132"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0.1.1.1" expl="postcondition">
            <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.09" steps="299648"/></proof>
            <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.32" steps="65138"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="252"/></proof>
            <transf name="assert" arg1="(is_equal_list (removeFromList elem2 clauselist) (Cons elem1 Nil))">
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0.1.1.1.0" expl="asserted formula">
             <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="252284"/></proof>
             <proof prover="2" obsolete="true"><result status="valid" time="0.37" steps="68380"/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="267"/></proof>
             </goal>
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0.1.1.1.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="53774"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.45" steps="946108"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="61974"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.17" steps="1001"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="503064"/></proof>
        <proof prover="2"><result status="valid" time="0.90" steps="111365"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.52" steps="88161"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6415372"/></proof>
 <proof prover="2"><result status="valid" time="0.26" steps="60541"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138055"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119580"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1837167"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138583"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1831857"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135932"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
    <goal name="removeFromList_algorithmA&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.13" steps="51816"/></proof>
      </goal>
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1221720"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152797"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0" expl="destruct premise" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1151625"/></proof>
       <proof prover="2"><result status="valid" time="0.13" steps="51814"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2072136"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135362"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.0" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.26" steps="58958"/></proof>
        </goal>
        <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160085"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141457"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.1.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.29" steps="60886"/></proof>
         </goal>
         <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.1.1" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2088524"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140693"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.1.1.0" expl="postcondition" proved="true">
          <proof prover="2"><result status="valid" time="0.30" steps="63210"/></proof>
          </goal>
          <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.1.1.1" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2066935"/></proof>
          <proof prover="2"><result status="valid" time="0.30" steps="63473"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7297570"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="715499"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="58357"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="56283"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6285900"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="786667"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="case" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1979662"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123868"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1575264"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120543"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1915190"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="683215"/></proof>
      <proof prover="2"><result status="valid" time="0.16" steps="54238"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.98" steps="1638"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5665152"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="781552"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" proved="true" arg1="H">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.0" expl="true case (postcondition)" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1704818"/></proof>
       <proof prover="2"><result status="valid" time="0.21" steps="54245"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1" expl="true case (postcondition)" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1648914"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120014"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" proved="true" arg1="Hinst" arg2="(pick c)">
        <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1.0" expl="true case (postcondition)" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="126754"/></proof>
        <proof prover="4"><result status="valid" time="0.42" steps="1803"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8711205"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="597289"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="case" arg1="(cardinal c = 1)">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0" expl="false case (true case. postcondition)">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="10469230"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="567581"/></proof>
    <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0" expl="false case (true case. postcondition)" proved="true">
     <proof prover="2"><result status="valid" time="0.20" steps="54005"/></proof>
     </goal>
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1" expl="false case (true case. postcondition)">
     <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="9611796"/></proof>
     <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="546739"/></proof>
     <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
     <transf name="unfold" arg1="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0" expl="false case (true case. postcondition)">
      <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="9488946"/></proof>
      <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="568191"/></proof>
      <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
      <transf name="assert" arg1="(exists x. c = singleton x)">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="116134"/></proof>
       <proof prover="4"><result status="valid" time="0.08" steps="528"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1" expl="false case (true case. postcondition)">
       <proof prover="0"><result status="timeout" time="1.00" steps="2123432"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="124204"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="introduce_exists" >
        <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0" expl="false case (true case. postcondition)">
        <proof prover="0"><result status="timeout" time="1.00" steps="2123518"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="122023"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="subst" arg1="c">
         <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0" expl="false case (true case. postcondition)">
         <proof prover="0"><result status="timeout" time="1.00" steps="2022078"/></proof>
         <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="661946"/></proof>
         <proof prover="4" timelimit="5"><undone/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.1" expl="false case (postcondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.25" steps="56668"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723350"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="57644"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="bot_not_in_set_then_sat_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="58462"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="56361"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3128856"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138541"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_set">
   <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0" expl="VC for bot_not_in_set_then_sat_set" proved="true">
   <transf name="exists" proved="true" arg1="(val_all_top)">
    <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.26" steps="54078"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p" proved="true">
 <proof prover="0"><result status="valid" time="0.20" steps="359038"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="163790"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2"><result status="valid" time="0.46" steps="60931"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3347062"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="55757"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case3" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="55931"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case4" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="56584"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1412420"/></proof>
 <proof prover="2"><result status="valid" time="0.16" steps="56156"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2834289"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="154095"/></proof>
 <proof prover="4"><result status="valid" time="0.07" steps="461"/></proof>
 </goal>
 <goal name="removeFromList_not_empty_setc_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2241812"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116095"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_not_empty_setc_clauselist.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8510920"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="690191"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_not_empty_setc_clauselist.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.42" steps="76651"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="979345"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123441"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_top_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="56386"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.32" steps="60252"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2269024"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164847"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="137037"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" proved="true" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0" expl="destruct premise" proved="true">
       <transf name="subst" proved="true" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2300008"/></proof>
        <proof prover="2"><result status="valid" time="0.24" steps="60140"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2002335"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="58685"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.24" steps="60383"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.37" steps="2450"/></proof>
       </goal>
       <goal name="case1_top_imples_p.1.0.0.1.1.1" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3789846"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="510392"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case1_top_imples_p.1.0.0.1.1.1.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2195794"/></proof>
        <proof prover="2"><result status="valid" time="0.22" steps="60453"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="case1_top_imples_p.1.0.0.1.1.1.1" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2185678"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="151801"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="151558"/></proof>
         <proof prover="4"><result status="valid" time="0.89" steps="3081"/></proof>
         </goal>
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2399964"/></proof>
         <proof prover="2"><result status="valid" time="0.41" steps="72609"/></proof>
         <proof prover="4" timelimit="5"><result status="valid" time="1.12" steps="7044"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1963047"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117628"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_conjuction_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.33" steps="60480"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2843633"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126702"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2267413"/></proof>
      <proof prover="2"><result status="valid" time="0.23" steps="60582"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2231126"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="58929"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.25" steps="60627"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.24" steps="1576"/></proof>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1112624"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="227633"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1197855"/></proof>
        <proof prover="2"><result status="valid" time="0.21" steps="60692"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1" proved="true">
        <proof prover="2"><result status="timeout" time="2.00" steps="214219"/></proof>
        <proof prover="4"><result status="valid" time="0.56" steps="3356"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2"><result status="valid" time="0.36" steps="63103"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.33" steps="63300"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.35" steps="63511"/></proof>
 </goal>
 <goal name="case2_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1965027"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="193193"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case2_top_imples_p.0" proved="true">
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="55949"/></proof>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1565640"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="55947"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_top_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2039074"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="59362"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.31" steps="61082"/></proof>
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.1.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1103452"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="234098"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case2_top_imples_p.0.0.0.1.1.1.0" proved="true">
        <proof prover="2"><result status="valid" time="0.22" steps="61152"/></proof>
        </goal>
        <goal name="case2_top_imples_p.0.0.0.1.1.1.1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1233672"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="72998"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="case2_top_imples_p.0.0.0.1.1.1.1.0" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="145340"/></proof>
         <proof prover="4"><result status="valid" time="0.96" steps="2588"/></proof>
         </goal>
         <goal name="case2_top_imples_p.0.0.0.1.1.1.1.1" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1262321"/></proof>
         <proof prover="2"><result status="valid" time="0.47" steps="89959"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="1.79" steps="2588"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1307008"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="281647"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case2_conjunction_imples_p.0" proved="true">
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="56168"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2013086"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="56166"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2035166"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="59612"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.29" steps="61332"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1263000"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="237661"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.0" proved="true">
        <proof prover="2"><result status="valid" time="0.24" steps="61397"/></proof>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1281345"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="94497"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="152315"/></proof>
         <proof prover="4"><result status="valid" time="0.84" steps="2231"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1290822"/></proof>
         <proof prover="2"><result status="valid" time="0.90" steps="176855"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="1.62" steps="2231"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2"><result status="valid" time="0.32" steps="68045"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2"><result status="valid" time="0.25" steps="64695"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="64524"/></proof>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1871066"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135753"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="68679"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1334937"/></proof>
  <proof prover="2"><result status="valid" time="0.41" steps="73722"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1916618"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138195"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1793256"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="121586"/></proof>
   <proof prover="4"><result status="valid" time="0.20" steps="1292"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982709"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="253248"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982180"/></proof>
   <proof prover="2"><result status="valid" time="0.24" steps="60178"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="62810"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="62818"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.6" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="54434"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1821812"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131841"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2034447"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="119609"/></proof>
   <proof prover="4"><result status="valid" time="0.07" steps="57"/></proof>
   </goal>
   <goal name="case3_induction_general&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1653921"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="116313"/></proof>
   <proof prover="4"><result status="valid" time="0.07" steps="212"/></proof>
   </goal>
   <goal name="case3_induction_general&#39;vc.7.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1850482"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119289"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="case3_induction_general&#39;vc.7.2.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1012395"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76964"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" proved="true" >
     <goal name="case3_induction_general&#39;vc.7.2.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1074324"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="74867"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H">
      <goal name="case3_induction_general&#39;vc.7.2.0.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.38" steps="70397"/></proof>
      </goal>
      <goal name="case3_induction_general&#39;vc.7.2.0.0.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="929727"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="74826"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="H">
       <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2173454"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="156339"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="H1">
        <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0" expl="postcondition" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2172339"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="156533"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="H1">
         <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0.0" expl="postcondition" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2319125"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="152697"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="H1">
          <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="2214247"/></proof>
          <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="626967"/></proof>
          <proof prover="4" timelimit="5"><result status="valid" time="3.66" steps="5801"/></proof>
          </goal>
          <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0.0.1" expl="postcondition" proved="true">
          <proof prover="2"><result status="valid" time="0.37" steps="73057"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="case3_induction_general&#39;vc.7.2.0.0.1.0.0.1" expl="postcondition" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2279796"/></proof>
         <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="644964"/></proof>
         <proof prover="4" timelimit="5"><result status="valid" time="3.62" steps="5486"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424592"/></proof>
 <proof prover="2"><result status="valid" time="0.37" steps="70093"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="G1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2083497"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120403"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="G2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421260"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="196408"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="unsat_induction">
 <proof prover="0"><result status="timeout" time="1.00" steps="2211890"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="132681"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2153270"/></proof>
 <proof prover="2"><result status="valid" time="0.25" steps="62869"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="horn_sat" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="2345006"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="135820"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="horn_sat.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2258299"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139066"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" proved="true" arg1="clauselist">
   <goal name="horn_sat.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2030547"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="case3_induction" arg2="clauselist">
    <goal name="horn_sat.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2151276"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134963"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="horn_sat.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1586438"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146519"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="horn_sat.0.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.25" steps="63248"/></proof>
      </goal>
      <goal name="horn_sat.0.0.0.0.1" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="54853"/></proof>
      </goal>
      <goal name="horn_sat.0.0.0.0.2" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2153654"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="54853"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="horn_sat.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1887715"/></proof>
     <proof prover="2"><result status="valid" time="0.23" steps="60109"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="horn_sat.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2350304"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137488"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="((horn_logic clauselist = True) -&gt; (not mem ABot (algorithmA_spec clauselist (singleton ATop))))">
    <goal name="horn_sat.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.25" steps="62834"/></proof>
    </goal>
    <goal name="horn_sat.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2218545"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137541"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="h">
     <goal name="horn_sat.0.1.1.0" expl="destruct premise" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="2328531"/></proof>
     <proof prover="2" timelimit="5"><result status="valid" time="1.78" steps="206056"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="case3_induction" arg2="clauselist">
      <goal name="horn_sat.0.1.1.0.0" expl="destruct premise">
      <transf name="destruct" arg1="Hinst">
       <goal name="horn_sat.0.1.1.0.0.0" expl="destruct premise">
       <proof prover="0"><result status="timeout" time="1.00" steps="2330401"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="145876"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="split_vc" >
        <goal name="horn_sat.0.1.1.0.0.0.0" expl="destruct premise">
        <proof prover="0"><result status="timeout" time="1.00" steps="2402283"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="142062"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="horn_sat.0.1.1.0.0.0.1" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.13" steps="54829"/></proof>
        </goal>
        <goal name="horn_sat.0.1.1.0.0.0.2" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.13" steps="54829"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="horn_sat.0.1.1.0.0.1" expl="destruct premise" proved="true">
       <proof prover="2"><result status="valid" time="0.23" steps="60071"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="horn_sat.0.1.1.1" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="60071"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="G3">
 <proof prover="0"><result status="timeout" time="1.00" steps="2113293"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="124362"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="horn_unsat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2264903"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122276"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="horn_unsat.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175706"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131859"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="((horn_logic clauselist = False) -&gt; (mem ABot (algorithmA_spec clauselist (singleton ATop))))
">
   <goal name="horn_unsat.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.24" steps="62886"/></proof>
   </goal>
   <goal name="horn_unsat.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2245775"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131491"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="unsat_induction" arg2="clauselist">
    <goal name="horn_unsat.0.1.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="horn_unsat.0.1.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2296997"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119683"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="horn_unsat.0.1.0.0.0" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2267940"/></proof>
      <proof prover="2"><result status="valid" time="0.24" steps="63242"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="horn_unsat.0.1.0.0.1" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="54920"/></proof>
      </goal>
      <goal name="horn_unsat.0.1.0.0.2" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="54920"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="horn_unsat.0.1.0.1" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="60137"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="G4">
 <proof prover="0"><result status="timeout" time="1.00" steps="2149833"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="121502"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_prog&#39;vc" expl="VC for removeFromList_prog" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2344047"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150767"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_prog&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2100668"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.55" steps="62161"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="46"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="removeFromList_prog&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.31" steps="63873"/></proof>
   </goal>
   <goal name="removeFromList_prog&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="119842"/></proof>
   <proof prover="4"><result status="valid" time="0.04" steps="49"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="removeFromList_prog&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2276468"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130974"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="removeFromList_prog&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1912156"/></proof>
   <proof prover="2"><result status="valid" time="0.25" steps="61347"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="removeFromList_prog&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2140363"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118602"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_prog&#39;vc.1.1.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7390313"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="711116"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="removeFromList_prog&#39;vc.1.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2037202"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137289"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="removeFromList_prog&#39;vc.1.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.16" steps="56183"/></proof>
      </goal>
      <goal name="removeFromList_prog&#39;vc.1.1.1.1.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2062240"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118261"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="eliminate_let" >
       <goal name="removeFromList_prog&#39;vc.1.1.1.1.0.0" expl="postcondition">
       <transf name="eliminate_if" >
        <goal name="removeFromList_prog&#39;vc.1.1.1.1.0.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1942702"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="removeFromList_prog&#39;vc.1.1.0.1" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.38" steps="65207"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="removeFromList_prog&#39;vc.1.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2252233"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124469"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="removeFromList_prog&#39;vc.1.1.1.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2217021"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123821"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="removeFromList_prog&#39;vc.1.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7329302"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="695104"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="eliminate_let" proved="true" >
       <goal name="removeFromList_prog&#39;vc.1.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2120047"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111055"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="eliminate_if" proved="true" >
        <goal name="removeFromList_prog&#39;vc.1.1.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.32" steps="69375"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="removeFromList_prog&#39;vc.1.1.0.1.0" expl="postcondition">
      <proof prover="2"><undone/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="removeFromList_prog&#39;vc.1.1.1.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2217162"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130112"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="removeFromList_prog&#39;vc.1.1.1.1.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1941946"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138084"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="eliminate_let" proved="true" >
       <goal name="removeFromList_prog&#39;vc.1.1.1.1.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="removeFromList_prog&#39;vc.1.1.1.1.0.0.0" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1939585"/></proof>
        <proof prover="2"><result status="valid" time="0.14" steps="56803"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="removeFromList_prog&#39;vc.1.1.1.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2076947"/></proof>
      <proof prover="2"><result status="valid" time="0.35" steps="67914"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="removeFromList_prog&#39;vc.4" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="1477047"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="removeFromList_prog&#39;vc.3" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="2013769"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="removeFromList_prog&#39;vc.2" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="1409214"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="147240"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="removeFromList_prog&#39;vc.2.0" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="removeFromList_prog&#39;vc.2.1" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="1852150"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="130602"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="removeFromList_prog&#39;vc.2.1.0" expl="postcondition">
    <proof prover="0"><result status="timeout" time="1.00" steps="1815110"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="130662"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="removeFromList_prog&#39;vc.2.1.0.0" expl="postcondition">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="removeFromList_prog&#39;vc.2.1.0.1" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="1810009"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="130671"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" >
      <goal name="removeFromList_prog&#39;vc.2.1.0.1.0" expl="postcondition">
      <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="6339153"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="removeFromList_prog&#39;vc.2.1.0.1.1" expl="postcondition">
      <proof prover="2"><undone/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="removeFromList_prog&#39;vc.2.1.1" expl="postcondition">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="G5">
 <proof prover="0"><result status="timeout" time="1.00" steps="2160672"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="122272"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.42" steps="86209"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401492"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146149"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.32" steps="68187"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5180706"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="416618"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="assert" proved="true" arg1="(length (listset_to_listfset o) &lt; length (listset_to_listfset clauselist))">
    <goal name="algorithmA&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="107526"/></proof>
    <proof prover="4"><result status="valid" time="0.13" steps="636"/></proof>
    </goal>
    <goal name="algorithmA&#39;vc.0.1.1" expl="variant decrease" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4655795"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="650039"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" proved="true" arg1="(length (listset_to_listfset o) = length o)">
     <goal name="algorithmA&#39;vc.0.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4823108"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="277327"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="induction_arg_ty_lex" proved="true" arg1="o">
      <goal name="algorithmA&#39;vc.0.1.1.0.0" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="1140445"/></proof>
      <proof prover="2" timelimit="5"><result status="valid" time="4.78" steps="473870"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.0.1.1.1" expl="variant decrease" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2215796"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137990"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" proved="true" arg1="(length (listset_to_listfset clauselist) = length clauselist)">
      <goal name="algorithmA&#39;vc.0.1.1.1.0" expl="asserted formula" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2448998"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158622"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
       <goal name="algorithmA&#39;vc.0.1.1.1.0.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1936562"/></proof>
       <proof prover="2"><result status="valid" time="0.94" steps="120173"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="algorithmA&#39;vc.0.1.1.1.1" expl="variant decrease" proved="true">
      <proof prover="2"><result status="valid" time="0.23" steps="61593"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="63227"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="63261"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="64825"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="61231"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="61334"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.3.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2266318"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.16" steps="259998"/></proof>
     <proof prover="2"><result status="valid" time="0.37" steps="73154"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="algorithmA&#39;vc.3.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.08" steps="261491"/></proof>
     <proof prover="2"><result status="timeout" time="2.00" steps="232724"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138125"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134305"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2039373"/></proof>
   <proof prover="2"><result status="valid" time="0.30" steps="63534"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2230152"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138324"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3787377"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="772792"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
     <goal name="algorithmA&#39;vc.4.1.0.0" expl="VC for algorithmA" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1959386"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="139004"/></proof>
     <proof prover="4"><result status="valid" time="0.16" steps="832"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1814558"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142954"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.4.1.1.0" expl="postcondition" proved="true">
     <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4760847"/></proof>
     <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="794443"/></proof>
     <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
     <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
      <goal name="algorithmA&#39;vc.4.1.1.0.0" expl="VC for algorithmA" proved="true">
      <proof prover="2"><result status="valid" time="0.84" steps="130074"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.4.1.1.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1738191"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133298"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Ensures1">
      <goal name="algorithmA&#39;vc.4.1.1.1.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="136551"/></proof>
      <proof prover="4"><result status="valid" time="0.04" steps="74"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.4.1.1.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2095423"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126952"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Ensures1">
       <goal name="algorithmA&#39;vc.4.1.1.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="211615"/></proof>
       <proof prover="4"><result status="valid" time="1.51" steps="4568"/></proof>
       </goal>
       <goal name="algorithmA&#39;vc.4.1.1.0.0.0" expl="postcondition">
       <proof prover="2"><undone/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="64203"/></proof>
 </goal>
 <goal name="G6">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2220128"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130670"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
</file>
</why3session>
