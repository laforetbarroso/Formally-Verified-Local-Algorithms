<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_new.mlw"/>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="28251"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27394"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28065"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="28030"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="26200"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="23704"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="AFtoRS_RStoAF.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="27620"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="26550"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Eval" proved="true">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="123353"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="153022"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="3805706"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="152707"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="34841"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="40847"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="30958"/></proof>
 </goal>
</theory>
<theory name="SAT">
 <goal name="rs_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="32593"/></proof>
 </goal>
 <goal name="af_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="32789"/></proof>
 </goal>
 <goal name="set_unsat_then_not_sat" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="20151437"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="32992"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="clause_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="33195"/></proof>
 </goal>
 <goal name="cl_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="33398"/></proof>
 </goal>
 <goal name="forall_distribution">
 <proof prover="0"><result status="timeout" time="1.00" steps="2334045"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="151936"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="forall_distribution.0">
  <proof prover="0"><result status="timeout" time="1.00" steps="2282671"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="153005"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197502"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132862"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="36250"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="35360"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13590241"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="921565"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3254606"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140125"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3249794"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121958"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3268767"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104964"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="113207"/></proof>
      <proof prover="2"><result status="valid" time="0.12" steps="33138"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="27"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15519639"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="141868"/></proof>
      <proof prover="4"><result status="valid" time="0.92" steps="1264"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15027764"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="778508"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="case" proved="true" arg1="(cardinal c = 1)">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0" expl="false case (true case. postcondition)" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="16981320"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="799537"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="4.77" steps="3152"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0" expl="false case (true case. postcondition)" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3374702"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="330559"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_singleton" arg2="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
       <proof prover="2"><result status="valid" time="0.13" steps="33028"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="360"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1" expl="false case (true case. postcondition)" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3184553"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130121"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8757046"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="348184"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="assert" proved="true" arg1="(exists o. o = pick c)">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="valid" time="0.16" steps="29822"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1" expl="false case (true case. postcondition)" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1890499"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="75498"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="introduce_exists" proved="true" >
        <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1846040"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76460"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" proved="true" arg1="eval_setconjunction_singleton" arg2="(fun (_:i1) -&gt; top1)">
         <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
          <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="126432"/></proof>
          <proof prover="4"><result status="valid" time="0.28" steps="1119"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.1" expl="false case (postcondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.16" steps="34471"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="39186"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set&#39;vc" expl="VC for subset_of_satisfiable_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3784125"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="43768"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_satisfiable_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="36639"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2466309"/></proof>
  <proof prover="2"><result status="valid" time="0.16" steps="35568"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1571077"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="40635"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3557374"/></proof>
  <proof prover="2"><result status="valid" time="0.75" steps="120963"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="satisfiable_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2114374"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="satisfiable_clause.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="satisfiable_clause.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="39088"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3908768"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="478857"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_is_satisfiable_clauselist.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4268308"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="477218"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist" arg2="in" arg3="H">
   <goal name="sublist_is_satisfiable_clauselist.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist">
    <goal name="sublist_is_satisfiable_clauselist.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4136161"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="359166"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="sublist_is_satisfiable_clauselist.0.0.0.0" proved="true">
     <transf name="exists" proved="true" arg1="f">
      <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="21654367"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1948466"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="clauselist">
       <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="19244217"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3003363"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
        <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1410552"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120846"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="split_vc" proved="true" >
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0.0.0" proved="true">
         <proof prover="2"><result status="valid" time="0.12" steps="35488"/></proof>
         </goal>
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0.0.1" proved="true">
         <proof prover="2"><result status="valid" time="0.24" steps="48842"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4439115"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="387133"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
        <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1388425"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181045"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="split_vc" proved="true" >
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1.0.0" proved="true">
         <proof prover="2"><result status="valid" time="0.13" steps="35753"/></proof>
         </goal>
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1.0.1" proved="true">
         <proof prover="2"><result status="valid" time="0.25" steps="45620"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hornify" proved="true">
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3682481"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128704"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="30430"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="36817"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.87" steps="106429"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="34256"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="46740"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="37297"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="41884"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="515043"/></proof>
 <proof prover="2"><result status="valid" time="1.65" steps="183921"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="36848"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="39777"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3699636"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163934"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2951384"/></proof>
    <proof prover="2"><result status="valid" time="0.20" steps="40312"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="232"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4350887"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119188"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="21860636"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1313291"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.62" steps="2877"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166990"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="717"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="136159"/></proof>
          <proof prover="4"><result status="valid" time="0.13" steps="717"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4336013"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173612"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4123852"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174336"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.20" steps="40922"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="38145"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4229769"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117470"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4285867"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115962"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4275269"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114059"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3894993"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114077"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4312540"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115531"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="130670"/></proof>
       <proof prover="4"><result status="valid" time="0.12" steps="725"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3737655"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="65468"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="188"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3739516"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="65450"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="188"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3738226"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="66199"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="197"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.21" steps="42027"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="198"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="43879"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="158440"/></proof>
 <proof prover="4"><result status="valid" time="0.29" steps="1832"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="39037"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="44924"/></proof>
 </goal>
</theory>
<theory name="Horn_Logic">
 <goal name="removeFromList_numocc" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1623031"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142663"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2091761"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114970"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="37078"/></proof>
    </goal>
    <goal name="removeFromList_numocc.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="115408"/></proof>
    <proof prover="4"><result status="valid" time="0.07" steps="185"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1767171"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119267"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc_2.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2068282"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119288"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc_2.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="37316"/></proof>
    </goal>
    <goal name="removeFromList_numocc_2.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="120518"/></proof>
    <proof prover="4"><result status="valid" time="0.11" steps="583"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2074166"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125911"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_length.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2268375"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106888"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_length.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_length.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="37447"/></proof>
    </goal>
    <goal name="removeFromList_length.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.86" steps="121850"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="145"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_if_only_if_some" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="38118"/></proof>
 </goal>
 <goal name="findOneSubset_mem_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="38361"/></proof>
 </goal>
 <goal name="findOneSubset_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2567912"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="321446"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_nil.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3256502"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="321324"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_nil.0.0" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="findOneSubset_nil.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="33171"/></proof>
    </goal>
    <goal name="findOneSubset_nil.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131632"/></proof>
    <proof prover="2"><result status="valid" time="0.18" steps="38674"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="95"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_notsubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2622379"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="345083"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_notsubset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2815935"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="342310"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_notsubset.0.0" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="findOneSubset_notsubset.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="33306"/></proof>
    </goal>
    <goal name="findOneSubset_notsubset.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="126162"/></proof>
    <proof prover="2"><result status="valid" time="0.14" steps="36606"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="29"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="if_mem_then_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2281877"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143475"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_mem_then_subset_set_smb.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527211"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121510"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1891228"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="115649"/></proof>
   <proof prover="4"><result status="valid" time="0.66" steps="1404"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="52426"/></proof>
 </goal>
 <goal name="sublist_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2695209"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154908"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_subset_set_smb.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2956947"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130993"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="sublist_subset_set_smb.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="151847"/></proof>
    <proof prover="2"><result status="valid" time="0.20" steps="41884"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="172"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3351264"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="403200"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" proved="true" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.15" steps="39893"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2032201"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108927"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="1073"/></proof>
     <transf name="destruct" proved="true" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.18" steps="40395"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2045246"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107127"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="343"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0" proved="true">
        <transf name="replace" proved="true" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2435544"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="47924"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="360"/></proof>
         <transf name="assert" proved="true" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="172355"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="39564"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="28"/></proof>
          <transf name="destruct" proved="true" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.16" steps="39763"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131765"/></proof>
           <proof prover="2"><result status="valid" time="0.15" steps="37863"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="29"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.24" steps="47481"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.17" steps="39975"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1539885"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117463"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="41359"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="141038"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.16" steps="39529"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.02" steps="38"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="algorithmA_spec&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="141038"/></proof>
   <proof prover="2"><result status="valid" time="0.15" steps="40071"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="38"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="141378"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="39561"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="40"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="40103"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161284"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="37521"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="37582"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.36" steps="59216"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8307372"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149933"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.24" steps="45602"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="47030"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2230377"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114306"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA_spec&#39;vc.4.2.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.38" steps="63244"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.4.2.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2371677"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112214"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA_spec&#39;vc.4.2.1.0" expl="postcondition" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6826496"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="685814"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="eliminate_let" proved="true" >
      <goal name="algorithmA_spec&#39;vc.4.2.1.0.0" expl="postcondition" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7230151"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="645118"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="instantiate" proved="true" arg1="subset_set_smb_clauselist" arg2="clauselist">
       <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0" expl="postcondition" proved="true">
       <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1">
        <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="instantiate" proved="true" arg1="Hinst" arg2="x">
         <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.17" steps="38884"/></proof>
          </goal>
          <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2245661"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124271"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
           <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1.0" expl="postcondition" proved="true">
           <transf name="instantiate" proved="true" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
            <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1.0.0" expl="postcondition" proved="true">
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.23" steps="46841"/></proof>
             </goal>
             <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1.0.0.1" expl="postcondition" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1875644"/></proof>
             <proof prover="2"><result status="valid" time="0.90" steps="99934"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1533075"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119104"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="42637"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="51057"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="41040"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="41072"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8756521"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="945799"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="permutacoes&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="40473"/></proof>
   </goal>
   <goal name="permutacoes&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2453355"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124806"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
    <goal name="permutacoes&#39;vc.4.1.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="permutacoes&#39;vc.4.1.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.21" steps="36932"/></proof>
     </goal>
     <goal name="permutacoes&#39;vc.4.1.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2512228"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121284"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="permutacoes&#39;vc.4.1.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.10" steps="36930"/></proof>
      </goal>
      <goal name="permutacoes&#39;vc.4.1.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2509149"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121276"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="permutacoes&#39;vc.4.1.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.19" steps="40220"/></proof>
       </goal>
       <goal name="permutacoes&#39;vc.4.1.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2302136"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122042"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0" expl="postcondition" proved="true">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8246438"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="797062"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
         <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2086183"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141479"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.10" steps="36988"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2107950"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141468"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.21" steps="36986"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1.1" expl="postcondition" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2125786"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141457"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1.1.0" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.19" steps="40697"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1.1.1" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.27" steps="49911"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="215569"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.37" steps="54489"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="41"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.21" steps="42816"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.1" expl="postcondition" proved="true">
         <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.07" steps="227185"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.30" steps="51391"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="43"/></proof>
         <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
          <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.1.0" expl="postcondition" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.1.0.0" expl="destruct premise" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="7406"/></proof>
           <proof prover="2"><result status="valid" time="0.22" steps="37095"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="40"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.1.0.1" expl="postcondition" proved="true">
           <proof prover="2"><result status="valid" time="0.39" steps="56490"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutacoes&#39;vc.4.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2172955"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112692"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
    <goal name="permutacoes&#39;vc.4.2.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="permutacoes&#39;vc.4.2.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.10" steps="37450"/></proof>
     </goal>
     <goal name="permutacoes&#39;vc.4.2.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2173848"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108533"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="permutacoes&#39;vc.4.2.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.10" steps="37448"/></proof>
      </goal>
      <goal name="permutacoes&#39;vc.4.2.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2192939"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109934"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="permutacoes&#39;vc.4.2.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.19" steps="42193"/></proof>
       </goal>
       <goal name="permutacoes&#39;vc.4.2.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2225128"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109177"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0" expl="postcondition" proved="true">
        <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.07" steps="216176"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.32" steps="53333"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="54"/></proof>
        <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
         <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="218531"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.39" steps="57865"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="61"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.10" steps="37514"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="218534"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="57854"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="61"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.10" steps="37512"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1.1" expl="postcondition" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="218513"/></proof>
           <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="57848"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="55"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1.1.0" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.20" steps="42716"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1.1.1" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.36" steps="59584"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2403779"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105737"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2276097"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120959"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
          <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0" expl="postcondition" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.0" expl="destruct premise" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="7534"/></proof>
           <proof prover="2"><result status="valid" time="0.11" steps="37580"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="44"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1" expl="postcondition" proved="true">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="100702"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1.0" expl="destruct premise" proved="true">
            <proof prover="2"><result status="valid" time="0.10" steps="37578"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1.1" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2405619"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103181"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1.1.0" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.21" steps="43889"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1.1.1" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.25" steps="48863"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1" expl="postcondition" proved="true">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9844075"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="641661"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
          <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0" expl="postcondition" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.0" expl="destruct premise" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="7542"/></proof>
           <proof prover="2"><result status="valid" time="0.11" steps="37609"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="44"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1" expl="postcondition" proved="true">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="102355"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1.0" expl="destruct premise" proved="true">
            <proof prover="2"><result status="valid" time="0.09" steps="37607"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1.1" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2394278"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109538"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1.1.0" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.22" steps="44669"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1.1.1" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.35" steps="57204"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="571807"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123339"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="43053"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="41394"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="41426"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="146834"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="40914"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="monotone_algA&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="146834"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="40914"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
   <transf name="eliminate_let" proved="true" >
    <goal name="monotone_algA&#39;vc.3.0.0" expl="precondition" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="146774"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="40906"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="monotone_algA&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="146774"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.16" steps="40906"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
     <transf name="assert" proved="true" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
      <goal name="monotone_algA&#39;vc.3.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1953337"/></proof>
      <proof prover="2"><result status="valid" time="0.58" steps="84012"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="457"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.3.0.0.0.1" expl="precondition" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="41476"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="monotone_algA&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28" steps="55203"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2121836"/></proof>
  <proof prover="2" timelimit="20" obsolete="true"><result status="timeout" time="20.00" steps="3938080"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="monotone_algA&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="161066"/></proof>
   <proof prover="4"><result status="valid" time="0.06" steps="116"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="144658"/></proof>
   <proof prover="4"><result status="valid" time="0.08" steps="277"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.5.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2050879"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104023"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="monotone_algA&#39;vc.5.2.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2053426"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114906"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
     <goal name="monotone_algA&#39;vc.5.2.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2057372"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104200"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="monotone_algA&#39;vc.5.2.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.10" steps="37761"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.5.2.0.0.1" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.93" steps="106102"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="48453"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="41750"/></proof>
  </goal>
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2831005"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="45220"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="431"/></proof>
  <transf name="case" proved="true" arg1="(cardinal s &gt; 1)">
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3097907"/></proof>
   <proof prover="2"><result status="valid" time="0.28" steps="45912"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="426"/></proof>
   </goal>
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="235601"/></proof>
   <proof prover="2"><result status="valid" time="0.27" steps="47090"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="138"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction_1" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="42664"/></proof>
 <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="subset_of_evalsetconjunction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2487437"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147097"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3094233"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112752"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" proved="true" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="200440"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.56" steps="77489"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="case" proved="true" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="133261"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="38140"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="31"/></proof>
    <transf name="case" proved="true" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.0.0" expl="true case" proved="true">
     <proof prover="2"><result status="valid" time="0.16" steps="38694"/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.0.1" expl="false case (true case)" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="133434"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="38156"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="33"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.0.1.0" expl="false case (true case)" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="134124"/></proof>
      <proof prover="2"><result status="valid" time="0.16" steps="38891"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="33"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case" proved="true">
    <proof prover="2"><result status="valid" time="0.16" steps="38690"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="contr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="39871"/></proof>
 </goal>
 <goal name="distr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="40251"/></proof>
 </goal>
 <goal name="smb_generic" proved="true">
 <proof prover="2"><result status="valid" time="0.46" steps="65636"/></proof>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="50277"/></proof>
 </goal>
 <goal name="not_subset_spec_test" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2297114"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105238"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_test.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2538238"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="not_subset_spec_test.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_test.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.21" steps="42447"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="34"/></proof>
    </goal>
    <goal name="not_subset_spec_test.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="117463"/></proof>
    <proof prover="4"><result status="valid" time="0.05" steps="34"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="44994"/></proof>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="44210"/></proof>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="41127"/></proof>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2905827"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155256"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="148098"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="43046"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="32"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="43175"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.21" steps="43261"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13469707"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1414972"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="41427"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="41230"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="218"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="92934"/></proof>
   <proof prover="4"><result status="valid" time="0.10" steps="218"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="41230"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2520526"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119238"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="41170"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="137"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="44933"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="155"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="111318"/></proof>
   <proof prover="4"><result status="valid" time="0.08" steps="155"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="44933"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_ref" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="41759"/></proof>
 </goal>
 <goal name="permut_trans" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="41877"/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="43752"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="43110"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="48037"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list" proved="true">
 <proof prover="2"><result status="valid" time="0.37" steps="63252"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="49419"/></proof>
 </goal>
 <goal name="permut_cl1_cl2" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="43060"/></proof>
 </goal>
 <goal name="concat_with_element" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="51849"/></proof>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1" proved="true">
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_concat_not_mem_l1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2704402"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106114"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.28" steps="53550"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="49632"/></proof>
 </goal>
 <goal name="removeFromList_permut" proved="true">
 <proof prover="2"><result status="valid" time="0.27" steps="52498"/></proof>
 </goal>
 <goal name="removeFromList_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.56" steps="86993"/></proof>
 </goal>
 <goal name="removeFromList_elem_not_in_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1904065"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="97086"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_elem_not_in_list.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2271066"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123353"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="48107"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761987"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113729"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2040410"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129079"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="32"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="147298"/></proof>
   <proof prover="2"><result status="valid" time="0.22" steps="45331"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="31"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2046302"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="118063"/></proof>
   <proof prover="4"><result status="valid" time="0.06" steps="31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1919519"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117802"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="32"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="45268"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="129325"/></proof>
   <proof prover="4"><result status="valid" time="0.06" steps="31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130893"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1602627"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130238"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="39611"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.16" steps="42653"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="38914"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1600230"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130468"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="40060"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="118293"/></proof>
    <proof prover="4"><result status="valid" time="0.06" steps="38"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="126099"/></proof>
    <proof prover="4"><result status="valid" time="0.06" steps="36"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107490"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="41895"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.24" steps="48120"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.24" steps="48583"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_for_all" proved="true">
 <proof prover="2"><result status="valid" time="0.27" steps="53949"/></proof>
 </goal>
 <goal name="not_subset_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1583527"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="91625"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_general.0" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="160257"/></proof>
  <proof prover="2"><result status="valid" time="0.17" steps="44254"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="113"/></proof>
  </goal>
  <goal name="not_subset_general.1" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127362"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_general.1.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_general.1.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="45609"/></proof>
    </goal>
    <goal name="not_subset_general.1.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1152763"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126696"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="48095"/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1146150"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160715"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="not_subset_spec">
      <goal name="not_subset_general.1.0.1.1.0" proved="true">
      <proof prover="2"><result status="valid" time="0.24" steps="48682"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.21" steps="44934"/></proof>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset" proved="true">
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_0_not_subset&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1858023"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123145"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="113"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.0.0" expl="VC for numOfSubset_0_not_subset" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset_0_not_subset&#39;vc.0.0.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="0.24" steps="47633"/></proof>
    </goal>
    <goal name="numOfSubset_0_not_subset&#39;vc.0.0.1" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="0.29" steps="53753"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1438379"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="130310"/></proof>
  <proof prover="4"><result status="valid" time="0.06" steps="33"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6098713"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="325129"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.2.0" expl="VC for numOfSubset_0_not_subset" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="48854"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="notSubset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="48392"/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_1" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="47962"/></proof>
 </goal>
 <goal name="addSubset_to_numOfSubset" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="50544"/></proof>
 </goal>
 <goal name="removeNumOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1895434"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="93555"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeNumOfSubset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1285951"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109377"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeNumOfSubset.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="124220"/></proof>
   <proof prover="4"><result status="valid" time="0.36" steps="2370"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_clauselist_c_1" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="49769"/></proof>
 </goal>
 <goal name="numOfSubset_1_num_occ" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1738577"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="84233"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1_num_occ.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1578978"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="101742"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1_num_occ.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="130551"/></proof>
   <proof prover="4"><result status="valid" time="0.23" steps="1516"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1568020"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106076"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1667362"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108801"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1137356"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="143647"/></proof>
   <proof prover="4"><result status="valid" time="0.81" steps="2008"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut" proved="true">
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="162336"/></proof>
  <proof prover="2"><result status="valid" time="0.24" steps="47759"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="50417"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.29" steps="53596"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="159411"/></proof>
  <proof prover="2"><result status="valid" time="0.25" steps="49525"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_equality_add" proved="true">
 <proof prover="2"><result status="valid" time="0.42" steps="64576"/></proof>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="396895"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115236"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_basecase&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1318258"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129806"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_basecase&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="176554"/></proof>
     <proof prover="2"><result status="valid" time="0.20" steps="49116"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
     </goal>
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148245"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.19" steps="49127"/></proof>
      </goal>
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1351662"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145667"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1481976"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104749"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="valid" time="0.31" steps="465288"/></proof>
        <proof prover="2"><result status="valid" time="0.21" steps="50763"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="242"/></proof>
        </goal>
        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.0.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.32" steps="48113"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1471679"/></proof>
       <proof prover="2"><result status="valid" time="1.51" steps="211667"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses_inductive_case2&#39;vc" expl="VC for removeTwoClauses_inductive_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1766971"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103347"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_inductive_case2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4334625"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="429173"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="179836"/></proof>
     <proof prover="2"><result status="valid" time="0.20" steps="50542"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="44"/></proof>
     </goal>
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126735"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.20" steps="50553"/></proof>
      </goal>
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1762559"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128039"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1409341"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113154"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="499191"/></proof>
        <proof prover="2"><result status="valid" time="0.32" steps="61052"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.20" steps="49301"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1350713"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="218018"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="506742"/></proof>
        <proof prover="2"><result status="valid" time="0.80" steps="105585"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.49" steps="83635"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses" proved="true">
 <proof prover="2"><result status="valid" time="0.27" steps="56387"/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA" proved="true">
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1925879"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124709"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="removeFromList_algorithmA&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="9490"/></proof>
     <proof prover="2"><result status="valid" time="0.13" steps="48585"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="32"/></proof>
     </goal>
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127588"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.13" steps="48583"/></proof>
      </goal>
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1947446"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127577"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.26" steps="55017"/></proof>
       </goal>
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.29" steps="57327"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="300747"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="153503"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case1" proved="true">
 <proof prover="2"><result status="valid" time="0.40" steps="63982"/></proof>
 </goal>
 <goal name="herbrand_model_case2" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="55418"/></proof>
 </goal>
 <goal name="herbrand_model_case3" proved="true">
 <proof prover="2"><result status="valid" time="0.30" steps="55680"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1741887"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134944"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_sat_clauselist_sat_clause.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1323547"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103516"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="if_sat_clauselist_sat_clause.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1197715"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103366"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="is_satisfiable_clause">
    <goal name="if_sat_clauselist_sat_clause.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1221755"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106081"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
     <goal name="if_sat_clauselist_sat_clause.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.30" steps="58640"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="149217"/></proof>
 <proof prover="4"><result status="valid" time="0.15" steps="390"/></proof>
 </goal>
 <goal name="herbrand_model3" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="879973"/></proof>
 <proof prover="2"><result status="valid" time="0.18" steps="54495"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="is_sat_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2069353"/></proof>
 <proof prover="2"><result status="valid" time="0.24" steps="54666"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_not_empty_setc_clauselist" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="1844647"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="103778"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_not_empty_setc_clauselist.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7181333"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="434332"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_not_empty_setc_clauselist.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.38" steps="68334"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="895154"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104926"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_top_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="173941"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="52509"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="33"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1776587"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133183"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="190391"/></proof>
     <proof prover="2"><result status="valid" time="0.22" steps="56254"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="33"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146626"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.22" steps="56317"/></proof>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1817856"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143007"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="190011"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="55470"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="37"/></proof>
       <transf name="subst" proved="true" arg1="clauselist">
        <goal name="case1_top_imples_p.1.0.0.1.1.0.0" proved="true">
        <transf name="subst" proved="true" arg1="clause">
         <goal name="case1_top_imples_p.1.0.0.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="201009"/></proof>
         <proof prover="2"><result status="valid" time="0.23" steps="58514"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="35"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="case1_top_imples_p.1.0.0.1.1.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2235850"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137253"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case1_top_imples_p.1.0.0.1.1.1.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2127152"/></proof>
        <proof prover="2"><result status="valid" time="0.19" steps="56432"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="case1_top_imples_p.1.0.0.1.1.1.1" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="2088798"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="146503"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2084431"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="141505"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(is_satisfiable_set s)">
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="2264481"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="134995"/></proof>
          <proof prover="4"><result status="valid" time="0.87" steps="2676"/></proof>
          <transf name="assert" proved="true" arg1="(is_satisfiable_rs p)">
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.0.0" expl="asserted formula" proved="true">
           <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="590722"/></proof>
           <proof prover="4" timelimit="5"><result status="valid" time="0.89" steps="2686"/></proof>
           </goal>
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.06" steps="216133"/></proof>
           <proof prover="2"><result status="valid" time="0.27" steps="59918"/></proof>
           <proof prover="4"><result status="valid" time="0.79" steps="2127"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1" proved="true">
          <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5027994"/></proof>
          <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="683465"/></proof>
          <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
          <transf name="assert" proved="true" arg1="(is_satisfiable_rs p)">
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1.0" expl="asserted formula" proved="true">
           <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="552538"/></proof>
           <proof prover="4" timelimit="5"><result status="valid" time="0.87" steps="2722"/></proof>
           </goal>
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1.1" proved="true">
           <proof prover="0"><result status="valid" time="0.07" steps="241010"/></proof>
           <proof prover="2"><result status="valid" time="0.28" steps="63892"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2162473"/></proof>
         <proof prover="2"><result status="valid" time="0.37" steps="67345"/></proof>
         <proof prover="4"><result status="valid" time="0.62" steps="3699"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2465012"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="627264"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_conjuction_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1259253"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117372"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_conjuction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="192219"/></proof>
     <proof prover="2"><result status="valid" time="0.22" steps="56482"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="37"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142779"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.22" steps="56558"/></proof>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1106177"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142548"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="191904"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="56086"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="41"/></proof>
       <transf name="subst" proved="true" arg1="clauselist">
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.0" proved="true">
        <transf name="subst" proved="true" arg1="clause">
         <goal name="case1_conjuction_imples_p.0.0.0.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="203081"/></proof>
         <proof prover="2"><result status="valid" time="0.23" steps="58645"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="39"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1372349"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143303"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1495236"/></proof>
        <proof prover="2"><result status="valid" time="0.20" steps="56668"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="1508375"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="146232"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1.0" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="1525473"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="142276"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(is_satisfiable_set s)">
          <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1.0.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="1925782"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="136315"/></proof>
          <proof prover="4"><result status="valid" time="0.81" steps="2291"/></proof>
          </goal>
          <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1.0.1" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="1531920"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="142690"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" proved="true" arg1="(is_satisfiable_rs p)">
           <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1.0.1.0" expl="asserted formula" proved="true">
           <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="556852"/></proof>
           <proof prover="4" timelimit="5"><result status="valid" time="4.73" steps="5668"/></proof>
           </goal>
           <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1.0.1.1" proved="true">
           <proof prover="0"><result status="valid" time="0.07" steps="248296"/></proof>
           <proof prover="2"><result status="valid" time="0.31" steps="64227"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1.1" proved="true">
         <proof prover="0"><result status="valid" time="0.71" steps="1112425"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="141942"/></proof>
         <proof prover="4"><result status="valid" time="0.23" steps="1071"/></proof>
         <transf name="assert" proved="true" arg1="(is_satisfiable_set s)">
          <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1.1.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="2133337"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="159734"/></proof>
          <proof prover="4"><result status="valid" time="0.24" steps="1226"/></proof>
          </goal>
          <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.1.1.1" proved="true">
          <proof prover="0"><result status="valid" time="0.72" steps="1113454"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="142918"/></proof>
          <proof prover="4"><result status="valid" time="0.23" steps="1091"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="58650"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="58820"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="59030"/></proof>
 </goal>
 <goal name="case2_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.69" steps="99615"/></proof>
 </goal>
 <goal name="sat_clause_sat_set_then_sat_rs">
 <transf name="introduce_premises" >
  <goal name="sat_clause_sat_set_then_sat_rs.0">
  <transf name="induction_arg_ty_lex" arg1="cl">
   <goal name="sat_clause_sat_set_then_sat_rs.0.0">
   <transf name="split_vc" >
    <goal name="sat_clause_sat_set_then_sat_rs.0.0.0" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="117714"/></proof>
    <proof prover="4"><result status="valid" time="0.05" steps="131"/></proof>
    </goal>
    <goal name="sat_clause_sat_set_then_sat_rs.0.0.1">
    <proof prover="0"><result status="timeout" time="1.00" steps="2183551"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="137392"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H2">
     <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="139694"/></proof>
     <proof prover="4"><result status="valid" time="0.05" steps="152"/></proof>
     </goal>
     <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1">
     <proof prover="0"><result status="timeout" time="1.00" steps="2184199"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="140135"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H2">
      <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0">
      <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="6193620"/></proof>
      <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="408836"/></proof>
      <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
      <transf name="assert" arg1="(x3 = (x1,x))">
       <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="valid" time="0.45" steps="75116"/></proof>
       </goal>
       <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.1">
       <proof prover="0"><result status="timeout" time="1.00" steps="2077494"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="138224"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" arg1="(is_satisfiable_clause x3)">
        <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.1.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.30" steps="60186"/></proof>
        </goal>
        <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.1.1">
        <proof prover="0"><result status="timeout" time="1.00" steps="1919226"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="129167"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(is_satisfiable_set x1)">
         <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.1.1.0" expl="asserted formula" proved="true">
         <proof prover="2"><result status="valid" time="0.28" steps="60249"/></proof>
         </goal>
         <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.1.1.1">
         <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4236408"/></proof>
         <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="414756"/></proof>
         <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
         <transf name="assert" arg1="(is_satisfiable_rs x)">
          <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.1.1.1.0" expl="asserted formula">
          <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4288080"/></proof>
          <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="577418"/></proof>
          <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
          <transf name="assert" arg1="(forall f. eval_setconjunction x1 f = top1)">
           <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.1.1.1.0.0" expl="asserted formula">
           <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="3985384"/></proof>
           <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="592256"/></proof>
           <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
           </goal>
           <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.1.1.1.0.1" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.08" steps="263919"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="140625"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.0.1.1.1.1" proved="true">
          <proof prover="2"><result status="valid" time="0.27" steps="59758"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sat_clause_sat_set_then_sat_rs.0.0.1.1.1" proved="true">
      <proof prover="2"><result status="timeout" time="1.00" steps="139457"/></proof>
      <proof prover="4"><result status="valid" time="0.23" steps="1478"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1068876"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107718"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case2_conjunction_imples_p.0" proved="true">
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="10242"/></proof>
     <proof prover="2"><result status="valid" time="0.14" steps="52979"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="34"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146217"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.14" steps="52977"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1886679"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142940"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.22" steps="57857"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1569358"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145412"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.0" proved="true">
        <proof prover="2"><result status="valid" time="0.22" steps="57922"/></proof>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1484378"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181646"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1515177"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168459"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(is_satisfiable_set s)">
          <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1166426"/></proof>
          <proof prover="2"><result status="valid" time="0.66" steps="123157"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.89" steps="2424"/></proof>
          </goal>
          <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1532996"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168582"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" proved="true" arg1="(is_satisfiable_rs p)">
           <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.1.0" expl="asserted formula" proved="true">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6080721"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="627450"/></proof>
           <proof prover="4" timelimit="20" obsolete="true"><result status="timeout" time="20.00"/></proof>
           <transf name="assert" proved="true" arg1="(is_satisfiable_clause (s,p))">
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.1.0.0" expl="asserted formula" proved="true">
            <proof prover="2"><result status="valid" time="0.31" steps="54998"/></proof>
            </goal>
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.1.0.1" expl="asserted formula" proved="true">
            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6626832"/></proof>
            <proof prover="2"><result status="valid" time="0.65" steps="123325"/></proof>
            <proof prover="4" timelimit="20" obsolete="true"><result status="timeout" time="20.00"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.1.1" proved="true">
           <proof prover="2"><result status="valid" time="0.68" steps="125418"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="187292"/></proof>
         <proof prover="4"><result status="valid" time="0.42" steps="2344"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1101506"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122712"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case2_general.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3009360"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="891756"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
   <goal name="case2_general.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="967026"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146096"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="case2_general.0.0.0" expl="destruct premise" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="52521"/></proof>
    </goal>
    <goal name="case2_general.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="966681"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143349"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case2_general.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="52519"/></proof>
     </goal>
     <goal name="case2_general.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="966689"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144100"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case2_general.0.0.1.1.0" proved="true">
      <proof prover="2"><result status="valid" time="0.22" steps="57276"/></proof>
      </goal>
      <goal name="case2_general.0.0.1.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1189163"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148291"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case2_general.0.0.1.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.22" steps="57328"/></proof>
       </goal>
       <goal name="case2_general.0.0.1.1.1.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1318740"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136943"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="case2_general.0.0.1.1.1.1.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1352847"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145557"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" proved="true" arg1="(is_satisfiable_set s)">
         <goal name="case2_general.0.0.1.1.1.1.0.0" expl="asserted formula" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1213768"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="137444"/></proof>
         <proof prover="4"><result status="valid" time="0.83" steps="1885"/></proof>
         </goal>
         <goal name="case2_general.0.0.1.1.1.1.0.1" proved="true">
         <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5011641"/></proof>
         <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="639757"/></proof>
         <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
         <transf name="instantiate" proved="true" arg1="sat_clause_sat_set_then_sat_rs" arg2="clauselist,c">
          <goal name="case2_general.0.0.1.1.1.1.0.1.0" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="case2_general.0.0.1.1.1.1.0.1.0.0" expl="destruct premise" proved="true">
           <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="6260362"/></proof>
           <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="581673"/></proof>
           <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
           <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist">
            <goal name="case2_general.0.0.1.1.1.1.0.1.0.0.0" proved="true">
            <proof prover="0"><result status="timeout" time="1.00" steps="1533508"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="145776"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="unfold" proved="true" arg1="eval_clauselist">
             <goal name="case2_general.0.0.1.1.1.1.0.1.0.0.0.0" proved="true">
             <transf name="subst" proved="true" arg1="clauselist">
              <goal name="case2_general.0.0.1.1.1.1.0.1.0.0.0.0.0" proved="true">
              <transf name="compile_match" proved="true" >
               <goal name="case2_general.0.0.1.1.1.1.0.1.0.0.0.0.0.0" proved="true">
               <proof prover="2"><result status="timeout" time="1.00" steps="129156"/></proof>
               <proof prover="4"><result status="valid" time="0.79" steps="1901"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="case2_general.0.0.1.1.1.1.0.1.0.1" proved="true">
           <proof prover="2"><result status="valid" time="0.44" steps="76291"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case2_general.0.0.1.1.1.1.1" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="143633"/></proof>
        <proof prover="4"><result status="valid" time="0.41" steps="2319"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="60487"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="60467"/></proof>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1385813"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130263"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1587308"/></proof>
  <proof prover="2"><result status="valid" time="0.29" steps="61332"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="587"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="70374"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="690778"/></proof>
  <proof prover="2"><result status="valid" time="0.86" steps="116759"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="189119"/></proof>
  <proof prover="2"><result status="valid" time="0.23" steps="56672"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="54"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="200383"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="58130"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="56"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="200383"/></proof>
   <proof prover="2"><result status="valid" time="0.23" steps="59386"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="56"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="200313"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.23" steps="58138"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="58"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="200313"/></proof>
   <proof prover="2"><result status="valid" time="0.23" steps="59394"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="58"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.6" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="51220"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5531626"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="850161"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="case3_induction_general&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5327577"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="515192"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="destruct" proved="true" arg1="H">
    <goal name="case3_induction_general&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="137010"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="43"/></proof>
    </goal>
    <goal name="case3_induction_general&#39;vc.7.0.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1743582"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118167"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="case3_induction_general&#39;vc.7.0.1.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="119442"/></proof>
     <proof prover="4"><result status="valid" time="0.05" steps="151"/></proof>
     </goal>
     <goal name="case3_induction_general&#39;vc.7.0.1.1" expl="postcondition" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3851591"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="418749"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" proved="true" arg1="H">
      <goal name="case3_induction_general&#39;vc.7.0.1.1.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1708912"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150644"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="eliminate_let" proved="true" >
       <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1677162"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144563"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="H">
        <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0.0" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1684896"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148536"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="H">
         <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1595093"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150993"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="H">
          <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1427531"/></proof>
          <proof prover="2"><result status="valid" time="0.27" steps="62360"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
          </goal>
          <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0.0.0.1" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1427622"/></proof>
          <proof prover="2"><result status="valid" time="0.30" steps="63767"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.68" steps="1789"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction_general&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="53430"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction" proved="true">
 <proof prover="2"><result status="valid" time="0.33" steps="64926"/></proof>
 </goal>
 <goal name="unsat_then_bot" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1640403"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132842"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="unsat_then_bot.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6093686"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="689709"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="unfold" proved="true" arg1="eval_rightside" arg2="in" arg3="H">
   <goal name="unsat_then_bot.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1633249"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128883"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="H" arg2="val_all_top">
    <goal name="unsat_then_bot.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1990150"/></proof>
    <proof prover="2"><result status="valid" time="0.84" steps="125403"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_unsat_then_p_is_bot" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1853749"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106392"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_unsat_then_p_is_bot.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2132657"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137627"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_unsatisfiable_clause" arg2="in" arg3="H">
   <goal name="is_unsat_then_p_is_bot.0.0" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6100905"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="641814"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="unfold" proved="true" arg1="eval_clause" arg2="in" arg3="H">
    <goal name="is_unsat_then_p_is_bot.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.32" steps="61194"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_clauselist_then_exists_one_clause_unsat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1642293"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119708"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="unsat_clauselist_then_exists_one_clause_unsat.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1640623"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120514"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1822398"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129233"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.0" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="1826907"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="133781"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="unfold" proved="true" arg1="is_unsatisfiable_clauselist" arg2="in" arg3="H">
     <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.0.0" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="1812766"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="114290"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="eval_clauselist" arg2="in" arg3="H">
      <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.0.0.0" proved="true">
      <proof prover="0"><result status="valid" time="0.03" steps="54507"/></proof>
      <proof prover="2"><result status="valid" time="0.14" steps="53917"/></proof>
      <proof prover="4"><result status="valid" time="0.03" steps="24"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="473743"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="136892"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(is_unsatisfiable_clauselist x)">
     <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.0" expl="true case" proved="true">
     <proof prover="0"><result status="valid" time="0.33" steps="501348"/></proof>
     <proof prover="2"><result status="valid" time="0.31" steps="62109"/></proof>
     <proof prover="4"><result status="valid" time="0.09" steps="512"/></proof>
     </goal>
     <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1" expl="false case" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="135057"/></proof>
     <transf name="destruct_term" proved="true" arg1="x1">
      <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0" expl="false case" proved="true">
      <transf name="exists" proved="true" arg1="x2">
       <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0" proved="true">
       <transf name="exists" proved="true" arg1="x1">
        <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0" proved="true">
        <proof prover="0"><result status="timeout" time="1.00" steps="472917"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="123808"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="split_vc" proved="true" >
         <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.0" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="1837272"/></proof>
         <proof prover="2"><result status="valid" time="0.76" steps="91257"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="unfold" proved="true" arg1="is_unsatisfiable_clauselist" arg2="in" arg3="H">
          <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.0.0" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="1931128"/></proof>
          <proof prover="2"><result status="valid" time="0.46" steps="71432"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="unfold" proved="true" arg1="eval_clauselist" arg2="in" arg3="H">
           <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.0.0.0" proved="true">
           <proof prover="0"><result status="valid" time="0.05" steps="197324"/></proof>
           <proof prover="2"><result status="valid" time="0.30" steps="60055"/></proof>
           <proof prover="4"><result status="valid" time="0.56" steps="764"/></proof>
           <transf name="compile_match" proved="true" >
            <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.0.0.0.0" proved="true">
            <proof prover="0"><result status="valid" time="0.06" steps="196756"/></proof>
            <proof prover="2"><result status="valid" time="0.30" steps="60055"/></proof>
            <proof prover="4"><result status="valid" time="0.56" steps="764"/></proof>
            <transf name="unfold" proved="true" arg1="is_unsatisfiable_clause">
             <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.0.0.0.0.0" proved="true">
             <proof prover="0"><result status="valid" time="0.05" steps="189376"/></proof>
             <proof prover="2"><result status="valid" time="0.27" steps="57719"/></proof>
             <proof prover="4"><result status="valid" time="0.04" steps="96"/></proof>
             <transf name="assert" proved="true" arg1="(exists f. eval_clauselist x f = top1)">
              <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="2"><result status="valid" time="0.29" steps="58942"/></proof>
              </goal>
              <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.0.0.0.0.0.1" proved="true">
              <proof prover="0" timelimit="5"><result status="valid" time="0.05" steps="189982"/></proof>
              <proof prover="2" timelimit="5"><result status="valid" time="0.22" steps="56038"/></proof>
              <proof prover="4" timelimit="5"><result status="valid" time="0.04" steps="102"/></proof>
              <transf name="assert" proved="true" arg1="((forall f. eval_clause (x2, x1) f = bot1) || (forall f. eval_clauselist x f = bot1))">
               <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
               <proof prover="0" timelimit="5"><result status="valid" time="0.05" steps="190898"/></proof>
               <proof prover="2"><result status="valid" time="0.22" steps="56139"/></proof>
               <proof prover="4" timelimit="5"><result status="valid" time="0.04" steps="105"/></proof>
               </goal>
               <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.0.0.0.0.0.1.1" proved="true">
               <proof prover="2"><result status="valid" time="0.21" steps="55985"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0.1.1.0.0.0.1" proved="true">
         <proof prover="2"><result status="valid" time="0.22" steps="59056"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_clauselist_then_exists_one_clause_unsat.1" proved="true">
  <proof prover="2"><result status="valid" time="0.42" steps="69661"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subset1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1958599"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144932"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1723700"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="110087"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_clause_then_subset_s" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1383184"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144810"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="unsat_clause_then_subset_s.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1676440"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121616"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="subset1" arg2="cl,c,s,p">
   <goal name="unsat_clause_then_subset_s.0.0" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="unsat_clause_then_subset_s.0.0.0" expl="destruct premise" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1330872"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122792"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="unfold" proved="true" arg1="is_unsatisfiable_clause" arg2="in" arg3="H3">
     <goal name="unsat_clause_then_subset_s.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5541822"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="517154"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="unfold" proved="true" arg1="eval_clause" arg2="in" arg3="H3">
      <goal name="unsat_clause_then_subset_s.0.0.0.0.0" expl="destruct premise" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="unsat_clause_then_subset_s.0.0.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="0"><result status="valid" time="0.10" steps="299931"/></proof>
       <proof prover="2"><result status="timeout" time="2.00" steps="196037"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="unsat_clause_then_subset_s.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="52918"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_induction_general&#39;vc" expl="VC for unsat_induction_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="852931"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="169760"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="unsat_induction_general&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="52109"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7872760"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="445192"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="instantiate" proved="true" arg1="unsat_clause_then_subset_s" arg2="clauselist,c">
   <goal name="unsat_induction_general&#39;vc.1.0" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1,x">
    <goal name="unsat_induction_general&#39;vc.1.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="2406779"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="130079"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="unsat_induction_general&#39;vc.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.34" steps="65744"/></proof>
     </goal>
     <goal name="unsat_induction_general&#39;vc.1.0.0.1" expl="assertion" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="2407336"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="131741"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="unsat_induction_general&#39;vc.1.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.06" steps="225114"/></proof>
      <proof prover="2"><result status="valid" time="0.30" steps="61664"/></proof>
      <proof prover="4"><result status="valid" time="0.04" steps="43"/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.1.0.0.1.1" expl="assertion" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="2336900"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="135009"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.0" expl="destruct premise" proved="true">
       <proof prover="2"><result status="valid" time="0.15" steps="54442"/></proof>
       </goal>
       <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1" expl="assertion" proved="true">
       <proof prover="0"><result status="timeout" time="1.00" steps="2338334"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="134400"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
        <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1.0" expl="assertion" proved="true">
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1.0.0" expl="destruct premise" proved="true">
         <proof prover="2"><result status="valid" time="0.14" steps="54453"/></proof>
         </goal>
         <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1.0.1" expl="assertion" proved="true">
         <proof prover="0"><result status="timeout" time="1.00" steps="2369891"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="136159"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1.0.1.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.14" steps="54454"/></proof>
          </goal>
          <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1.0.1.1" expl="assertion" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="2305568"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="135808"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1.0.1.1.0" expl="assertion" proved="true">
           <proof prover="2"><result status="valid" time="0.14" steps="53244"/></proof>
           </goal>
           <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1.0.1.1.1" expl="assertion" proved="true">
           <proof prover="0"><result status="timeout" time="1.00" steps="2297545"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="139336"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1.0.1.1.1.0" expl="assertion" proved="true">
            <proof prover="2"><result status="valid" time="0.22" steps="58386"/></proof>
            </goal>
            <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1.0.1.1.1.1" expl="assertion" proved="true">
            <proof prover="2"><result status="valid" time="0.79" steps="129740"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="398000"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="134550"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.3" expl="unreachable point" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2791351"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="113459"/></proof>
  <proof prover="4"><result status="valid" time="0.66" steps="1281"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.30" steps="719884"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="60782"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="578"/></proof>
  <transf name="assert" proved="true" arg1="(x &lt;&gt; RProp bot1)">
   <goal name="unsat_induction_general&#39;vc.4.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="57917"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.30" steps="719983"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="60767"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="589"/></proof>
   <transf name="assert" proved="true" arg1="(exists y1 y2. mem1 (y1,y2) clauselist /\ is_unsatisfiable_clause (y1,y2))">
    <goal name="unsat_induction_general&#39;vc.4.1.0" expl="asserted formula" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="207134"/></proof>
    <proof prover="2"><result status="valid" time="0.29" steps="62022"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.07" steps="195"/></proof>
    </goal>
    <goal name="unsat_induction_general&#39;vc.4.1.1" expl="variant decrease" proved="true">
    <proof prover="2"><result status="valid" time="0.31" steps="63967"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="71581"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1339420"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120212"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="(exists x p. is_unsatisfiable_clause (x,p) /\ mem1 (x,p) clauselist)">
   <goal name="unsat_induction_general&#39;vc.6.0" expl="asserted formula" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="208046"/></proof>
   <proof prover="2"><result status="valid" time="0.30" steps="62568"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="203"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1235410"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150259"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="introduce_exists" proved="true" >
    <goal name="unsat_induction_general&#39;vc.6.1.0" expl="precondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1281516"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126418"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="h">
     <goal name="unsat_induction_general&#39;vc.6.1.0.0" expl="precondition" proved="true">
     <transf name="assert" proved="true" arg1="(is_satisfiable_clause (x2,x1))">
      <goal name="unsat_induction_general&#39;vc.6.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="1286246"/></proof>
      <proof prover="2" timelimit="5"><result status="valid" time="3.52" steps="474575"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.6.1.0.0.1" expl="precondition" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="1243475"/></proof>
      <proof prover="2" timelimit="5"><result status="valid" time="2.46" steps="304738"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="57666"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="203742"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="58704"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="56"/></proof>
  <transf name="case" proved="true" arg1="(x1 ==&#39; (singleton ATop))">
   <goal name="unsat_induction_general&#39;vc.8.0" expl="true case (precondition)" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="60388"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="58"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.8.1" expl="false case (precondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="204733"/></proof>
   <proof prover="2"><result status="valid" time="0.23" steps="60394"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="58"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="60374"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="219480"/></proof>
  <proof prover="2"><result status="valid" time="0.36" steps="70286"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="233"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121632"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="unsat_induction_general&#39;vc.11.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1092557"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132436"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist, c">
    <goal name="unsat_induction_general&#39;vc.11.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1095760"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142791"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="unsat_induction_general&#39;vc.11.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.13" steps="54327"/></proof>
     </goal>
     <goal name="unsat_induction_general&#39;vc.11.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1095319"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143672"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="unsat_induction_general&#39;vc.11.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.14" steps="54325"/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.11.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1095147"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148228"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="unsat_induction_general&#39;vc.11.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.13" steps="54355"/></proof>
       </goal>
       <goal name="unsat_induction_general&#39;vc.11.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1233960"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149138"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="unsat_induction_general&#39;vc.11.0.0.1.1.1.0" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.30" steps="65971"/></proof>
        </goal>
        <goal name="unsat_induction_general&#39;vc.11.0.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="182540"/></proof>
        <proof prover="4"><result status="valid" time="0.16" steps="1099"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="unsat_induction_general&#39;vc.11.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1958712"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150176"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="unsat_induction_general&#39;vc.11.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1987519"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161604"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist, c">
     <goal name="unsat_induction_general&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1914012"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147760"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="unsat_induction_general&#39;vc.11.1.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.14" steps="54804"/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.11.1.0.0.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2019673"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144585"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="unsat_induction_general&#39;vc.11.1.0.0.1.0" expl="destruct premise" proved="true">
       <proof prover="2"><result status="valid" time="0.14" steps="54802"/></proof>
       </goal>
       <goal name="unsat_induction_general&#39;vc.11.1.0.0.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027473"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147370"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="unsat_induction_general&#39;vc.11.1.0.0.1.1.0" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.14" steps="54832"/></proof>
        </goal>
        <goal name="unsat_induction_general&#39;vc.11.1.0.0.1.1.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1911702"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="70370"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.20" steps="1313"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="unsat_induction_general&#39;vc.11.1.0.0.1.1.1.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.34" steps="67511"/></proof>
         </goal>
         <goal name="unsat_induction_general&#39;vc.11.1.0.0.1.1.1.1" expl="postcondition" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="206551"/></proof>
         <proof prover="4"><result status="valid" time="0.06" steps="246"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_induction" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="139108"/></proof>
 <proof prover="4"><result status="valid" time="0.17" steps="919"/></proof>
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="60105"/></proof>
 </goal>
 <goal name="horn_sat_soundness" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2148638"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123127"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="horn_sat_soundness.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2133092"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128311"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" proved="true" arg1="clauselist">
   <goal name="horn_sat_soundness.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="238775"/></proof>
   <proof prover="2"><result status="valid" time="0.35" steps="65616"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="horn_sat_soundness.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2152172"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113422"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="((horn_logic clauselist = True) -&gt; (not mem ABot (algorithmA_spec clauselist (singleton ATop))))">
    <goal name="horn_sat_soundness.0.1.0" expl="asserted formula" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="199298"/></proof>
    <proof prover="2"><result status="valid" time="0.24" steps="60082"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="36"/></proof>
    </goal>
    <goal name="horn_sat_soundness.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2142144"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121674"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="h">
     <goal name="horn_sat_soundness.0.1.1.0" expl="destruct premise" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="2159457"/></proof>
     <proof prover="2" timelimit="5"><result status="valid" time="4.55" steps="615010"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="horn_sat_soundness.0.1.1.1" proved="true">
     <proof prover="2"><result status="valid" time="0.22" steps="57505"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn_unsat_soundness" proved="true">
 <proof prover="2"><result status="valid" time="0.34" steps="62557"/></proof>
 </goal>
 <goal name="not_unsat_set_sat_set" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="58201"/></proof>
 </goal>
 <goal name="not_unsat_clause_sat_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2114290"/></proof>
 <proof prover="2"><result status="valid" time="0.30" steps="59798"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="not_unsat_sat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2134295"/></proof>
 <proof prover="2"><result status="valid" time="0.31" steps="59865"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="not_sat_unsat" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="57774"/></proof>
 </goal>
 <goal name="horn_sat_completeness" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="59483"/></proof>
 </goal>
 <goal name="horn_unsat_completeness" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="59582"/></proof>
 </goal>
</theory>
<theory name="Horn" proved="true">
 <goal name="length_equal_listset_to_list_fset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3665476"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="227829"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="length_equal_listset_to_list_fset.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="cl">
   <goal name="length_equal_listset_to_list_fset.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="127534"/></proof>
   <proof prover="4"><result status="valid" time="0.23" steps="591"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_prog&#39;vc" expl="VC for removeFromList_prog" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2344047"/></proof>
 <proof prover="2"><result status="valid" time="0.67" steps="107198"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1909438"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146393"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="64825"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.0.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.0.0.0" expl="variant decrease" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2266318"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.0.0.0.0" expl="variant decrease" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.16" steps="268742"/></proof>
     <proof prover="2"><result status="valid" time="0.31" steps="68191"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1910792"/></proof>
   <proof prover="2"><result status="valid" time="0.38" steps="71990"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2094926"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141213"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4724996"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="447139"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.1.0.0" expl="precondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2005174"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114777"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.1.0.0.0" expl="precondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1596697"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119869"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
      <goal name="algorithmA&#39;vc.1.0.0.0.0" expl="precondition" proved="true">
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="(to_fset c)">
       <goal name="algorithmA&#39;vc.1.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1606376"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131960"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="algorithmA&#39;vc.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1607868"/></proof>
        <proof prover="2"><result status="valid" time="0.14" steps="58441"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.1.0.0.0.0.0.1" expl="precondition" proved="true">
        <proof prover="2"><result status="valid" time="0.24" steps="64823"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401492"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146149"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5180706"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="416618"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="assert" proved="true" arg1="(length (listset_to_listfset o) &lt; length (listset_to_listfset clauselist))">
    <goal name="algorithmA&#39;vc.2.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="121299"/></proof>
    <proof prover="4"><result status="valid" time="0.13" steps="460"/></proof>
    </goal>
    <goal name="algorithmA&#39;vc.2.0.1" expl="precondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4655795"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="650039"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" proved="true" arg1="(length (listset_to_listfset o) = length o)">
     <goal name="algorithmA&#39;vc.2.0.1.0" expl="asserted formula" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2215796"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137990"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" proved="true" arg1="(length (listset_to_listfset clauselist) = length clauselist)">
      <goal name="algorithmA&#39;vc.2.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.23" steps="62224"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.2.0.1.0.1" expl="asserted formula" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2448998"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158622"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
       <goal name="algorithmA&#39;vc.2.0.1.0.1.0" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4920176"/></proof>
       <proof prover="2"><result status="valid" time="0.26" steps="70243"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.2.0.1.1" expl="precondition" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4823108"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="277327"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="induction_arg_ty_lex" proved="true" arg1="o">
      <goal name="algorithmA&#39;vc.2.0.1.1.0" expl="VC for algorithmA" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1147276"/></proof>
      <proof prover="2"><result status="valid" time="0.26" steps="71990"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761229"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139206"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2250084"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134419"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.3.0.0" expl="precondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2061764"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111579"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <proof prover="2"><result status="valid" time="0.32" steps="69466"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="195"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1717222"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149528"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="61403"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2344556"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140747"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.23" steps="61506"/></proof>
    </goal>
    <goal name="algorithmA&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2352279"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130093"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.4.1.1.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.38" steps="73448"/></proof>
     </goal>
     <goal name="algorithmA&#39;vc.4.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.07" steps="261152"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="131903"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138125"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134305"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2230152"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="65005"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2238343"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137289"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.29" steps="63331"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2088011"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138834"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.5.1.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5169960"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="569973"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
     <goal name="algorithmA&#39;vc.5.1.0.0" expl="VC for algorithmA" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="140103"/></proof>
     <proof prover="4"><result status="valid" time="0.16" steps="946"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.5.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2088215"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137967"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
     <goal name="algorithmA&#39;vc.5.1.1.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(to_fset c)">
      <goal name="algorithmA&#39;vc.5.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2203640"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142243"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.1.1.0.0.0" expl="destruct premise" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2060711"/></proof>
       <proof prover="2"><result status="valid" time="0.14" steps="58669"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="algorithmA&#39;vc.5.1.1.0.0.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2011284"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119138"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="algorithmA&#39;vc.5.1.1.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.14" steps="58667"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2045214"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116760"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="244652"/></proof>
         <proof prover="2"><result status="valid" time="0.40" steps="77831"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="199"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1.1" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.47" steps="86168"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn" proved="true">
 <proof prover="2"><result status="valid" time="0.32" steps="68229"/></proof>
 </goal>
</theory>
</file>
</why3session>
