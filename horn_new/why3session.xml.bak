<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="horn_new.mlw"/>
<theory name="Converts">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF">
 <proof prover="2"><result status="valid" time="0.15" steps="28251"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF">
 <proof prover="2"><result status="valid" time="0.13" steps="27394"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL">
 <proof prover="2"><result status="valid" time="0.13" steps="28065"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS">
 <proof prover="2"><result status="valid" time="0.14" steps="28030"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation">
 <proof prover="2"><result status="valid" time="0.10" steps="26200"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" >
  <goal name="convertAFtoPL_evaluation.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="PLtoAF_AFtoPL.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0">
   <transf name="compile_match" >
    <goal name="PLtoAF_AFtoPL.0.0.0">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0">
     <proof prover="2"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1">
     <proof prover="2"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2">
     <proof prover="2"><result status="valid" time="0.06" steps="23704"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="RStoAF_AFtoRS.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0">
   <proof prover="2"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="AFtoRS_RStoAF.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0">
    <proof prover="2"><result status="valid" time="0.13" steps="27620"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1">
    <proof prover="2"><result status="valid" time="0.10" steps="26550"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_setconjunction_singleton">
 <proof prover="0"><result status="valid" time="0.04" steps="123773"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="126755"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="527443"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145478"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition">
  <proof prover="2"><result status="valid" time="0.14" steps="32465"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.19" steps="41497"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.18" steps="37738"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval">
 <proof prover="2"><result status="valid" time="0.18" steps="35969"/></proof>
 </goal>
 <goal name="if_unsat_then_not_sat">
 <proof prover="2"><result status="valid" time="0.14" steps="34051"/></proof>
 </goal>
 <goal name="top_is_satisfiable">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6573933"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2249636"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="top_is_satisfiable.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2469543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="379235"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0">
   <transf name="exists" arg1="(val_all_top)">
    <goal name="top_is_satisfiable.0.0.0">
    <proof prover="2"><result status="valid" time="0.11" steps="33348"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable">
 <proof prover="2"><result status="valid" time="0.15" steps="34558"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom">
 <proof prover="2"><result status="valid" time="0.12" steps="33094"/></proof>
 </goal>
 <goal name="eval_union&#39;vc" expl="VC for eval_union">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_union&#39;vc.0" expl="precondition">
  <proof prover="2"><result status="valid" time="0.07" steps="30319"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.11" steps="36891"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion">
  <proof prover="2"><result status="valid" time="0.35" steps="67436"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion">
  <proof prover="2"><result status="valid" time="0.15" steps="34168"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.24" steps="44392"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty">
 <proof prover="2"><result status="valid" time="0.17" steps="37470"/></proof>
 </goal>
 <goal name="union_eval_samesingleton">
 <proof prover="2"><result status="valid" time="0.20" steps="40715"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton">
 <proof prover="2"><result status="valid" time="0.70" steps="91771"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF">
 <proof prover="2"><result status="valid" time="0.13" steps="36784"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma">
 <proof prover="2"><result status="valid" time="0.17" steps="39994"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1">
  <transf name="unfold" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1">
   <transf name="destruct_term" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2"><result status="valid" time="0.18" steps="40180"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2150181"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186545"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1">
     <transf name="compile_match" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1">
      <transf name="instantiate" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
       <transf name="destruct" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2617438"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1618350"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.60" steps="2996"/></proof>
        <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219067"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="785"/></proof>
         <transf name="compile_match" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise">
          <proof prover="2"><result status="timeout" time="1.00" steps="216810"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="793"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2574935"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276417"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1">
         <transf name="destruct" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2487193"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276394"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
           <proof prover="2"><result status="valid" time="0.20" steps="40937"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
           <proof prover="2"><result status="valid" time="0.18" steps="38584"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338455"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="408052"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <transf name="split_vc" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472376"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149065"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2468665"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149903"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition">
       <proof prover="2"><result status="timeout" time="1.00" steps="169590"/></proof>
       <proof prover="4"><result status="valid" time="0.13" steps="801"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition">
       <proof prover="2"><result status="valid" time="0.19" steps="41238"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="793"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset">
 <proof prover="2"><result status="valid" time="0.20" steps="43747"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent">
 <proof prover="2"><result status="timeout" time="1.00" steps="164998"/></proof>
 <proof prover="4"><result status="valid" time="0.30" steps="1947"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="2"><result status="valid" time="0.16" steps="39162"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList">
 <proof prover="2"><result status="valid" time="0.18" steps="45093"/></proof>
 </goal>
 <goal name="listset_to_listfset_distr">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401631"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310305"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="listset_to_listfset_distr.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" arg1="left">
   <goal name="listset_to_listfset_distr.0.0">
   <transf name="split_vc" >
    <goal name="listset_to_listfset_distr.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" >
     <goal name="listset_to_listfset_distr.0.0.0.0">
     <proof prover="2"><result status="valid" time="0.24" steps="44293"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="listset_to_listfset_distr.0.0.1">
    <proof prover="2"><result status="timeout" time="1.00" steps="205219"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="140"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2592517"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111099"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_numocc.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2247870"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122237"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0">
   <transf name="split_vc" >
    <goal name="removeFromList_numocc.0.0.0">
    <proof prover="2"><result status="valid" time="0.17" steps="40416"/></proof>
    </goal>
    <goal name="removeFromList_numocc.0.0.1">
    <proof prover="2"><result status="timeout" time="1.00" steps="122433"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="254"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2416889"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145646"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_numocc_2.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0">
   <transf name="split_vc" >
    <goal name="removeFromList_numocc_2.0.0.0">
    <proof prover="2"><result status="valid" time="0.17" steps="40654"/></proof>
    </goal>
    <goal name="removeFromList_numocc_2.0.0.1">
    <proof prover="2"><result status="timeout" time="1.00" steps="120900"/></proof>
    <proof prover="4"><result status="valid" time="0.10" steps="709"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2105040"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118867"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_length.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2159512"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114480"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" arg1="(clauselist = Nil)">
   <goal name="removeFromList_length.0.0" expl="true case">
   <proof prover="2"><result status="valid" time="0.22" steps="41211"/></proof>
   </goal>
   <goal name="removeFromList_length.0.1" expl="false case">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160427"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117680"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="removeFromList_length.0.1.0">
    <transf name="split_vc" >
     <goal name="removeFromList_length.0.1.0.0" expl="false case">
     <proof prover="2"><result status="valid" time="0.11" steps="37151"/></proof>
     </goal>
     <goal name="removeFromList_length.0.1.0.1" expl="false case">
     <proof prover="2"><result status="valid" time="0.28" steps="55916"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="667"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_mem_subset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3422201"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191388"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="findOneSubset_mem_subset.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3823428"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="39716"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="findOneSubset_mem_subset.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3759059"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="41930"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="G">
 <proof prover="0"><result status="timeout" time="1.00" steps="3442140"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="227371"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="if_mem_then_subset_set_smb">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2876564"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137385"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="if_mem_then_subset_set_smb.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1641680"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134631"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0">
   <proof prover="2"><result status="timeout" time="1.00" steps="113784"/></proof>
   <proof prover="4"><result status="valid" time="0.78" steps="1545"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955177"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166640"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset_set_smb_clauselist.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="subset_set_smb_clauselist.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="654319"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168986"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="subset_set_smb_clauselist.0.0.0">
    <proof prover="2"><result status="valid" time="0.19" steps="48030"/></proof>
    </goal>
    <goal name="subset_set_smb_clauselist.0.0.1">
    <proof prover="2"><result status="valid" time="0.78" steps="92751"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="610"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_subset_set_smb">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2656112"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180051"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sublist_subset_set_smb.0">
  <transf name="induction_arg_ty_lex" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0">
   <transf name="split_vc" >
    <goal name="sublist_subset_set_smb.0.0.0">
    <proof prover="2"><result status="valid" time="0.19" steps="46096"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761004"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula">
     <proof prover="2"><result status="valid" time="0.14" steps="42901"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1707639"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172719"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise">
      <proof prover="2"><result status="valid" time="0.20" steps="44016"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816447"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177277"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0">
       <transf name="subst" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0">
        <transf name="replace" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2102707"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131239"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2434241"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118676"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise">
           <proof prover="2"><result status="valid" time="0.27" steps="42751"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038971"/></proof>
           <proof prover="2"><result status="valid" time="0.25" steps="40814"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1">
          <proof prover="2"><result status="valid" time="0.25" steps="53224"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis">
         <proof prover="2"><result status="valid" time="0.14" steps="42747"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3752049"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="253838"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3451143"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180880"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.0.0" expl="variant decrease">
   <proof prover="2"><result status="valid" time="0.17" steps="43488"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.0.1" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955214"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125730"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="findOneSubset_def" arg2="clauselist, c">
    <goal name="algorithmA_spec&#39;vc.0.1.0" expl="variant decrease">
    <transf name="destruct" arg1="Hinst">
     <goal name="algorithmA_spec&#39;vc.0.1.0.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.13" steps="40141"/></proof>
     </goal>
     <goal name="algorithmA_spec&#39;vc.0.1.0.1" expl="variant decrease">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2869379"/></proof>
     <proof prover="2"><result status="valid" time="0.19" steps="44515"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.16" steps="42691"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3216326"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="184752"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2"><result status="valid" time="0.13" steps="40502"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2"><result status="valid" time="0.15" steps="40563"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.2.2" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.35" steps="62187"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9028784"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="706422"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.26" steps="49402"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2141317"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191752"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" arg1="H">
    <goal name="algorithmA_spec&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2312908"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145876"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" >
     <goal name="algorithmA_spec&#39;vc.3.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2341736"/></proof>
     <proof prover="2"><result status="valid" time="0.24" steps="51373"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA_spec&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2150058"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177498"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="algorithmA_spec&#39;vc.3.1.1.0" expl="postcondition">
     <transf name="eliminate_let" >
      <goal name="algorithmA_spec&#39;vc.3.1.1.0.0" expl="postcondition">
      <transf name="destruct" arg1="H">
       <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373026"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122044"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="H">
        <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2349088"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122031"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="subset_set_smb_clauselist" arg2="clauselist">
         <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="Hinst" arg2="x1">
          <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="x">
           <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0.0.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2276194"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155986"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0.0.0.0.0" expl="destruct premise">
            <proof prover="0" obsolete="true"><result status="valid" time="0.15" steps="397488"/></proof>
            <proof prover="2"><result status="valid" time="0.22" steps="46064"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="187"/></proof>
            </goal>
            <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0.0.0.0.1" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2395664"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134547"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" arg1="(subset (singleton (convertRStoAF x) ) (set_smb_clauselist clauselist))">
             <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0.0.0.0.1.0" expl="asserted formula">
             <proof prover="2"><result status="valid" time="0.26" steps="49888"/></proof>
             </goal>
             <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0.0.0.0.1.1" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2225458"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145980"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" arg1="sublist_subset_set_smb" arg2="clauselist">
              <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0.0.0.0.1.1.0" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2265814"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129006"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="instantiate" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
               <goal name="algorithmA_spec&#39;vc.3.1.1.0.0.0.0.0.0.0.1.1.0.0" expl="postcondition">
               <proof prover="2"><result status="valid" time="0.83" steps="119828"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3460135"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113302"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.19" steps="45393"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.26" steps="55958"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="valid" time="0.15" steps="43508"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12555206"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="921624"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="permutacoes&#39;vc.3.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.19" steps="43608"/></proof>
   </goal>
   <goal name="permutacoes&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2498921"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154538"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" arg1="H">
    <goal name="permutacoes&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502662"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152666"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" >
     <goal name="permutacoes&#39;vc.3.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2922605"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H">
      <goal name="permutacoes&#39;vc.3.1.0.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3018729"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154599"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
       <goal name="permutacoes&#39;vc.3.1.0.0.0.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2915737"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150442"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="permutacoes&#39;vc.3.1.0.0.0.0.0" expl="destruct premise">
        <proof prover="2"><result status="valid" time="0.09" steps="39527"/></proof>
        </goal>
        <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2942766"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154440"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.0" expl="postcondition">
         <proof prover="2"><result status="valid" time="0.20" steps="43303"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2881375"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148907"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2369015"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153800"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(algorithmA_spec clauselist2 c ==&#39; c)">
           <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2459545"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152802"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0" expl="asserted formula">
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0" expl="destruct premise">
             <proof prover="2"><result status="valid" time="0.09" steps="39583"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1" expl="asserted formula">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2444518"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154500"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.0" expl="asserted formula">
              <proof prover="2"><result status="valid" time="0.20" steps="43910"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.1" expl="asserted formula">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2207896"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171408"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.1.0" expl="asserted formula">
               <proof prover="2"><result status="valid" time="0.20" steps="44342"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.1.1" expl="asserted formula">
               <proof prover="2"><result status="timeout" time="1.00" steps="101564"/></proof>
               <proof prover="4"><result status="valid" time="0.06" steps="663"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.1" expl="postcondition">
           <proof prover="2"><result status="valid" time="0.14" steps="40913"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.1" expl="postcondition">
          <proof prover="2"><result status="timeout" time="1.00" steps="135666"/></proof>
          <proof prover="4"><result status="valid" time="0.03" steps="53"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permutacoes&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2353781"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154193"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="permutacoes&#39;vc.3.1.1.0" expl="postcondition">
     <transf name="eliminate_let" >
      <goal name="permutacoes&#39;vc.3.1.1.0.0" expl="postcondition">
      <transf name="destruct" arg1="H">
       <goal name="permutacoes&#39;vc.3.1.1.0.0.0" expl="postcondition">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9100191"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="395440"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="instantiate" arg1="findOneSubset_exists" arg2="clauselist2,c">
        <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2366600"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116560"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.0" expl="destruct premise">
         <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="177447"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.23" steps="45123"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="171"/></proof>
         <transf name="assert" arg1="(not is_nil clauselist)">
          <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.0.0" expl="asserted formula">
          <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="146945"/></proof>
          <proof prover="2"><result status="valid" time="0.15" steps="41095"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.0.1" expl="destruct premise">
          <proof prover="2"><result status="valid" time="0.22" steps="45603"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373420"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="97271"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" arg1="Hinst" arg2="x1,x">
          <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.1.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2249624"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111090"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.1.0.0" expl="destruct premise">
           <proof prover="2"><result status="valid" time="0.22" steps="47913"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.1.0.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2262654"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115301"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.1.0.1.0" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2398409"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104631"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.1.0.1.0.0" expl="destruct premise">
             <proof prover="2"><result status="valid" time="0.10" steps="39998"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.1.0.1.0.1" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421317"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104610"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.1.0.1.0.1.0" expl="postcondition">
              <proof prover="2"><result status="valid" time="0.21" steps="45598"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.3.1.1.0.0.0.0.1.0.1.0.1.1" expl="postcondition">
              <proof prover="2"><result status="valid" time="0.20" steps="46442"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3146240"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114050"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.21" steps="47010"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.15" steps="43813"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="valid" time="0.25" steps="56248"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2369985"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="199860"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_algA&#39;vc.3.0" expl="postcondition">
   <proof prover="2"><result status="timeout" time="1.00" steps="169514"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="132"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.3.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.39" steps="69373"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.3.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2412353"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146529"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="monotone_algA&#39;vc.3.2.0" expl="postcondition">
    <transf name="eliminate_let" >
     <goal name="monotone_algA&#39;vc.3.2.0.0" expl="postcondition">
     <transf name="assert" arg1="(algorithmA_spec clauselist c ==&#39; algorithmA_spec (removeFromList (x1, x) clauselist)
   (add (convertRStoAF x) c))">
      <goal name="monotone_algA&#39;vc.3.2.0.0.0" expl="asserted formula">
      <proof prover="2"><result status="valid" time="0.21" steps="46478"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.3.2.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502030"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164377"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="assert" arg1="((algorithmA_spec clauselist d) ==&#39; algorithmA_spec (removeFromList (x1, x) clauselist)
      (add (convertRStoAF x) d))">
       <goal name="monotone_algA&#39;vc.3.2.0.0.1.0" expl="asserted formula">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502960"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160683"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="findOneSubset_exists" arg2="clauselist,c">
        <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0" expl="asserted formula">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2451983"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147025"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0.0" expl="destruct premise">
         <proof prover="2"><result status="valid" time="0.14" steps="41466"/></proof>
         </goal>
         <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0.1" expl="asserted formula">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501426"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147012"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" arg1="Hinst" arg2="x1,x">
          <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0.1.0" expl="asserted formula">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2454341"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143255"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0.1.0.0" expl="destruct premise">
           <proof prover="2"><result status="valid" time="0.20" steps="48029"/></proof>
           </goal>
           <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0.1.0.1" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2496545"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137709"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="introduce_exists" >
            <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0.1.0.1.0" expl="asserted formula">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2432607"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147515"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,d">
             <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0.1.0.1.0.0" expl="asserted formula">
             <transf name="destruct" arg1="Hinst">
              <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0.1.0.1.0.0.0" expl="destruct premise">
              <proof prover="2"><result status="valid" time="0.16" steps="44411"/></proof>
              </goal>
              <goal name="monotone_algA&#39;vc.3.2.0.0.1.0.0.1.0.1.0.0.1" expl="asserted formula">
              <proof prover="2"><result status="valid" time="0.36" steps="62174"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="monotone_algA&#39;vc.3.2.0.0.1.1" expl="postcondition">
       <proof prover="2"><result status="valid" time="0.20" steps="46478"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="462678"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154046"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.20" steps="44927"/></proof>
  </goal>
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3344032"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45503"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" arg1="(cardinal s &gt; 1)">
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0" expl="true case (postcondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2810011"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0" expl="true case (postcondition)">
    <transf name="instantiate" arg1="Hinst" arg2="s">
     <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0" expl="true case (postcondition)">
     <transf name="destruct" arg1="Hinst">
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131944"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="41517"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="39"/></proof>
      </goal>
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.1" expl="true case (postcondition)">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5846692"/></proof>
      <proof prover="2"><result status="valid" time="0.42" steps="51816"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="541"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1" expl="false case (postcondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197408"/></proof>
   <proof prover="2"><result status="valid" time="0.37" steps="51734"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction_1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2824061"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168386"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset_of_evalsetconjunction_1.0">
  <transf name="exists" arg1="(val_all_top)">
   <goal name="subset_of_evalsetconjunction_1.0.0">
   <proof prover="2"><result status="valid" time="0.45" steps="74097"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="6097522"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126353"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset_of_evalsetconjunction.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2851663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123986"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2486786"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.81" steps="99214"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="case" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case">
    <proof prover="2"><result status="valid" time="0.14" steps="41428"/></proof>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2393648"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113319"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.1.0" expl="false case (true case)">
     <proof prover="2"><result status="valid" time="0.24" steps="47556"/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.1.1" expl="false case">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2358643"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119501"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.1.1.0" expl="false case">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2625644"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130499"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" arg1="Hinst" arg2="c">
       <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0" expl="false case">
       <transf name="destruct" arg1="Hinst">
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.0" expl="destruct premise">
        <proof prover="2"><result status="valid" time="0.09" steps="37979"/></proof>
        </goal>
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.1" expl="false case">
        <proof prover="0"><result status="valid" time="0.11" steps="207072"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="109646"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="contr_exists">
 <proof prover="2"><result status="valid" time="0.15" steps="42616"/></proof>
 </goal>
 <goal name="distr_exists">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5040407"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="42996"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294650"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="47817"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="satisf_clauselist_all_mem_satisf">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277560"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192334"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="satisf_clauselist_all_mem_satisf.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373312"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201939"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="satisf_clauselist_all_mem_satisf.0.0">
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="satisf_clauselist_all_mem_satisf.0.0.0">
    <proof prover="2"><result status="valid" time="0.34" steps="50262"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1331314"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98348"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sublist_is_satisfiable_clauselist.0">
  <transf name="induction_arg_ty_lex" arg1="sublist">
   <goal name="sublist_is_satisfiable_clauselist.0.0">
   <transf name="split_vc" >
    <goal name="sublist_is_satisfiable_clauselist.0.0.0">
    <proof prover="2"><result status="valid" time="0.20" steps="40503"/></proof>
    </goal>
    <goal name="sublist_is_satisfiable_clauselist.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1751538"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152242"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H1">
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.18" steps="45842"/></proof>
     </goal>
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1090093"/></proof>
     <proof prover="2"><result status="valid" time="0.38" steps="52230"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb_generic">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10250884"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="765763"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="smb_generic.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12265234"/></proof>
  <proof prover="2"><result status="valid" time="0.48" steps="73455"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="smb">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2"><result status="valid" time="0.38" steps="54858"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="not_subset_spec_test">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2719674"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114161"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_spec_test.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1428122"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130325"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="l">
   <goal name="not_subset_spec_test.0.0">
   <transf name="split_vc" >
    <goal name="not_subset_spec_test.0.0.0">
    <proof prover="2"><result status="valid" time="0.21" steps="46028"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
    </goal>
    <goal name="not_subset_spec_test.0.0.1">
    <proof prover="2"><result status="timeout" time="1.00" steps="111875"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2801256"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124941"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="equality_is_equal_list&#39;vc.0" expl="assertion">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3682332"/></proof>
  <proof prover="2"><result status="valid" time="0.22" steps="46205"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.18" steps="43923"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527581"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119434"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="equality_is_equal_list&#39;vc.2.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.11" steps="40507"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.18" steps="43738"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.2" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.22" steps="40664"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.3" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.22" steps="46174"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2406598"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115325"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="is_equal_list_reflexive&#39;vc.0" expl="assertion">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2514671"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42817"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_equal_list">
   <goal name="is_equal_list_reflexive&#39;vc.0.0" expl="assertion">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2515158"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165611"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="is_equal_list_reflexive&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2336425"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112270"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="is_equal_list_reflexive&#39;vc.1.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.17" steps="43891"/></proof>
   </goal>
   <goal name="is_equal_list_reflexive&#39;vc.1.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.17" steps="44005"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative">
 <proof prover="2"><result status="valid" time="0.17" steps="44134"/></proof>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality">
 <transf name="split_vc" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423557"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="46854"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1580198"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="64851"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.16" steps="44436"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.17" steps="44233"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="264"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition">
   <proof prover="2"><result status="timeout" time="1.00" steps="99773"/></proof>
   <proof prover="4"><result status="valid" time="0.05" steps="266"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.16" steps="44233"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2997534"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129390"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.23" steps="44173"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.25" steps="48615"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="191"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6780028"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="114938"/></proof>
   <proof prover="4"><result status="valid" time="0.04" steps="193"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.15" steps="48615"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_ref">
 <proof prover="2"><result status="valid" time="0.20" steps="44762"/></proof>
 </goal>
 <goal name="permut_trans">
 <proof prover="2"><result status="valid" time="0.18" steps="44880"/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat">
 <proof prover="2"><result status="valid" time="0.22" steps="46742"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat">
 <proof prover="2"><result status="valid" time="0.18" steps="46098"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail">
 <proof prover="2"><result status="valid" time="0.31" steps="51689"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080190"/></proof>
 <proof prover="2"><result status="valid" time="0.39" steps="68980"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2081573"/></proof>
 <proof prover="2"><result status="valid" time="0.28" steps="53190"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_cl1_cl2">
 <proof prover="2"><result status="valid" time="0.18" steps="46063"/></proof>
 </goal>
 <goal name="concat_with_element">
 <proof prover="2"><result status="valid" time="0.32" steps="56587"/></proof>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1454073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105159"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_concat_not_mem_l1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1459543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98112"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0">
   <proof prover="2"><result status="valid" time="0.29" steps="57449"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910038"/></proof>
 <proof prover="2"><result status="valid" time="0.27" steps="53143"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_permut">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1553188"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121707"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_permut.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1725343"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118513"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="permut">
   <goal name="removeFromList_permut.0.0">
   <transf name="split_vc" >
    <goal name="removeFromList_permut.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1655081"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119617"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" arg1="(x = elem)">
     <goal name="removeFromList_permut.0.0.0.0" expl="true case">
     <proof prover="2"><result status="valid" time="0.23" steps="50638"/></proof>
     </goal>
     <goal name="removeFromList_permut.0.0.0.1" expl="false case">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1657192"/></proof>
     <proof prover="2"><result status="valid" time="0.22" steps="49930"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_permut_concat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2091139"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122792"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_permut_concat.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1626528"/></proof>
  <proof prover="2"><result status="valid" time="0.53" steps="81608"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_elem_not_in_list">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424464"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122344"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_elem_not_in_list.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2419393"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136747"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0">
   <proof prover="2"><result status="valid" time="0.19" steps="51116"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="857767"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="312454"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="timeout" time="1.00" steps="112643"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.1" expl="variant decrease">
  <proof prover="2"><result status="timeout" time="1.00" steps="122919"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255490"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111610"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="numOfSubset&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2395037"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107447"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="numOfSubset&#39;vc.2.0.0" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.12" steps="42489"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.1" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.13" steps="45656"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.2" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.19" steps="41748"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2399925"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108239"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="numOfSubset&#39;vc.2.1.0" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.13" steps="42938"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="48"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.1" expl="postcondition">
    <proof prover="2"><result status="timeout" time="1.00" steps="108708"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="52"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.2" expl="postcondition">
    <proof prover="2"><result status="timeout" time="1.00" steps="130669"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4704247"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125330"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="numOfSubset&#39;vc.3.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.12" steps="44759"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.25" steps="51850"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.2" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.25" steps="52414"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_for_all">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1390617"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="71842"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_spec_for_all.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2154148"/></proof>
  <proof prover="2"><result status="valid" time="0.25" steps="55681"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_general">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="47557"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_general.0">
  <proof prover="2"><result status="valid" time="0.17" steps="47245"/></proof>
  </goal>
  <goal name="not_subset_general.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2443561"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118174"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_general.1.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2202787"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140169"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="not_subset_general.1.0.0">
    <proof prover="2"><result status="valid" time="0.18" steps="49130"/></proof>
    </goal>
    <goal name="not_subset_general.1.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778385"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="198244"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.22" steps="51781"/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778925"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106286"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" arg1="not_subset_spec">
      <goal name="not_subset_general.1.0.1.1.0">
      <transf name="split_vc" >
       <goal name="not_subset_general.1.0.1.1.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2297837"/></proof>
       <proof prover="2"><result status="valid" time="1.67" steps="181063"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="not_subset_general.1.0.1.1.0.1">
       <proof prover="2"><result status="valid" time="0.10" steps="42297"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_numOfSubset_0">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2503073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121511"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_numOfSubset_0.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2644547"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125048"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_numOfSubset_0.0.0">
   <proof prover="2"><result status="valid" time="0.27" steps="53612"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="475"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2673230"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116569"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset_0_not_subset&#39;vc.0" expl="assertion">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1353144"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="128004"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="156"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="599401"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="144519"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1453114"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73242"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.2.0" expl="VC for numOfSubset_0_not_subset">
   <transf name="split_vc" >
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.0" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.18" steps="49251"/></proof>
    </goal>
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.1" expl="postcondition">
    <proof prover="2"><result status="timeout" time="1.00" steps="114488"/></proof>
    <proof prover="4"><result status="valid" time="0.09" steps="219"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="notSubset_numOfSubset_0">
 <proof prover="2"><result status="valid" time="0.24" steps="52147"/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_1">
 <proof prover="2"><result status="valid" time="0.24" steps="51448"/></proof>
 </goal>
 <goal name="addSubset_to_numOfSubset">
 <proof prover="2"><result status="valid" time="0.25" steps="54204"/></proof>
 </goal>
 <goal name="removeNumOfSubset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2038765"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150335"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeNumOfSubset.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1522274"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167842"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeNumOfSubset.0.0">
   <proof prover="2"><result status="timeout" time="1.00" steps="125159"/></proof>
   <proof prover="4"><result status="valid" time="0.43" steps="2610"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_clauselist_c_1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1132002"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116127"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset_clauselist_c_1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1498814"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130104"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="(exists set p. mem1 (set,p) clauselist /\ subset set c)">
   <goal name="numOfSubset_clauselist_c_1.0.0" expl="asserted formula">
   <proof prover="2"><result status="valid" time="0.20" steps="49630"/></proof>
   </goal>
   <goal name="numOfSubset_clauselist_c_1.0.1">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1268318"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(forall set1:fset atomicformula, p1:rightside. mem1 (set1,p1) (removeFromList (set, p) clauselist) -&gt; (not subset set1 c))">
    <goal name="numOfSubset_clauselist_c_1.0.1.0" expl="asserted formula">
    <proof prover="2"><result status="valid" time="0.20" steps="50110"/></proof>
    </goal>
    <goal name="numOfSubset_clauselist_c_1.0.1.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1220980"/></proof>
    <proof prover="2"><result status="valid" time="0.24" steps="51168"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1_num_occ">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1973987"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="226357"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset_1_num_occ.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1026651"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129831"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="numOfSubset_1_num_occ.0.0">
   <proof prover="2"><result status="timeout" time="1.00" steps="134908"/></proof>
   <proof prover="4"><result status="valid" time="0.18" steps="1421"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1561499"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118745"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset_1.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2122453"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="610484"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="numOfSubset_1.0.0">
   <proof prover="2"><result status="timeout" time="1.00" steps="146055"/></proof>
   <proof prover="4"><result status="valid" time="0.88" steps="2446"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2009871"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138025"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.23" steps="51324"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2370706"/></proof>
  <proof prover="2"><result status="valid" time="0.24" steps="54342"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="valid" time="0.28" steps="58961"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2662931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134022"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="not_subset_spec" arg2="in" arg3="Requires">
   <goal name="not_subset_permut&#39;vc.3.0" expl="postcondition">
   <transf name="destruct_term" arg1="clauselist">
    <goal name="not_subset_permut&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1269894"/></proof>
    <proof prover="2"><result status="valid" time="1.13" steps="131833"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="not_subset_permut&#39;vc.3.0.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1063516"/></proof>
    <proof prover="2"><result status="valid" time="0.23" steps="50974"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equality_add">
 <proof prover="2"><result status="valid" time="0.41" steps="69939"/></proof>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="480279"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="196776"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeTwoClauses_basecase&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1495979"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168156"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_basecase&#39;vc.0.0" expl="postcondition">
   <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0" expl="postcondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.20" steps="51879"/></proof>
     </goal>
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1473231"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166910"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0" expl="postcondition">
      <proof prover="2"><result status="valid" time="0.32" steps="59710"/></proof>
      </goal>
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1" expl="postcondition">
      <proof prover="2"><result status="valid" time="0.71" steps="99318"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses_inductive_case2&#39;vc" expl="VC for removeTwoClauses_inductive_case2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1936611"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168015"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeTwoClauses_inductive_case2&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1829057"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149853"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0" expl="postcondition">
   <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0" expl="postcondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.22" steps="52897"/></proof>
     </goal>
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1776803"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137772"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.0" expl="postcondition">
      <proof prover="2"><result status="valid" time="0.33" steps="60319"/></proof>
      </goal>
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1795595"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="209845"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0" expl="postcondition">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4989698"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="767357"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="assert" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0" expl="asserted formula">
        <proof prover="2"><result status="valid" time="0.78" steps="105186"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.1" expl="postcondition">
        <proof prover="2"><result status="valid" time="0.43" steps="82156"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1487882"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118816"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem2 clauselist)">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0" expl="postcondition">
        <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF elem21) c)">
         <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0" expl="postcondition">
         <transf name="destruct" arg1="Hinst">
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.0" expl="destruct premise">
          <proof prover="2"><result status="valid" time="0.21" steps="53635"/></proof>
          </goal>
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1511817"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126097"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="314238"/></proof>
           <proof prover="2"><result status="valid" time="0.33" steps="66134"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="265"/></proof>
           </goal>
           <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1" expl="postcondition">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6213596"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="638720"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.0" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1685863"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131742"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" arg1="(is_equal_list (removeFromList elem2 clauselist) (Cons elem1 Nil))">
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.0.0" expl="asserted formula">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="634315"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128841"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="induction_arg_ty_lex" arg1="clauselist">
              <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.0.0.0">
              <proof prover="2"><result status="valid" time="0.50" steps="90379"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.0.1" expl="postcondition">
             <proof prover="2"><result status="valid" time="0.72" steps="110711"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1" expl="postcondition">
            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7027581"/></proof>
            <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="628446"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
            <transf name="assert" arg1="(algorithmA_spec (removeFromList (s, p) (removeFromList elem2 clauselist))
    (add (convertRStoAF p) (add (convertRStoAF elem21) c)) ==&#39; algorithmA_spec
    (removeFromList (s1, p1) (removeFromList elem1 clauselist))
    (add (convertRStoAF p1) (add (convertRStoAF p11) c)))">
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0" expl="asserted formula">
             <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7039900"/></proof>
             <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="628556"/></proof>
             <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
             <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(removeFromList (s, p) (removeFromList elem2 clauselist))">
              <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.0" expl="asserted formula">
              <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p) (add (convertRStoAF elem21) c))">
               <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.0.0" expl="asserted formula">
               <transf name="destruct" arg1="Hinst">
                <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.0.0.0" expl="destruct premise">
                <proof prover="2"><result status="valid" time="0.39" steps="88868"/></proof>
                </goal>
                <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.0.0.1" expl="asserted formula">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1904843"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142337"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.0.0.1.0" expl="asserted formula">
                 <proof prover="2"><result status="valid" time="0.56" steps="90707"/></proof>
                 </goal>
                 <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.0.0.1.1" expl="asserted formula">
                 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2159013"/></proof>
                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155517"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 <transf name="induction_arg_ty_lex" arg1="clauselist">
                  <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.0.0.0.1.1.0">
                  <proof prover="2"><result status="valid" time="0.82" steps="140334"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0.0.1.1.1.1" expl="postcondition">
             <proof prover="2"><result status="valid" time="0.18" steps="52389"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1885864"/></proof>
 <proof prover="2"><result status="valid" time="0.30" steps="59009"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138055"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119580"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1837167"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138583"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1831857"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135932"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
    <goal name="removeFromList_algorithmA&#39;vc.0.0.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0" expl="postcondition">
     <transf name="destruct" arg1="Hinst">
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.0" expl="destruct premise">
      <proof prover="2"><result status="valid" time="0.13" steps="50126"/></proof>
      </goal>
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1221720"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152797"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0" expl="postcondition">
       <proof prover="2"><result status="valid" time="0.25" steps="56906"/></proof>
       </goal>
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1" expl="postcondition">
       <proof prover="2"><result status="valid" time="0.31" steps="58883"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7297570"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="715499"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.30" steps="56389"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.21" steps="54365"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6285900"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="786667"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="case" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1979662"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123868"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1575264"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120543"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1915190"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="683215"/></proof>
      <proof prover="2"><result status="valid" time="0.16" steps="52270"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.98" steps="1638"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5665152"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="781552"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.0" expl="true case (postcondition)">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1665005"/></proof>
       <proof prover="2"><result status="valid" time="0.20" steps="52277"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="1.17" steps="1655"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1" expl="true case (postcondition)">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1648914"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120014"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="Hinst" arg2="(pick c)">
        <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1.0" expl="true case (postcondition)">
        <proof prover="2"><result status="timeout" time="1.00" steps="121868"/></proof>
        <proof prover="4"><result status="valid" time="0.39" steps="1670"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)">
   <proof prover="2"><result status="timeout" time="1.00" steps="117835"/></proof>
   <proof prover="4"><result status="valid" time="0.90" steps="1570"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723350"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="57644"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="bot_not_in_set_then_sat_set&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.31" steps="56494"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.20" steps="54443"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3128856"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138541"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_set">
   <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0" expl="VC for bot_not_in_set_then_sat_set">
   <transf name="exists" arg1="(val_all_top)">
    <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0.0">
    <proof prover="2"><result status="valid" time="0.14" steps="52110"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p">
 <proof prover="0"><result status="valid" time="0.20" steps="354550"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="145391"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2"><result status="valid" time="0.30" steps="59236"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3347062"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="53978"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case3">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="54152"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case4">
 <proof prover="2"><result status="valid" time="0.28" steps="54786"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1412420"/></proof>
 <proof prover="2"><result status="valid" time="0.16" steps="54188"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2834289"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="149568"/></proof>
 <proof prover="4"><result status="valid" time="0.08" steps="452"/></proof>
 </goal>
 <goal name="removeFromList_not_empty_setc_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2241812"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116095"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_not_empty_setc_clauselist.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8510920"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="690191"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_not_empty_setc_clauselist.0.0">
   <proof prover="2"><result status="valid" time="0.39" steps="74771"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="979345"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123441"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_top_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="54418"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.19" steps="58227"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2269024"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164847"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="137037"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0">
       <transf name="subst" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0">
        <proof prover="2"><result status="valid" time="0.21" steps="61163"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2002335"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129292"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.1.1.0">
       <proof prover="2"><result status="valid" time="0.23" steps="58428"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.37" steps="2450"/></proof>
       </goal>
       <goal name="case1_top_imples_p.1.0.0.1.1.1">
       <proof prover="2"><result status="valid" time="0.45" steps="72348"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1963047"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117628"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_conjuction_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.19" steps="58455"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2843633"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126702"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5746229"/></proof>
      <proof prover="2"><result status="valid" time="0.20" steps="58602"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2231126"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150763"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.0">
       <proof prover="2"><result status="valid" time="0.23" steps="58667"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.24" steps="1576"/></proof>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.1">
       <proof prover="2"><result status="valid" time="0.59" steps="92077"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2"><result status="valid" time="0.20" steps="61425"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p">
 <proof prover="2"><result status="valid" time="0.33" steps="61622"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p">
 <proof prover="2"><result status="valid" time="0.35" steps="61833"/></proof>
 </goal>
 <goal name="case2_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1965027"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="193193"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_top_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.24" steps="54108"/></proof>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2413194"/></proof>
      <proof prover="2"><result status="valid" time="0.20" steps="59035"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_top_imples_p.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2039074"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124350"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.1.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1968581"/></proof>
       <proof prover="2"><result status="valid" time="0.23" steps="59105"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.56" steps="3449"/></proof>
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.1.1">
       <proof prover="2"><result status="valid" time="0.42" steps="72509"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1307008"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="281647"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="2"><result status="valid" time="0.23" steps="54327"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2820755"/></proof>
      <proof prover="2"><result status="valid" time="0.21" steps="59285"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2035166"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126616"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1882579"/></proof>
       <proof prover="2"><result status="valid" time="0.23" steps="59350"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.41" steps="1976"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.1">
       <proof prover="2"><result status="valid" time="0.47" steps="76790"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2"><result status="valid" time="0.29" steps="66296"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2"><result status="valid" time="0.22" steps="63017"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p">
 <proof prover="2"><result status="valid" time="0.22" steps="62835"/></proof>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1871066"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135753"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.31" steps="66183"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1334937"/></proof>
  <proof prover="2"><result status="valid" time="0.40" steps="71517"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1916618"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138195"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.2.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1793256"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="108193"/></proof>
   <proof prover="4"><result status="valid" time="0.20" steps="1241"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.3" expl="precondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982709"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="253248"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.3.0" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982180"/></proof>
   <proof prover="2"><result status="valid" time="0.22" steps="58129"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.4" expl="precondition">
  <proof prover="2"><result status="valid" time="0.35" steps="69671"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.5" expl="precondition">
  <proof prover="2"><result status="valid" time="0.23" steps="60620"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.6" expl="unreachable point">
  <proof prover="2"><result status="valid" time="0.13" steps="52656"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.7" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1098383"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140258"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.7.0" expl="postcondition">
   <proof prover="2"><result status="timeout" time="1.00" steps="137882"/></proof>
   <proof prover="4"><result status="valid" time="0.04" steps="55"/></proof>
   </goal>
   <goal name="case3_induction_general&#39;vc.7.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.62" steps="94595"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.38" steps="1201"/></proof>
   </goal>
   <goal name="case3_induction_general&#39;vc.7.2" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.94" steps="127757"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="53"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424592"/></proof>
 <proof prover="2"><result status="valid" time="0.34" steps="68482"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case3_unsat_induction_general&#39;vc" expl="VC for case3_unsat_induction_general">
 <proof prover="0"><result status="timeout" time="1.00" steps="2005947"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="133208"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_unsat_induction_general&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.32" steps="66185"/></proof>
  </goal>
  <goal name="case3_unsat_induction_general&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.36" steps="70947"/></proof>
  </goal>
  <goal name="case3_unsat_induction_general&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="1794375"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="131269"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_unsat_induction_general&#39;vc.2.0" expl="precondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="1794375"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="136171"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="case3_unsat_induction_general&#39;vc.2.0.0" expl="VC for case3_unsat_induction_general">
    <proof prover="2"><result status="valid" time="0.72" steps="110377"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="case3_unsat_induction_general&#39;vc.3" expl="precondition">
  <proof prover="2"><result status="valid" time="0.20" steps="58420"/></proof>
  </goal>
  <goal name="case3_unsat_induction_general&#39;vc.4" expl="precondition">
  <proof prover="2"><result status="valid" time="0.22" steps="60859"/></proof>
  </goal>
  <goal name="case3_unsat_induction_general&#39;vc.5" expl="unreachable point">
  <proof prover="2"><result status="valid" time="0.13" steps="52889"/></proof>
  </goal>
  <goal name="case3_unsat_induction_general&#39;vc.6" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="1955857"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="134816"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_unsat_induction_general&#39;vc.6.0" expl="postcondition">
   <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="7020679"/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="705500"/></proof>
   <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
   <transf name="assert" arg1="(is_unsatisfiable_clause x)">
    <goal name="case3_unsat_induction_general&#39;vc.6.0.0" expl="asserted formula">
    <proof prover="2"><result status="valid" time="0.43" steps="80304"/></proof>
    </goal>
    <goal name="case3_unsat_induction_general&#39;vc.6.0.1" expl="postcondition">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="7082629"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="705658"/></proof>
    <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" arg1="(exists set p. x = (set,p))">
     <goal name="case3_unsat_induction_general&#39;vc.6.0.1.0" expl="asserted formula">
     <proof prover="2"><result status="valid" time="0.28" steps="60093"/></proof>
     </goal>
     <goal name="case3_unsat_induction_general&#39;vc.6.0.1.1" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="1632108"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="146127"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="introduce_exists" >
      <goal name="case3_unsat_induction_general&#39;vc.6.0.1.1.0" expl="postcondition">
      <proof prover="0"><result status="timeout" time="1.00" steps="1693047"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="145939"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="assert" arg1="(eq_pos (convertRStoAF p) ABot)">
       <goal name="case3_unsat_induction_general&#39;vc.6.0.1.1.0.0" expl="asserted formula">
       <proof prover="0"><result status="timeout" time="1.00" steps="2154295"/></proof>
       <proof prover="2" timelimit="5"><result status="valid" time="3.71" steps="336102"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="case3_unsat_induction_general&#39;vc.6.0.1.1.0.1" expl="postcondition">
       <proof prover="0"><result status="timeout" time="1.00" steps="1618065"/></proof>
       <proof prover="2" timelimit="5"><result status="valid" time="1.90" steps="226473"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="case3_unsat_induction_general&#39;vc.6.1" expl="postcondition">
   <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5201028"/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="752108"/></proof>
   <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
   <transf name="assert" arg1="(mem ABot c)">
    <goal name="case3_unsat_induction_general&#39;vc.6.1.0" expl="asserted formula">
    <proof prover="0"><result status="timeout" time="1.00" steps="1708920"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="140002"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="case3_unsat_induction_general&#39;vc.6.1.1" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.31" steps="65502"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="case3_unsat_induction_general&#39;vc.6.2" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="2213600"/></proof>
   <proof prover="2" timelimit="5"><result status="valid" time="2.01" steps="249042"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_unsat_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1765003"/></proof>
 <proof prover="2"><result status="valid" time="0.29" steps="67251"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic">
 <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="60716"/></proof>
 </goal>
 <goal name="horn_sat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2155554"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139048"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="horn_sat.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2258299"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139066"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" arg1="clauselist">
   <goal name="horn_sat.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2030547"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="case3_induction" arg2="clauselist">
    <goal name="horn_sat.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2151276"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134963"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="horn_sat.0.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1586438"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146519"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" >
      <goal name="horn_sat.0.0.0.0.0" expl="destruct premise">
      <proof prover="2"><result status="valid" time="0.22" steps="61437"/></proof>
      </goal>
      <goal name="horn_sat.0.0.0.0.1" expl="destruct premise">
      <proof prover="2"><result status="valid" time="0.13" steps="53200"/></proof>
      </goal>
      <goal name="horn_sat.0.0.0.0.2" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2153654"/></proof>
      <proof prover="2"><result status="valid" time="0.13" steps="53200"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="horn_sat.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1887715"/></proof>
     <proof prover="2"><result status="valid" time="0.20" steps="58296"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="horn_sat.0.1">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2350304"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137488"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="((horn_logic clauselist = True) -&gt; (not mem ABot (algorithmA_spec clauselist (singleton ATop))))">
    <goal name="horn_sat.0.1.0" expl="asserted formula">
    <proof prover="2"><result status="valid" time="0.21" steps="61064"/></proof>
    </goal>
    <goal name="horn_sat.0.1.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2218545"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137541"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="h">
     <goal name="horn_sat.0.1.1.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2222723"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129795"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="case3_induction" arg2="clauselist">
      <goal name="horn_sat.0.1.1.0.0" expl="destruct premise">
      <transf name="destruct" arg1="Hinst">
       <goal name="horn_sat.0.1.1.0.0.0" expl="destruct premise">
       <proof prover="2"><result status="valid" time="0.93" steps="143259"/></proof>
       </goal>
       <goal name="horn_sat.0.1.1.0.0.1" expl="destruct premise">
       <proof prover="2"><result status="valid" time="0.20" steps="58258"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="horn_sat.0.1.1.1">
     <proof prover="2"><result status="valid" time="0.20" steps="58258"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn_unsat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2264903"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122276"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="horn_unsat.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175706"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131859"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="((horn_logic clauselist = False) -&gt; (mem ABot (algorithmA_spec clauselist (singleton ATop))))
">
   <goal name="horn_unsat.0.0" expl="asserted formula">
   <proof prover="2"><result status="valid" time="0.22" steps="61116"/></proof>
   </goal>
   <goal name="horn_unsat.0.1">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2183335"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127942"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="case3_unsat_induction" arg2="clauselist">
    <goal name="horn_unsat.0.1.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2225907"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134788"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="horn_unsat.0.1.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2228506"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140327"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" >
      <goal name="horn_unsat.0.1.0.0.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2285297"/></proof>
      <proof prover="2"><result status="valid" time="1.42" steps="170431"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="horn_unsat.0.1.0.0.1">
      <proof prover="2"><result status="valid" time="0.13" steps="53267"/></proof>
      </goal>
      <goal name="horn_unsat.0.1.0.0.2">
      <proof prover="2"><result status="valid" time="0.13" steps="53267"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="horn_unsat.0.1.0.1">
     <proof prover="2"><result status="valid" time="0.21" steps="58324"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_prog&#39;vc" expl="VC for removeFromList_prog">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2155938"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162348"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_prog&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2100668"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="61907"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="removeFromList_prog&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2331389"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="201734"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="removeFromList_prog&#39;vc.1.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="59310"/></proof>
   </goal>
   <goal name="removeFromList_prog&#39;vc.1.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2140363"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118602"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="removeFromList_prog&#39;vc.1.1.0" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7390313"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="711116"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="split_vc" >
     <goal name="removeFromList_prog&#39;vc.1.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2037202"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137289"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" >
      <goal name="removeFromList_prog&#39;vc.1.1.0.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2062240"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118261"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="eliminate_let" >
       <goal name="removeFromList_prog&#39;vc.1.1.0.0.0.0" expl="postcondition">
       <transf name="eliminate_if" >
        <goal name="removeFromList_prog&#39;vc.1.1.0.0.0.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2170726"/></proof>
        <proof prover="2" obsolete="true"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="removeFromList_prog&#39;vc.1.1.1.1.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="54376"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="removeFromList_prog&#39;vc.1.1.0.1" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="62514"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="removeFromList_prog&#39;vc.1.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2252233"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124469"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="removeFromList_prog&#39;vc.1.1.1.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2217021"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123821"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" >
      <goal name="removeFromList_prog&#39;vc.1.1.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="63290"/></proof>
      </goal>
      <goal name="removeFromList_prog&#39;vc.1.1.1.0.1" expl="postcondition">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7329302"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="695104"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="eliminate_let" >
       <goal name="removeFromList_prog&#39;vc.1.1.1.0.1.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2120047"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111055"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="eliminate_if" >
        <goal name="removeFromList_prog&#39;vc.1.1.1.0.1.0.0" expl="postcondition">
        <transf name="destruct" arg1="H1">
         <goal name="removeFromList_prog&#39;vc.1.1.1.0.1.0.0.0" expl="postcondition">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7851960"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="63998"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="removeFromList_prog&#39;vc.1.1.1.1" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2217162"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130112"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" >
      <goal name="removeFromList_prog&#39;vc.1.1.1.1.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="63801"/></proof>
      </goal>
      <goal name="removeFromList_prog&#39;vc.1.1.1.1.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1941946"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138084"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="eliminate_let" >
       <goal name="removeFromList_prog&#39;vc.1.1.1.1.1.0" expl="postcondition">
       <transf name="eliminate_if" >
        <goal name="removeFromList_prog&#39;vc.1.1.1.1.1.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1939585"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134359"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="H3">
         <goal name="removeFromList_prog&#39;vc.1.1.1.1.0.0.0.0" expl="postcondition">
         <transf name="destruct" arg1="H1">
          <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1943669"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118980"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="H2">
           <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.0" expl="destruct premise">
           <proof prover="2"><undone/></proof>
           </goal>
           <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1943621"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123202"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="H5">
            <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.1.0" expl="destruct premise">
            <proof prover="2"><undone/></proof>
            </goal>
            <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.1.1" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2011237"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121563"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" arg1="removeFromList&#39;def" arg2="elem,clauselist">
             <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.1.1.0" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1948483"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126927"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.1.1.0.0" expl="postcondition">
              <proof prover="2"><undone/></proof>
              </goal>
              <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.1.1.0.1" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2152430"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125018"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.1.1.0.1.0" expl="postcondition">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2082916"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129035"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst1">
                <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.1.1.0.1.0.0" expl="destruct premise">
                <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6355741"/></proof>
                <proof prover="2"><undone/></proof>
                <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
                </goal>
                <goal name="removeFromList_prog&#39;vc.1.1.0.1.0.0.0.0.0.1.1.0.1.0.1" expl="postcondition">
                <proof prover="2"><undone/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="removeFromList_prog&#39;vc.2" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="62572"/></proof>
  </goal>
  <goal name="removeFromList_prog&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2252099"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="63101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="removeFromList_prog&#39;vc.4" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="63040"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="48"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mem_fset_then_mem_set&#39;vc" expl="VC for mem_fset_then_mem_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1200480"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136092"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="mem_fset_then_mem_set&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1391335"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="63343"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="2"><result status="valid" time="0.42" steps="86000"/></proof>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2"><result status="valid" time="0.21" steps="62570"/></proof>
 </goal>
</theory>
</file>
</why3session>
