<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_new.mlw"/>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="28251"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27394"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28065"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="28030"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="26200"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="23704"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="AFtoRS_RStoAF.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="27620"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="26550"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Horn">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="123773"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="126755"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="527443"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145478"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="32465"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="41497"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="37738"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="35969"/></proof>
 </goal>
 <goal name="if_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="33792"/></proof>
 </goal>
 <goal name="top_is_satisfiable" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6573933"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2249636"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="top_is_satisfiable.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2469543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="379235"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0" proved="true">
   <transf name="exists" proved="true" arg1="(val_all_top)">
    <goal name="top_is_satisfiable.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="33089"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_is_unsatisfiable" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="34299"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="32835"/></proof>
 </goal>
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="30103"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="36632"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="67177"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="33909"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="44133"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="37211"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="40456"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.70" steps="90966"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="36525"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="39735"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2161099"/></proof>
    <proof prover="2"><result status="valid" time="0.18" steps="39921"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2150181"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186545"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2617438"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1618350"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.60" steps="2996"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219067"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="785"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="149998"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="791"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2574935"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276417"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2487193"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="276394"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.20" steps="40678"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="38325"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338455"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="408052"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472376"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149065"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2468665"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149903"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="131862"/></proof>
       <proof prover="4"><result status="valid" time="0.13" steps="799"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.19" steps="40948"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="793"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="43462"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="133959"/></proof>
 <proof prover="4"><result status="valid" time="0.30" steps="1945"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="38903"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="44834"/></proof>
 </goal>
 <goal name="listset_to_listfset_distr" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401631"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310305"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="listset_to_listfset_distr.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472351"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="310274"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="left">
   <goal name="listset_to_listfset_distr.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="listset_to_listfset_distr.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2765999"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201978"/></proof>
    <transf name="compute_hyp_specified" proved="true" >
     <goal name="listset_to_listfset_distr.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="44060"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="listset_to_listfset_distr.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="167153"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="138"/></proof>
    <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="2592517"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="111099"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2247870"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122237"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="40157"/></proof>
    </goal>
    <goal name="removeFromList_numocc.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="131632"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="252"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2416889"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145646"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc_2.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc_2.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="40395"/></proof>
    </goal>
    <goal name="removeFromList_numocc_2.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="110728"/></proof>
    <proof prover="4"><result status="valid" time="0.10" steps="707"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2105040"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118867"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_length.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2159512"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114480"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" proved="true" arg1="(clauselist = Nil)">
   <goal name="removeFromList_length.0.0" expl="true case" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="40952"/></proof>
   </goal>
   <goal name="removeFromList_length.0.1" expl="false case" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160427"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117680"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="removeFromList_length.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="removeFromList_length.0.1.0.0" expl="false case" proved="true">
     <proof prover="2"><result status="valid" time="0.11" steps="36935"/></proof>
     </goal>
     <goal name="removeFromList_length.0.1.0.1" expl="false case" proved="true">
     <proof prover="2"><result status="valid" time="0.28" steps="55657"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="667"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_mem_subset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3422201"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191388"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_mem_subset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3823428"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="39163"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="findOneSubset_mem_subset.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3759059"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="38640"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="G">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="15912995"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1613491"/></proof>
 <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="if_mem_then_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2876564"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137385"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_mem_then_subset_set_smb.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1641680"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134631"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="110109"/></proof>
   <proof prover="4"><result status="valid" time="0.78" steps="1528"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955177"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166640"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_set_smb_clauselist.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="subset_set_smb_clauselist.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="654319"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168986"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="subset_set_smb_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="47147"/></proof>
    </goal>
    <goal name="subset_set_smb_clauselist.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.78" steps="89512"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="610"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2656112"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180051"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_subset_set_smb.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_subset_set_smb.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="45341"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761004"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" proved="true" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="42174"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1707639"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172719"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.20" steps="43073"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816447"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177277"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0" proved="true">
        <transf name="replace" proved="true" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2102707"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131239"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2434241"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118676"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.27" steps="42066"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038971"/></proof>
           <proof prover="2"><result status="valid" time="0.25" steps="39903"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.25" steps="51493"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.14" steps="42057"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3752049"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="253838"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3451143"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180880"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="42374"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955214"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125730"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="clauselist, c">
    <goal name="algorithmA_spec&#39;vc.0.1.0" expl="variant decrease" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="algorithmA_spec&#39;vc.0.1.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.13" steps="39219"/></proof>
     </goal>
     <goal name="algorithmA_spec&#39;vc.0.1.0.1" expl="variant decrease" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2869379"/></proof>
     <proof prover="2"><result status="valid" time="0.19" steps="43261"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="41762"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3216326"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="184752"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2"><result status="valid" time="0.13" steps="39591"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2"><result status="valid" time="0.37" steps="59978"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9028784"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="706422"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="48482"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2141317"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="191752"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" proved="true" arg1="H">
    <goal name="algorithmA_spec&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2312908"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145876"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" proved="true" >
     <goal name="algorithmA_spec&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2341736"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="183342"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H">
      <goal name="algorithmA_spec&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2374700"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="183333"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" proved="true" arg1="subset_set_smb_clauselist" arg2="clauselist">
        <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1">
         <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="x">
          <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2322964"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130925"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2335060"/></proof>
           <proof prover="2"><result status="valid" time="0.20" steps="44769"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
           <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2198451"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136850"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" proved="true" arg1="(subset (singleton (convertRStoAF x) ) (set_smb_clauselist clauselist))">
            <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="2"><result status="valid" time="0.24" steps="48386"/></proof>
            </goal>
            <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0.0.0.0.1.1" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2033987"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143641"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
             <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0.0.0.0.1.1.0" expl="postcondition" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2056210"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129758"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" proved="true" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
              <goal name="algorithmA_spec&#39;vc.3.1.0.0.0.0.0.0.0.1.1.0.0" expl="postcondition" proved="true">
              <proof prover="2"><result status="valid" time="0.89" steps="116422"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3460135"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113302"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="44099"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="53920"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="42388"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12555206"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="921624"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutacoes&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="42480"/></proof>
   </goal>
   <goal name="permutacoes&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2498921"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154538"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" proved="true" arg1="H">
    <goal name="permutacoes&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2981607"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150162"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" proved="true" >
     <goal name="permutacoes&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2922605"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="H">
      <goal name="permutacoes&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3018729"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154599"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
       <goal name="permutacoes&#39;vc.3.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2915737"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150442"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="permutacoes&#39;vc.3.1.0.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.09" steps="38772"/></proof>
        </goal>
        <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2942766"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154440"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.20" steps="43674"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2881375"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148907"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2604686"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171480"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" proved="true" arg1="(algorithmA_spec clauselist2 c ==&#39; algorithmA_spec (removeFromList (s, p) clauselist)
    (add (convertRStoAF p) c))">
           <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2663499"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132232"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" proved="true" arg1="findOneSubset_exists" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2703591"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134003"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0" expl="destruct premise" proved="true">
             <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14224964"/></proof>
             <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="640878"/></proof>
             <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
             <transf name="assert" proved="true" arg1="(not is_nil clauselist)">
              <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2916364"/></proof>
              <proof prover="2"><result status="valid" time="0.14" steps="40124"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.0.1" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.21" steps="45598"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1" expl="asserted formula" proved="true">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2673996"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130587"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" proved="true" arg1="Hinst" arg2="s,p">
              <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.0" expl="asserted formula" proved="true">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2827942"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135352"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" proved="true" arg1="Hinst">
               <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.0.0" expl="destruct premise" proved="true">
               <proof prover="2"><result status="valid" time="0.22" steps="47810"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.0.1" expl="asserted formula" proved="true">
               <proof prover="0"><result status="timeout" time="1.00" steps="2191651"/></proof>
               <proof prover="2"><result status="timeout" time="1.00" steps="104596"/></proof>
               <proof prover="4"><result status="timeout" time="1.00"/></proof>
               <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
                <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
                <proof prover="0"><result status="timeout" time="1.00" steps="2190210"/></proof>
                <proof prover="2"><result status="timeout" time="1.00" steps="105204"/></proof>
                <proof prover="4"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" proved="true" arg1="Hinst">
                 <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.0.1.0.0" expl="destruct premise" proved="true">
                 <proof prover="2"><result status="valid" time="0.11" steps="39023"/></proof>
                 </goal>
                 <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.0.1.0.1" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="timeout" time="1.00" steps="2270070"/></proof>
                 <proof prover="2"><result status="timeout" time="1.00" steps="104095"/></proof>
                 <proof prover="4"><result status="timeout" time="1.00"/></proof>
                 <transf name="destruct" proved="true" arg1="Hinst">
                  <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.0.1.0.1.0" expl="asserted formula" proved="true">
                  <proof prover="2"><result status="valid" time="0.24" steps="45825"/></proof>
                  </goal>
                  <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.0.0.1.0.1.0.1.1" expl="asserted formula" proved="true">
                  <proof prover="2"><result status="valid" time="0.18" steps="41683"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.3.1.0.0.0.0.1.1.0.1" expl="postcondition" proved="true">
           <proof prover="2"><result status="valid" time="0.15" steps="40547"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3146240"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114050"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="45402"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="42693"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="53956"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2369985"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="199860"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="monotone_algA&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="167584"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="128"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2412353"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146529"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="monotone_algA&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="monotone_algA&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(algorithmA_spec clauselist c ==&#39; algorithmA_spec (removeFromList (x1, x) clauselist)
   (add (convertRStoAF x) c))">
      <goal name="monotone_algA&#39;vc.3.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.21" steps="45026"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.3.1.0.0.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502030"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164377"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="assert" proved="true" arg1="((algorithmA_spec clauselist d) ==&#39; algorithmA_spec (removeFromList (x1, x) clauselist)
      (add (convertRStoAF x) d))">
       <goal name="monotone_algA&#39;vc.3.1.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2502960"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160683"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" proved="true" arg1="findOneSubset_exists" arg2="clauselist,c">
        <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2451983"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147025"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2"><result status="valid" time="0.14" steps="40347"/></proof>
         </goal>
         <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0.1" expl="asserted formula" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501426"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147012"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1,x">
          <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0.1.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2454341"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143255"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0.1.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.20" steps="46735"/></proof>
           </goal>
           <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0.1.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2496545"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137709"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="introduce_exists" proved="true" >
            <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0.1.0.1.0" expl="asserted formula" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2432607"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147515"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,d">
             <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0.1.0.1.0.0.0" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.16" steps="43366"/></proof>
              </goal>
              <goal name="monotone_algA&#39;vc.3.1.0.0.1.0.0.1.0.1.0.0.1" expl="asserted formula" proved="true">
              <proof prover="2"><result status="valid" time="0.36" steps="60284"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="monotone_algA&#39;vc.3.1.0.0.1.1" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.20" steps="45203"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="462678"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154046"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="43800"/></proof>
  </goal>
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3344032"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45503"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal s &gt; 1)">
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2810011"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0" expl="true case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="s">
     <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131944"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="40398"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="39"/></proof>
      </goal>
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5846692"/></proof>
      <proof prover="2"><result status="valid" time="0.42" steps="50733"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="541"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197408"/></proof>
   <proof prover="2"><result status="valid" time="0.37" steps="50631"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2824061"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168386"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction_1.0" proved="true">
  <transf name="exists" proved="true" arg1="(val_all_top)">
   <goal name="subset_of_evalsetconjunction_1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.45" steps="72870"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="6097522"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126353"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2851663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123986"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" proved="true" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2486786"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.81" steps="99214"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="case" proved="true" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="40303"/></proof>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2393648"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113319"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.1.0" expl="false case (true case)" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="46421"/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.1.1" expl="false case" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2358643"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119501"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.1.1.0" expl="false case" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2625644"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130499"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
       <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0" expl="false case" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.09" steps="36909"/></proof>
        </goal>
        <goal name="subset_of_evalsetconjunction.0.0.1.1.0.0.1" expl="false case" proved="true">
        <proof prover="0"><result status="valid" time="0.11" steps="202945"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="108348"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="contr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="41496"/></proof>
 </goal>
 <goal name="distr_exists" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5040407"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="41870"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294650"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="46682"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="satisf_clauselist_all_mem_satisf" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277560"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192334"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="satisf_clauselist_all_mem_satisf.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373312"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201939"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="satisf_clauselist_all_mem_satisf.0.0" proved="true">
   <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
    <goal name="satisf_clauselist_all_mem_satisf.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.34" steps="49247"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1331314"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98348"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_is_satisfiable_clauselist.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_is_satisfiable_clauselist.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sublist_is_satisfiable_clauselist.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="39570"/></proof>
    </goal>
    <goal name="sublist_is_satisfiable_clauselist.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1751538"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152242"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.18" steps="44714"/></proof>
     </goal>
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1090093"/></proof>
     <proof prover="2"><result status="valid" time="0.38" steps="51134"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb_generic" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10250884"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="765763"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="smb_generic.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12265234"/></proof>
  <proof prover="2"><result status="valid" time="0.48" steps="72271"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2"><result status="valid" time="0.38" steps="53725"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="not_subset_spec_test" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2719674"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114161"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_test.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1428122"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130325"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="not_subset_spec_test.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_test.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.21" steps="44816"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
    </goal>
    <goal name="not_subset_spec_test.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="115500"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="46"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2801256"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124941"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="equality_is_equal_list&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3682332"/></proof>
  <proof prover="2"><result status="valid" time="0.22" steps="45060"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="42786"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527581"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119434"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="equality_is_equal_list&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.24" steps="39396"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="42601"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="39553"/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="45029"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2406598"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115325"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_equal_list_reflexive&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2514671"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42817"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_equal_list">
   <goal name="is_equal_list_reflexive&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2515158"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165611"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="is_equal_list_reflexive&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2336425"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112270"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="is_equal_list_reflexive&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="42754"/></proof>
   </goal>
   <goal name="is_equal_list_reflexive&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="42868"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="42997"/></proof>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423557"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="45709"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1580198"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="64851"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="43299"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="43096"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="264"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="96255"/></proof>
   <proof prover="4"><result status="valid" time="0.05" steps="264"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="43096"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2997534"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129390"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="43036"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.27" steps="47469"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="191"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6780028"/></proof>
   <proof prover="2"><result status="timeout" time="2.00" steps="147607"/></proof>
   <proof prover="4"><result status="valid" time="0.04" steps="191"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.28" steps="47469"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_ref" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="43625"/></proof>
 </goal>
 <goal name="permut_trans" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="43743"/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="45605"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="44961"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="50695"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080190"/></proof>
 <proof prover="2"><result status="valid" time="0.39" steps="67744"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2081573"/></proof>
 <proof prover="2"><result status="valid" time="0.28" steps="52170"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_cl1_cl2" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="44926"/></proof>
 </goal>
 <goal name="concat_with_element" proved="true">
 <proof prover="2"><result status="valid" time="0.32" steps="55442"/></proof>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1454073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105159"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_concat_not_mem_l1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1459543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98112"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.29" steps="56304"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910038"/></proof>
 <proof prover="2"><result status="valid" time="0.27" steps="51998"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_permut" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1553188"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121707"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_permut.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1725343"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118513"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="permut">
   <goal name="removeFromList_permut.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_permut.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1655081"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119617"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(x = elem)">
     <goal name="removeFromList_permut.0.0.0.0" expl="true case" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="49492"/></proof>
     </goal>
     <goal name="removeFromList_permut.0.0.0.1" expl="false case" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1657192"/></proof>
     <proof prover="2"><result status="valid" time="0.22" steps="48785"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_permut_concat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2091139"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122792"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_permut_concat.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1626528"/></proof>
  <proof prover="2"><result status="valid" time="0.53" steps="80460"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_elem_not_in_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424464"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122344"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_elem_not_in_list.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2419393"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136747"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="49979"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="857767"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="312454"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="107639"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="44"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="108425"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="44"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255490"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111610"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2395037"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107447"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.12" steps="41378"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="44519"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="40666"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2399925"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108239"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="41827"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="48"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="107774"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="116600"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4704247"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125330"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="43726"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.27" steps="50703"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.25" steps="51183"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_for_all" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1390617"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="71842"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_for_all.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2154148"/></proof>
  <proof prover="2"><result status="valid" time="0.25" steps="54537"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_general" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="47557"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_general.0" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="46119"/></proof>
  </goal>
  <goal name="not_subset_general.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2443561"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118174"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_general.1.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2202787"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140169"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_general.1.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="48145"/></proof>
    </goal>
    <goal name="not_subset_general.1.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778385"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="198244"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.22" steps="50647"/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778925"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106286"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="not_subset_spec">
      <goal name="not_subset_general.1.0.1.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="not_subset_general.1.0.1.1.0.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2297837"/></proof>
       <proof prover="2"><result status="valid" time="1.67" steps="178272"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="not_subset_general.1.0.1.1.0.1" proved="true">
       <proof prover="2"><result status="valid" time="0.10" steps="41215"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_numOfSubset_0" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2503073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121511"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_numOfSubset_0.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2644547"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125048"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_numOfSubset_0.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.27" steps="52620"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="475"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2673230"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116569"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_0_not_subset&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1353144"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="115655"/></proof>
  <proof prover="4"><result status="valid" time="0.04" steps="152"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="599401"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="127561"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="45"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1453114"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73242"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.2.0" expl="VC for numOfSubset_0_not_subset" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="48266"/></proof>
    </goal>
    <goal name="numOfSubset_0_not_subset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="106091"/></proof>
    <proof prover="4"><result status="valid" time="0.09" steps="215"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="notSubset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="51005"/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_1" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="50393"/></proof>
 </goal>
 <goal name="addSubset_to_numOfSubset" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="53229"/></proof>
 </goal>
 <goal name="removeNumOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2038765"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150335"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeNumOfSubset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1522274"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167842"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeNumOfSubset.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="122559"/></proof>
   <proof prover="4"><result status="valid" time="0.43" steps="2594"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_clauselist_c_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1132002"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116127"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_clauselist_c_1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1498814"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130104"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" proved="true" arg1="(exists set p. mem1 (set,p) clauselist /\ subset set c)">
   <goal name="numOfSubset_clauselist_c_1.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="48583"/></proof>
   </goal>
   <goal name="numOfSubset_clauselist_c_1.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1268318"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="(forall set1:fset atomicformula, p1:rightside. mem1 (set1,p1) (removeFromList (set, p) clauselist) -&gt; (not subset set1 c))">
    <goal name="numOfSubset_clauselist_c_1.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.20" steps="49065"/></proof>
    </goal>
    <goal name="numOfSubset_clauselist_c_1.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1220980"/></proof>
    <proof prover="2"><result status="valid" time="0.24" steps="49911"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1_num_occ" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1973987"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="226357"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1_num_occ.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1026651"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129831"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1_num_occ.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="130162"/></proof>
   <proof prover="4"><result status="valid" time="0.18" steps="1415"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1561499"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118745"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2122453"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="610484"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.71" steps="93920"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="1869"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2009871"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138025"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="50157"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2370706"/></proof>
  <proof prover="2"><result status="valid" time="0.24" steps="53129"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28" steps="57577"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2662931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134022"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="not_subset_spec" arg2="in" arg3="Requires">
   <goal name="not_subset_permut&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="destruct_term" proved="true" arg1="clauselist">
    <goal name="not_subset_permut&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1269894"/></proof>
    <proof prover="2"><result status="valid" time="1.13" steps="129276"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="not_subset_permut&#39;vc.3.0.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1063516"/></proof>
    <proof prover="2"><result status="valid" time="0.23" steps="49828"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equality_add" proved="true">
 <proof prover="2"><result status="valid" time="0.41" steps="68789"/></proof>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="480279"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="196776"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_basecase&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1495979"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168156"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_basecase&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.20" steps="50557"/></proof>
     </goal>
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1473231"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166910"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.32" steps="57875"/></proof>
      </goal>
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.28" steps="60906"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses_inductive_case2&#39;vc" expl="VC for removeTwoClauses_inductive_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1936611"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168015"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_inductive_case2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1829057"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149853"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.22" steps="51575"/></proof>
     </goal>
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1776803"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137772"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.33" steps="58685"/></proof>
      </goal>
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1795595"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="209845"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem2 clauselist)">
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF elem21) c)">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0" expl="postcondition" proved="true">
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2"><result status="valid" time="0.22" steps="52140"/></proof>
         </goal>
         <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.1" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1799048"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="199284"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.1.0" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1756312"/></proof>
          <proof prover="2"><result status="valid" time="0.34" steps="61520"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0.1.1" expl="postcondition" proved="true">
          <proof prover="2"><result status="valid" time="0.33" steps="64799"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1885864"/></proof>
 <proof prover="2"><result status="valid" time="0.30" steps="57808"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138055"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119580"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1837167"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138583"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1831857"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135932"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
    <goal name="removeFromList_algorithmA&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.13" steps="48843"/></proof>
      </goal>
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1221720"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152797"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.25" steps="55547"/></proof>
       </goal>
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.31" steps="57160"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7297570"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="715499"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="55244"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="53228"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6285900"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="786667"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1979662"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123868"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1575264"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120543"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1915190"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="683215"/></proof>
      <proof prover="2"><result status="valid" time="0.16" steps="51133"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.98" steps="1638"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5665152"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="781552"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" proved="true" arg1="H">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.0" expl="true case (postcondition)" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1665005"/></proof>
       <proof prover="2"><result status="valid" time="0.22" steps="51140"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="1.17" steps="1655"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1" expl="true case (postcondition)" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1648914"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120014"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" proved="true" arg1="Hinst" arg2="(pick c)">
        <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1.0" expl="true case (postcondition)" proved="true">
        <proof prover="2"><result status="timeout" time="1.00" steps="115652"/></proof>
        <proof prover="4"><result status="valid" time="0.39" steps="1668"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="113802"/></proof>
   <proof prover="4"><result status="valid" time="1.28" steps="1568"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723350"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="57644"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="bot_not_in_set_then_sat_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="55349"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="53306"/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3128856"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138541"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_set">
   <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0" expl="VC for bot_not_in_set_then_sat_set" proved="true">
   <transf name="exists" proved="true" arg1="(val_all_top)">
    <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="50973"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p" proved="true">
 <proof prover="0"><result status="valid" time="0.20" steps="350350"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="136961"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2"><result status="valid" time="0.30" steps="59862"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3347062"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="52841"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case3" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2"><result status="valid" time="0.23" steps="53015"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case4" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="53648"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1412420"/></proof>
 <proof prover="2"><result status="valid" time="0.16" steps="53068"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2834289"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="135194"/></proof>
 <proof prover="4"><result status="valid" time="0.08" steps="444"/></proof>
 </goal>
 <goal name="removeFromList_not_empty_setc_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2241812"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116095"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_not_empty_setc_clauselist.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8510920"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="690191"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_not_empty_setc_clauselist.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.39" steps="73250"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="979345"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123441"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_top_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="53281"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.19" steps="56879"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2269024"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164847"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="137037"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" proved="true" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0" proved="true">
       <transf name="subst" proved="true" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0" proved="true">
        <proof prover="2"><result status="valid" time="0.21" steps="60045"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2002335"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129292"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.92" steps="125195"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.37" steps="2450"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1963047"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117628"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_conjuction_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1183404"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124935"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case1_conjuction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.19" steps="57107"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2843633"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126702"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5746229"/></proof>
      <proof prover="2"><result status="valid" time="0.20" steps="57254"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2231126"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150763"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.61" steps="95772"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.24" steps="1576"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2"><result status="valid" time="0.20" steps="60527"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.33" steps="60724"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.35" steps="60935"/></proof>
 </goal>
 <goal name="case2_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1965027"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="193193"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case2_top_imples_p.0" proved="true">
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.24" steps="52825"/></proof>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2413194"/></proof>
      <proof prover="2"><result status="valid" time="0.20" steps="57675"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_top_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2039074"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124350"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1968581"/></proof>
       <proof prover="2"><result status="valid" time="0.42" steps="69636"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.56" steps="3449"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1307008"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="281647"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case2_conjunction_imples_p.0" proved="true">
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="53044"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2820755"/></proof>
      <proof prover="2"><result status="valid" time="0.21" steps="57925"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2035166"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126616"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1882579"/></proof>
       <proof prover="2"><result status="valid" time="0.48" steps="74697"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.41" steps="1976"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2"><result status="valid" time="0.29" steps="65326"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_top_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2"><result status="valid" time="0.22" steps="62119"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="61931"/></proof>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1871066"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135753"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="64041"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1334937"/></proof>
  <proof prover="2"><result status="valid" time="0.40" steps="69204"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1916618"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138195"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="1600193"/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="277324"/></proof>
   <proof prover="4" timelimit="5"><result status="valid" time="2.50" steps="3886"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982709"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="253248"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982180"/></proof>
   <proof prover="2"><result status="valid" time="0.22" steps="57045"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="67582"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="59482"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.6" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="51574"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1098383"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140258"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="111827"/></proof>
   <proof prover="4"><result status="valid" time="0.05" steps="53"/></proof>
   </goal>
   <goal name="case3_induction_general&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="117505"/></proof>
   <proof prover="4"><result status="valid" time="0.38" steps="1201"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424592"/></proof>
 <proof prover="2"><result status="valid" time="0.34" steps="67471"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
</file>
</why3session>
