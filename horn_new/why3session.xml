<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="horn_new.mlw"/>
<theory name="Eval">
 <goal name="eval_setconjunction_singleton">
 <proof prover="0"><result status="valid" time="0.04" steps="123353"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="153022"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add">
 <proof prover="0"><result status="timeout" time="1.00" steps="3622511"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="156651"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="add_eval">
 <proof prover="2"><result status="valid" time="0.11" steps="30958"/></proof>
 </goal>
 <goal name="p_implies_bot_sat1">
 <proof prover="0"><result status="timeout" time="1.00" steps="2142076"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="top_is_satisfiable">
 <proof prover="0"><result status="timeout" time="1.00" steps="4328253"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="if_unsat_then_not_sat">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set">
 <proof prover="0"><result status="timeout" time="1.00" steps="3754137"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="p_implies_bot_sat2">
 <proof prover="0"><result status="timeout" time="1.00" steps="2069143"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="bot_is_unsatisfiable">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="p_implies_bot_sat">
 <proof prover="2"><undone/></proof>
 </goal>
</theory>
<theory name="Horn_Logic">
 <goal name="removeFromList_numocc">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150509"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeFromList_numocc_2">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123833"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeFromList_length">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138252"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="findOneSubset_if_only_if_some">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="38064"/></proof>
 </goal>
 <goal name="findOneSubset_mem_subset">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="38307"/></proof>
 </goal>
 <goal name="findOneSubset_nil">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="460256"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="findOneSubset_notsubset">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="259748"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="G">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="410185"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="if_mem_then_subset_set_smb">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="97512"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="subset_set_smb_clauselist">
 <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="54746"/></proof>
 </goal>
 <goal name="sublist_subset_set_smb">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161270"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="101909"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104835"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104001"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top">
 <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="48453"/></proof>
 </goal>
 <goal name="subset_of_evalsetconjunction_1">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113517"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="subset_of_evalsetconjunction">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134326"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="contr_exists">
 <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="39838"/></proof>
 </goal>
 <goal name="distr_exists">
 <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="40218"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set">
 <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="43436"/></proof>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="417743"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="smb_generic">
 <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="65976"/></proof>
 </goal>
 <goal name="smb">
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="50638"/></proof>
 </goal>
 <goal name="not_subset_spec_test">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103386"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list">
 <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="45280"/></proof>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive">
 <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="44496"/></proof>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative">
 <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="41417"/></proof>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="permut_ref">
 <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="42045"/></proof>
 </goal>
 <goal name="permut_trans">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="permut_cl1_cl2">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="concat_with_element">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeFromList_concat">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeFromList_permut">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeFromList_permut_concat">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeFromList_elem_not_in_list">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="not_subset_spec_for_all">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="not_subset_general">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="not_subset_numOfSubset_0">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_0">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_1">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="addSubset_to_numOfSubset">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeNumOfSubset">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="numOfSubset_clauselist_c_1">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="numOfSubset_1_num_occ">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="numOfSubset_1">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="set_equality_add">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeTwoClauses_inductive_case2&#39;vc" expl="VC for removeTwoClauses_inductive_case2">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="diff_is_sat_p">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="herbrand_model_case1">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="herbrand_model_case2">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="herbrand_model_case3">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="herbrand_model">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="is_sat_set">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="removeFromList_not_empty_setc_clauselist">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case1_conjuction_imples_p">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case1_general">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case1_general_top_imples_p">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case2_top_imples_p">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case2_general">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case2_general_top_imples_p">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="case3_induction">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="G1">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="unsat_then_bot">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="is_unsat_then_p_is_bot">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="unsat_clauselist_then_exists_one_clause_unsat">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="unsat_induction_general&#39;vc" expl="VC for unsat_induction_general">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="G2">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="unsat_induction">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="horn_sat_soundness">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="horn_unsat_soundness">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="G3">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="GG">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="not_unsat_set_sat_set">
 <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="57133"/></proof>
 </goal>
 <goal name="not_unsat_clause_sat_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2114290"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112007"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="not_unsat_sat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2134295"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136389"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="not_sat_unsat">
 <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="56701"/></proof>
 </goal>
 <goal name="horn_sat_completeness">
 <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="58696"/></proof>
 </goal>
 <goal name="horn_unsat_completeness">
 <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="58741"/></proof>
 </goal>
 <goal name="G4">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="G5">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="G6">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="sat_clause">
 <proof prover="2" obsolete="true"><undone/></proof>
 </goal>
 <goal name="satisf_clauselist_all_mem_satisf">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120013"/></proof>
 <proof prover="4" obsolete="true"><undone/></proof>
 </goal>
</theory>
<theory name="Hornify">
 <goal name="eval_union&#39;vc" expl="VC for eval_union">
 <proof prover="0"><result status="timeout" time="1.00" steps="3496507"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="128747"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="union_eval_empty">
 <proof prover="2"><result status="valid" time="0.19" steps="36760"/></proof>
 </goal>
 <goal name="union_eval_samesingleton">
 <proof prover="2"><result status="valid" time="0.23" steps="40995"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton">
 <proof prover="0"><result status="timeout" time="1.00" steps="530222"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="124888"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF">
 <proof prover="2"><result status="valid" time="0.14" steps="36365"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma">
 <proof prover="2"><result status="valid" time="0.19" steps="39294"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1">
 <proof prover="0"><result status="timeout" time="1.00" steps="3699636"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="163934"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
 <proof prover="0"><result status="timeout" time="1.00" steps="3978492"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="117529"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset">
 <proof prover="2"><result status="valid" time="0.23" steps="43407"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent">
 <proof prover="2"><result status="timeout" time="1.00" steps="155786"/></proof>
 <proof prover="4"><result status="valid" time="0.31" steps="1825"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="2"><result status="valid" time="0.18" steps="38554"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList">
 <proof prover="2"><result status="valid" time="0.22" steps="44441"/></proof>
 </goal>
</theory>
<theory name="Converts">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF">
 <proof prover="2"><result status="valid" time="0.15" steps="28251"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF">
 <proof prover="2"><result status="valid" time="0.13" steps="27394"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL">
 <proof prover="2"><result status="valid" time="0.13" steps="28065"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS">
 <proof prover="2"><result status="valid" time="0.14" steps="28030"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation">
 <proof prover="2"><result status="valid" time="0.10" steps="26200"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" >
  <goal name="convertAFtoPL_evaluation.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="PLtoAF_AFtoPL.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0">
   <transf name="compile_match" >
    <goal name="PLtoAF_AFtoPL.0.0.0">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0">
     <proof prover="2"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1">
     <proof prover="2"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2">
     <proof prover="2"><result status="valid" time="0.06" steps="23704"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="RStoAF_AFtoRS.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0">
   <proof prover="2"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="AFtoRS_RStoAF.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0">
    <proof prover="2"><result status="valid" time="0.13" steps="27620"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1">
    <proof prover="2"><result status="valid" time="0.10" steps="26550"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SAT">
 <goal name="rs_unsat_then_not_sat">
 <proof prover="2"><result status="valid" time="0.15" steps="32593"/></proof>
 </goal>
 <goal name="af_unsat_then_not_sat">
 <proof prover="2"><result status="valid" time="0.15" steps="32789"/></proof>
 </goal>
 <goal name="set_unsat_then_not_sat">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="20151437"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="32992"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="clause_unsat_then_not_sat">
 <proof prover="2"><result status="valid" time="0.15" steps="33195"/></proof>
 </goal>
 <goal name="clauselist_unsat_then_not_sat">
 <proof prover="2"><result status="valid" time="0.15" steps="33398"/></proof>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set">
 <proof prover="0"><result status="timeout" time="1.00" steps="3994279"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="131114"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set">
 <proof prover="2"><result status="valid" time="0.18" steps="39103"/></proof>
 </goal>
 <goal name="p_implies_bot_sat1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2149802"/></proof>
 <proof prover="2"><result status="valid" time="1.22" steps="155660"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="p_implies_bot_sat2">
 <proof prover="0"><result status="timeout" time="1.00" steps="2038428"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="131677"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Horn">
 <goal name="length_equal_listset_to_list_fset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3665476"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="227829"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="length_equal_listset_to_list_fset.0">
  <transf name="induction_arg_ty_lex" arg1="cl">
   <goal name="length_equal_listset_to_list_fset.0.0">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137878"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="636"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_prog&#39;vc" expl="VC for removeFromList_prog">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2344047"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="118690"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1909438"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146393"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="64825"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.0.0" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1910792"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="62287"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.0.1" expl="variant decrease">
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.0.1.0" expl="variant decrease">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2266318"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.0.1.0.0" expl="variant decrease">
     <proof prover="0" obsolete="true"><result status="valid" time="0.16" steps="268742"/></proof>
     <proof prover="2" obsolete="true"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.4.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1136193"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="1.71" steps="5511"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2094926"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141213"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.1.0" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4724996"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="447139"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.1.0.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2005174"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114777"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.1.0.0.0" expl="precondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1596697"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119869"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
      <goal name="algorithmA&#39;vc.1.0.0.0.0" expl="precondition">
      <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
       <goal name="algorithmA&#39;vc.1.0.0.0.0.0" expl="precondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1606376"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131960"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.1.0.0.0.0.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="56996"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.1.0.0.0.0.0.1" expl="precondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1607868"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130590"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="algorithmA&#39;vc.1.0.0.0.0.0.1.0" expl="destruct premise">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1607163"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132456"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="algorithmA&#39;vc.5.0.0.0.0.0.1.1.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="54863"/></proof>
          </goal>
          <goal name="algorithmA&#39;vc.5.0.0.0.0.0.1.1.1" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1607117"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130536"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="algorithmA&#39;vc.5.0.0.0.0.0.1.1.1.0" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="60127"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.27" steps="1431"/></proof>
           </goal>
           <goal name="algorithmA&#39;vc.5.0.0.0.0.0.1.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="60871"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="algorithmA&#39;vc.1.0.0.0.0.0.1.1" expl="precondition">
         <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="56994"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.5.1.1.0" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="2114711"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="140579"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
      <goal name="algorithmA&#39;vc.5.1.1.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
       <goal name="algorithmA&#39;vc.5.1.1.0.0.0" expl="postcondition">
       <proof prover="0"><result status="timeout" time="1.00" steps="1920480"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="131295"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0" expl="destruct premise">
        <proof prover="2"><undone/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1" expl="postcondition">
        <proof prover="0"><result status="timeout" time="1.00" steps="2162014"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="126274"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0" expl="destruct premise">
         <proof prover="2"><undone/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1" expl="postcondition">
         <proof prover="0"><result status="timeout" time="1.00" steps="2134790"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="135679"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.0" expl="destruct premise">
          <proof prover="2"><undone/></proof>
          </goal>
          <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1" expl="postcondition">
          <proof prover="0"><result status="timeout" time="1.00" steps="2206923"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="133676"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.0" expl="postcondition">
           <proof prover="2"><undone/></proof>
           </goal>
           <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.1" expl="postcondition">
           <proof prover="0"><result status="timeout" time="1.00" steps="2127846"/></proof>
           <proof prover="2"><result status="timeout" time="1.00" steps="138395"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.1.0" expl="postcondition">
            <proof prover="0"><result status="timeout" time="1.00" steps="2146524"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="137072"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="induction_arg_ty_lex" arg1="clauselist">
             <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.1.0.0" expl="VC for algorithmA">
             <proof prover="2"><undone/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.1.1" expl="postcondition">
            <proof prover="0"><result status="timeout" time="1.00" steps="1735632"/></proof>
            <proof prover="2"><result status="timeout" time="1.00" steps="135731"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.1.1.0" expl="postcondition">
             <proof prover="2"><undone/></proof>
             </goal>
             <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.1.1.1" expl="postcondition">
             <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5886284"/></proof>
             <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="397184"/></proof>
             <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
             <transf name="induction_arg_ty_lex" arg1="clauselist">
              <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.1.1.1.0" expl="VC for algorithmA">
              <proof prover="2"><undone/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.5.1.0" expl="postcondition">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="4218055"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="371718"/></proof>
    <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
     <goal name="algorithmA&#39;vc.5.1.0.0" expl="postcondition">
     <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
      <goal name="algorithmA&#39;vc.5.1.0.0.0" expl="postcondition">
      <proof prover="0"><result status="timeout" time="1.00" steps="2125512"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="143359"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.1.0.0.0.0" expl="destruct premise">
       <proof prover="2"><undone/></proof>
       </goal>
       <goal name="algorithmA&#39;vc.5.1.0.0.0.1" expl="postcondition">
       <proof prover="0"><result status="timeout" time="1.00" steps="2107631"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="136452"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.5.1.0.0.0.1.0" expl="destruct premise">
        <proof prover="2"><undone/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.5.1.0.0.0.1.1" expl="postcondition">
        <proof prover="0"><result status="timeout" time="1.00" steps="2154964"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="136460"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="algorithmA&#39;vc.5.1.0.0.0.1.1.0" expl="destruct premise">
         <proof prover="2"><undone/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.5.1.0.0.0.1.1.1" expl="postcondition">
         <proof prover="0"><result status="timeout" time="1.00" steps="2119860"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="133460"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="algorithmA&#39;vc.5.1.0.0.0.1.1.1.0" expl="postcondition">
          <proof prover="2"><undone/></proof>
          </goal>
          <goal name="algorithmA&#39;vc.5.1.0.0.0.1.1.1.1" expl="postcondition">
          <proof prover="2"><undone/></proof>
          <proof prover="4"><result status="valid" time="0.94" steps="2489"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2105472"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="248406"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.5.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2223550"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139389"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="induction_arg_ty_lex" arg1="clauselist">
     <goal name="algorithmA&#39;vc.5.1.0.0" expl="VC for algorithmA">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142749"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.16" steps="867"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.5.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2137170"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118371"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
     <goal name="algorithmA&#39;vc.5.1.1.0" expl="postcondition">
     <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
      <goal name="algorithmA&#39;vc.5.1.1.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2058233"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138307"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.1.1.0.0.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="57773"/></proof>
       </goal>
       <goal name="algorithmA&#39;vc.5.1.1.0.0.1" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080041"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132535"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.5.1.1.0.0.1.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="57771"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2064325"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134711"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="55643"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2064394"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133450"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1.1.0" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="77120"/></proof>
          </goal>
          <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="valid" time="0.47" steps="85570"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761229"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139206"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.2.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2250084"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134419"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.2.0.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2061764"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111579"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.2.0.0.0" expl="precondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117718"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="195"/></proof>
     </goal>
     <goal name="algorithmA&#39;vc.4.1.1.1" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="257494"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109124"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.4.1.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="60350"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2035503"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142785"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.4.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2100157"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111623"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.4.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="258013"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="60247"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="algorithmA&#39;vc.4.1.1.0" expl="postcondition">
     <proof prover="2"><undone/></proof>
     <proof prover="4"><result status="valid" time="0.05" steps="195"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.4.1.0" expl="postcondition">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401492"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146149"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.3.0" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5180706"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="416618"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="assert" arg1="(length (listset_to_listfset o) &lt; length (listset_to_listfset clauselist))">
    <goal name="algorithmA&#39;vc.3.0.0" expl="asserted formula">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109369"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.13" steps="476"/></proof>
    </goal>
    <goal name="algorithmA&#39;vc.3.0.1" expl="precondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4655795"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="650039"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" arg1="(length (listset_to_listfset o) = length o)">
     <goal name="algorithmA&#39;vc.3.0.1.0" expl="asserted formula">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2215796"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137990"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" arg1="(length (listset_to_listfset clauselist) = length clauselist)">
      <goal name="algorithmA&#39;vc.3.0.1.0.0" expl="asserted formula">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2448998"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158622"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="induction_arg_ty_lex" arg1="clauselist">
       <goal name="algorithmA&#39;vc.3.0.1.0.0.0">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4920176"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="75325"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="algorithmA&#39;vc.3.0.1.0.1" expl="asserted formula">
      <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="61048"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.3.0.1.1" expl="precondition">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4823108"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="277327"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="induction_arg_ty_lex" arg1="o">
      <goal name="algorithmA&#39;vc.3.0.1.1.0" expl="VC for algorithmA">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1147276"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="68790"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.0.1" expl="variant decrease">
   <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="71147"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="62253"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138125"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134305"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.5.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2088011"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138834"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.5.0.0" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5169960"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="569973"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="eliminate_let" >
     <goal name="algorithmA&#39;vc.5.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1300265"/></proof>
     <proof prover="2" obsolete="true"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.5.1.1" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4577493"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="477096"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
     <goal name="algorithmA&#39;vc.5.1.1.0" expl="postcondition">
     <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
      <goal name="algorithmA&#39;vc.5.1.1.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2203640"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142243"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.1.1.0.0.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2060711"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137829"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.4.1.0.0.0.1.0" expl="destruct premise">
        <proof prover="2"><undone/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.4.1.0.0.0.1.1" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2163536"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138320"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="algorithmA&#39;vc.4.1.0.0.0.1.1.0" expl="destruct premise">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1359158"/></proof>
         <proof prover="2"><undone/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="1.94" steps="2536"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.4.1.0.0.0.1.1.1" expl="postcondition">
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.90" steps="2549"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="algorithmA&#39;vc.5.1.1.0.0.1" expl="postcondition">
       <proof prover="0"><result status="timeout" time="1.00" steps="1344272"/></proof>
       <proof prover="2"><undone/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2230152"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="65005"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.5.1.0" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5090140"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="610958"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="eliminate_let" >
     <goal name="algorithmA&#39;vc.5.1.0.0" expl="postcondition">
     <transf name="destruct" arg1="H">
      <goal name="algorithmA&#39;vc.5.1.1.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2095061"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121865"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="algorithmA&#39;vc.5.1.1.0.0.0" expl="postcondition">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5009850"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="566154"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="destruct" arg1="H">
        <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2093368"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134147"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
         <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
          <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0" expl="postcondition">
          <transf name="destruct" arg1="Hinst">
           <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.0" expl="destruct premise">
           <proof prover="2"><undone/></proof>
           </goal>
           <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2101868"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133345"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.1.0" expl="destruct premise">
            <proof prover="2"><undone/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.1.1" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2126434"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131263"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.1.1.0" expl="destruct premise">
             <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="11796"/></proof>
             <proof prover="2"><undone/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="58"/></proof>
             </goal>
             <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.1.1.1" expl="postcondition">
             <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4996575"/></proof>
             <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="525261"/></proof>
             <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.1.1.1.0" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1546078"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134500"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="induction_arg_ty_lex" arg1="clauselist">
               <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.1.1.1.0.0" expl="VC for algorithmA">
               <proof prover="2"><undone/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.1.1.1.1" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="262166"/></proof>
              <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="68949"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="220"/></proof>
              <transf name="induction_arg_ty_lex" arg1="clauselist">
               <goal name="algorithmA&#39;vc.5.1.1.0.0.0.0.0.0.1.1.1.1.0" expl="VC for algorithmA">
               <proof prover="2"><undone/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1" expl="postcondition">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5004749"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="566797"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
         <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0" expl="postcondition">
         <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
          <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2178437"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143790"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0.0.0" expl="destruct premise">
           <proof prover="2"><undone/></proof>
           </goal>
           <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0.0.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2168402"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141576"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0.0.1.0" expl="destruct premise">
            <proof prover="2"><undone/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0.0.1.1" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160542"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137410"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0.0.1.1.0" expl="destruct premise">
             <proof prover="2"><undone/></proof>
             </goal>
             <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0.0.1.1.1" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2129197"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140955"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="induction_arg_ty_lex" arg1="clauselist">
              <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.0.0.1.1.1.0" expl="VC for algorithmA">
              <proof prover="2"><undone/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="algorithmA&#39;vc.5.1.1.0.1" expl="postcondition">
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="1.03" steps="3298"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.5.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2238343"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137289"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.5.1.1.0" expl="postcondition">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4760847"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="794443"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="induction_arg_ty_lex" arg1="clauselist">
      <goal name="algorithmA&#39;vc.5.1.1.0.0" expl="VC for algorithmA">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6027565"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="68457"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="888"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.5.1.1.1" expl="postcondition">
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="63629"/></proof>
 </goal>
 <goal name="p_implies_bot_sat1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2016116"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="1.42" steps="163397"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="p_implies_bot_sat1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1965659"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="addSubset_to_numOfSubset">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="add_eval">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="979345"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123441"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_top_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_top_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2269024"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164847"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="137037"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0" expl="destruct premise">
       <transf name="subst" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0" expl="destruct premise">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2300008"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2002335"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="58685"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.1.1.0" expl="destruct premise">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3789846"/></proof>
       <proof prover="2"><undone/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="case1_top_imples_p.1.0.0.1.1.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277177"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145192"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case1_top_imples_p.1.0.0.1.1.1.0">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3838032"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="638593"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0">
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.87" steps="5331"/></proof>
         </goal>
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1">
         <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="212275"/></proof>
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.86" steps="5329"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case1_top_imples_p.1.0.0.1.1.1.1">
        <proof prover="0"><result status="timeout" time="1.00" steps="2217561"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4"><result status="timeout" time="2.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="case1_top_imples_p.0.0.0.1">
     <proof prover="2"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="case1_top_imples_p.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="permut_trans">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="is_sat_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2354252"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144913"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="is_sat_set.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2311300"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="233119"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_set" arg2="in" arg3="H2">
   <goal name="is_sat_set.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2325735"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126761"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="introduce_exists" >
    <goal name="is_sat_set.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2314169"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117039"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" arg1="(is_satisfiable_clause (x1,x))">
     <goal name="is_sat_set.0.0.0.0" expl="asserted formula">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2329029"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118239"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" arg1="(is_satisfiable_set x1)">
      <goal name="is_sat_set.0.0.0.0.0" expl="asserted formula">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2295216"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116967"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="unfold" arg1="is_satisfiable_set" arg2="in" arg3="h">
       <goal name="is_sat_set.0.0.0.0.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2328677"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="223241"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" arg1="(is_satisfiable_clause (x1,x))">
        <goal name="is_sat_set.0.0.0.0.0.0.0" expl="asserted formula">
        <proof prover="2"><undone/></proof>
        </goal>
        <goal name="is_sat_set.0.0.0.0.0.0.1">
        <proof prover="2"><undone/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="is_sat_set.0.0.0.0.1" expl="asserted formula">
      <proof prover="2"><undone/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="is_sat_set.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2441253"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="239861"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" arg1="(is_satisfiable_set x1)">
      <goal name="is_sat_set.0.0.0.1.0" expl="asserted formula">
      <proof prover="2"><undone/></proof>
      </goal>
      <goal name="is_sat_set.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338176"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="is_sat_set.1">
  <proof prover="2"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1454073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105159"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_concat_not_mem_l1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1459543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98112"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equality_add">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="462678"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="54514"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.0" expl="variant decrease">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3344032"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45503"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" arg1="(cardinal s &gt; 1)">
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0" expl="true case (postcondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197408"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1" expl="false case (postcondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2810011"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="45516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1.0" expl="false case (postcondition)">
    <transf name="instantiate" arg1="Hinst" arg2="s">
     <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1.0.0" expl="false case (postcondition)">
     <transf name="destruct" arg1="Hinst">
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1.0.0.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5846692"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="541"/></proof>
      </goal>
      <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1.0.0.1" expl="false case (postcondition)">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131944"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="39"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910038"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2673230"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116569"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset_0_not_subset&#39;vc.0" expl="assertion">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1453114"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="73242"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.0.0" expl="VC for numOfSubset_0_not_subset">
   <transf name="split_vc" >
    <goal name="numOfSubset_0_not_subset&#39;vc.0.0.0" expl="assertion">
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="225"/></proof>
    </goal>
    <goal name="numOfSubset_0_not_subset&#39;vc.0.0.1" expl="assertion">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="599401"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="49"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1353144"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="161"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2009871"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138025"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2370706"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition">
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2662931"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134022"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="not_subset_spec" arg2="in" arg3="Requires">
   <goal name="not_subset_permut&#39;vc.3.0" expl="postcondition">
   <transf name="destruct_term" arg1="clauselist">
    <goal name="not_subset_permut&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1271690"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="not_subset_permut&#39;vc.3.0.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1068885"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1307008"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="281647"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2013086"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2035166"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="59612"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1263000"/></proof>
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1561038"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="240998"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1604635"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154844"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0">
         <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="57397"/></proof>
         <proof prover="2"><undone/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="56"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6771863"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="684121"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1806465"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165169"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="instantiate" arg1="is_sat_set" arg2="clauselist,c">
           <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1789965"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174810"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0.0" expl="destruct premise">
            <proof prover="2"><undone/></proof>
            </goal>
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0.1">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1808939"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164758"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0.1.0">
             <proof prover="2"><undone/></proof>
             </goal>
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0.1.1">
             <proof prover="2"><undone/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.19" steps="1445"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7055977"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="635812"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="instantiate" arg1="is_sat_set" arg2="clauselist,c">
           <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0">
           <transf name="destruct" arg1="Hinst">
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.0" expl="destruct premise">
            <proof prover="2"><undone/></proof>
            </goal>
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1820817"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172078"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1.0">
             <proof prover="2"><undone/></proof>
             </goal>
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1.1">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1871960"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="256838"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1.1.0">
              <proof prover="2"><undone/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.29" steps="1793"/></proof>
              </goal>
              <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1.1.1">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1762950"/></proof>
              <proof prover="2"><undone/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.50" steps="2859"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1">
        <proof prover="0"><result status="timeout" time="1.00" steps="1554827"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4"><result status="timeout" time="2.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1">
     <proof prover="2"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_unsat_sat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2272882"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141153"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_unsat_sat.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7624259"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="409561"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_unsat_sat.0.0">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="not_unsat_sat.1">
  <proof prover="2"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="case2_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1965027"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="193193"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_top_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_top_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_top_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_top_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2848811"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161597"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_top_imples_p.0.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1565640"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_top_imples_p.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2039074"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="59362"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_top_imples_p.0.0.0.1.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1103452"/></proof>
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
       </goal>
       <goal name="case2_top_imples_p.0.0.0.1.1.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1576148"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="240206"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_top_imples_p.0.0.0.1.1.1.0">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5022930"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="654498"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case2_top_imples_p.0.0.0.1.1.1.1.0">
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="56"/></proof>
         </goal>
         <goal name="case2_top_imples_p.0.0.0.1.1.1.1.1">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1566606"/></proof>
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.51" steps="2953"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case2_top_imples_p.0.0.0.1.1.1.1">
        <proof prover="0"><result status="timeout" time="1.00" steps="1494614"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4"><result status="timeout" time="2.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="case2_top_imples_p.0.0.0.1">
     <proof prover="2"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10103219"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="890249"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1">
  <transf name="unfold" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1">
   <transf name="destruct_term" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3540884"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3860134"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116090"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1">
     <transf name="compile_match" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1">
      <transf name="instantiate" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
       <transf name="destruct" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="21447889"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1453080"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.56" steps="3004"/></proof>
        <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219962"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="793"/></proof>
         <transf name="compile_match" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise">
          <proof prover="2"><undone/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.15" steps="793"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3851970"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163801"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1">
         <transf name="destruct" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4117020"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163766"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
           <proof prover="2"><undone/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
           <proof prover="2"><undone/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955177"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166640"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset_set_smb_clauselist.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2417619"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="206958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="subset_set_smb_clauselist.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="654319"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168986"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="subset_set_smb_clauselist.0.0.0">
    <proof prover="2"><undone/></proof>
    </goal>
    <goal name="subset_set_smb_clauselist.0.0.1">
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="610"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="if_unsat_then_not_sat">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="subset_of_evalsetconjunction_1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2824061"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168386"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset_of_evalsetconjunction_1.0">
  <transf name="exists" arg1="(val_all_top)">
   <goal name="subset_of_evalsetconjunction_1.0.0">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn_unsat_soundness">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2264903"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="63810"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="horn_unsat_soundness.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2175706"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131859"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="((horn_logic clauselist = False) -&gt; (mem ABot (algorithmA_spec clauselist (singleton ATop))))
">
   <goal name="horn_unsat_soundness.0.0" expl="asserted formula">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="horn_unsat_soundness.0.1">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2245775"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131491"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="unsat_induction" arg2="clauselist">
    <goal name="horn_unsat_soundness.0.1.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="horn_unsat_soundness.0.1.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2296997"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119683"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" >
      <goal name="horn_unsat_soundness.0.1.0.0.0">
      <proof prover="2"><undone/></proof>
      </goal>
      <goal name="horn_unsat_soundness.0.1.0.0.1">
      <proof prover="2"><undone/></proof>
      </goal>
      <goal name="horn_unsat_soundness.0.1.0.0.2">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2267940"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="horn_unsat_soundness.0.1.0.1">
     <proof prover="2"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2723350"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="57644"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="bot_not_in_set_then_sat_set&#39;vc.0" expl="variant decrease">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.1" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="bot_not_in_set_then_sat_set&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3128856"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138541"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_set">
   <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0" expl="VC for bot_not_in_set_then_sat_set">
   <transf name="exists" arg1="(val_all_top)">
    <goal name="bot_not_in_set_then_sat_set&#39;vc.2.0.0">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_general">
 <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="47557"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_general.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2443561"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118174"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_general.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2202787"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140169"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="not_subset_general.0.0.0">
    <proof prover="2"><undone/></proof>
    </goal>
    <goal name="not_subset_general.0.0.1">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1499880"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="648797"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="destruct" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="778925"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106286"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" arg1="not_subset_spec">
      <goal name="not_subset_general.1.0.1.1.0">
      <transf name="split_vc" >
       <goal name="not_subset_general.1.0.1.1.0.0">
       <proof prover="0"><result status="timeout" time="1.00" steps="2160003"/></proof>
       <proof prover="2"><undone/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="not_subset_general.1.0.1.1.0.1">
       <proof prover="2"><undone/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="not_subset_general.1">
  <proof prover="2"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="if_satisf_then_not_bottom">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138055"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119580"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1837167"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138583"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1831857"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135932"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
    <goal name="removeFromList_algorithmA&#39;vc.0.0.0" expl="postcondition">
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0" expl="postcondition">
     <transf name="destruct" arg1="Hinst">
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1221720"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152797"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1151625"/></proof>
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2072136"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135362"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.0" expl="destruct premise">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160085"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.1" expl="postcondition">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7870051"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="421341"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.1.0" expl="postcondition">
         <proof prover="2"><undone/></proof>
         </goal>
         <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1.1.1.1" expl="postcondition">
         <proof prover="2"><undone/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0.1" expl="postcondition">
      <proof prover="2"><undone/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1871066"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135753"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1334937"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.1" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.2" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.3" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1879508"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.4" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1821812"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131841"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.4.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1939225"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="624330"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="2.39" steps="5119"/></proof>
   <transf name="split_vc" >
    <goal name="case3_induction_general&#39;vc.4.0.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1932986"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159558"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" >
     <goal name="case3_induction_general&#39;vc.4.0.0.0" expl="precondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1932227"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156304"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H">
      <goal name="case3_induction_general&#39;vc.4.0.0.0.0" expl="precondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2197737"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152986"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2187676"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158784"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="replace" arg1="(algorithmA_spec clauselist c)" arg2="(algorithmA_spec (removeFromList (x1, x) clauselist)
       (add (convertRStoAF x) c))">
        <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0" expl="destruct premise">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1915673"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="237854"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="is_sat_set" arg2="clauselist,c">
         <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0" expl="destruct premise">
         <transf name="destruct" arg1="Hinst">
          <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.0" expl="destruct premise">
          <proof prover="2"><undone/></proof>
          </goal>
          <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.1" expl="destruct premise">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1779613"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146899"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.1.0" expl="destruct premise">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423472"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155807"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.1.0.0" expl="destruct premise">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1449171"/></proof>
            <proof prover="2"><undone/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
            <goal name="case3_induction_general&#39;vc.8.2.0.0.1.0.1.0.1.1.0" expl="equality hypothesis">
            <proof prover="2"><undone/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.27" steps="1904"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.1.1" expl="destruct premise">
           <proof prover="2"><undone/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.1" expl="equality hypothesis">
        <proof prover="2"><undone/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="case3_induction_general&#39;vc.4.0.0.0.0.1" expl="precondition">
       <proof prover="2"><undone/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="case3_induction_general&#39;vc.8.2.0.0.0" expl="postcondition">
      <proof prover="2"><undone/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction_general&#39;vc.8.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1850482"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121162"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="57"/></proof>
   <transf name="eliminate_let" >
    <goal name="case3_induction_general&#39;vc.8.2.0" expl="postcondition">
    <proof prover="0"><result status="timeout" time="1.00" steps="1918439"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   <transf name="split_vc" >
    <goal name="case3_induction_general&#39;vc.8.2.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1937299"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146181"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" >
     <goal name="case3_induction_general&#39;vc.8.2.0.0" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="1925431"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction_general&#39;vc.8.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1653921"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4"><result status="valid" time="0.07" steps="225"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.5" expl="precondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982709"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="253248"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.5.0" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982180"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.6" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1916618"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138195"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.6.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1484999"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.7" expl="unreachable point">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.8" expl="postcondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease">
  <proof prover="2"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_induction_general&#39;vc" expl="VC for unsat_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1074455"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132057"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_induction_general&#39;vc.0" expl="unreachable point">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.1" expl="assertion">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1134473"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142757"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="unsat_induction_general&#39;vc.1.0" expl="assertion">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1352949"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139466"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
    <goal name="unsat_induction_general&#39;vc.1.0.0" expl="assertion">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1354483"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130359"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="unsat_induction_general&#39;vc.1.0.0.0" expl="destruct premise">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="unsat_induction_general&#39;vc.1.0.0.1" expl="assertion">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1354353"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129848"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="unsat_induction_general&#39;vc.1.0.0.1.0" expl="destruct premise">
      <proof prover="2"><undone/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.1.0.0.1.1" expl="assertion">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1354752"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130958"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2979977"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136332"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="unsat_induction_general&#39;vc.11.1.0.1.1.1.0" expl="postcondition">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3031678"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="614640"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="unsat_induction_general&#39;vc.11.0.0.1.1.1.1.0" expl="postcondition">
         <proof prover="2"><undone/></proof>
         </goal>
         <goal name="unsat_induction_general&#39;vc.11.0.0.1.1.1.1.1" expl="postcondition">
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.22" steps="1557"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="unsat_induction_general&#39;vc.11.1.0.1.1.1.1" expl="postcondition">
        <proof prover="2"><undone/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1" expl="assertion">
       <proof prover="2"><undone/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="unsat_induction_general&#39;vc.11.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246075"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152187"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="unsat_induction_general&#39;vc.11.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246067"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151659"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="induction_arg_ty_lex" arg1="clauselist">
     <goal name="unsat_induction_general&#39;vc.11.0.0.0" expl="VC for unsat_induction_general">
     <proof prover="0"><result status="timeout" time="1.00" steps="592186"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.2" expl="assertion">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2242907"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="191"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.3" expl="unreachable point">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.4" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1688663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122721"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="(x &lt;&gt; RProp bot1)">
   <goal name="unsat_induction_general&#39;vc.4.0" expl="asserted formula">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.4.1" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1788340"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127092"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(exists y1 y2. mem1 (y1,y2) clauselist /\ is_unsatisfiable_clause (y1,y2))">
    <goal name="unsat_induction_general&#39;vc.4.1.0" expl="asserted formula">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1584311"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="259435"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="introduce_exists" >
     <goal name="unsat_induction_general&#39;vc.4.1.0.0" expl="asserted formula">
     <transf name="assert" arg1="(x &lt;&gt; y2)">
      <goal name="unsat_induction_general&#39;vc.6.1.1.0.0" expl="asserted formula">
      <proof prover="2"><undone/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.6.1.1.0.1" expl="precondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1170943"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="94168"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="assert" arg1="(mem1 (y1,y2) (removeFromList (x1, x) clauselist))">
       <goal name="unsat_induction_general&#39;vc.6.1.1.0.1.0" expl="asserted formula">
       <proof prover="2"><undone/></proof>
       </goal>
       <goal name="unsat_induction_general&#39;vc.6.1.1.0.1.1" expl="precondition">
       <proof prover="2"><undone/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="unsat_induction_general&#39;vc.4.1.1" expl="variant decrease">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.5" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.6" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1718449"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="55920"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="(exists x p. is_unsatisfiable_clause (x,p) /\ mem1 (x,p) clauselist)">
   <goal name="unsat_induction_general&#39;vc.6.0" expl="asserted formula">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1195941"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.6.1" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5138798"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="613223"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="unfold" arg1="is_unsatisfiable_clauselist" arg2="in" arg3="Requires3">
    <goal name="unsat_induction_general&#39;vc.6.1.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1780045"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.7" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.8" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1845259"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134954"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" arg1="(x1 ==&#39; (singleton ATop))">
   <goal name="unsat_induction_general&#39;vc.8.0" expl="true case (precondition)">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="192"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.8.1" expl="false case (precondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2155759"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.9" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.10" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1808070"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.11" expl="postcondition">
  <proof prover="2"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="removeNumOfSubset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2038765"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150335"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeNumOfSubset.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1522274"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167842"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeNumOfSubset.0.0">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.47" steps="3052"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_clauselist_then_exists_one_clause_unsat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2238382"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120360"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_clauselist_then_exists_one_clause_unsat.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_clauselist_then_exists_one_clause_unsat.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2107167"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113357"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="unsat_clauselist_then_exists_one_clause_unsat.1.0">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2153270"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_not_empty_setc_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2241812"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116095"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_not_empty_setc_clauselist.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8510920"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="690191"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_not_empty_setc_clauselist.0.0">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="910017"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent">
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.37" steps="1947"/></proof>
 </goal>
 <goal name="case2_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1119322"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="sublist_subset_set_smb">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2656112"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180051"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sublist_subset_set_smb.0">
  <transf name="induction_arg_ty_lex" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0">
   <transf name="split_vc" >
    <goal name="sublist_subset_set_smb.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761004"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1707639"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172719"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise">
      <proof prover="2"><undone/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1816447"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177277"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct_term" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0">
       <transf name="subst" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0">
        <transf name="replace" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2102707"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131239"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2434241"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118676"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise">
           <proof prover="2"><undone/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3038971"/></proof>
           <proof prover="2"><undone/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1">
          <proof prover="2"><undone/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis">
         <proof prover="2"><undone/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="6097522"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126353"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset_of_evalsetconjunction.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2851663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123986"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2486786"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.81" steps="99214"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="case" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2393648"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113319"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.0.0" expl="true case">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.0.1" expl="false case (true case)">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2358643"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119501"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.0.1.0" expl="false case (true case)">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2625644"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130499"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" arg1="Hinst" arg2="c">
       <goal name="subset_of_evalsetconjunction.0.0.0.1.0.0" expl="false case (true case)">
       <transf name="destruct" arg1="Hinst">
        <goal name="subset_of_evalsetconjunction.0.0.0.1.0.0.0" expl="destruct premise">
        <proof prover="2"><undone/></proof>
        </goal>
        <goal name="subset_of_evalsetconjunction.0.0.0.1.0.0.1" expl="false case (true case)">
        <proof prover="0" obsolete="true"><result status="valid" time="0.11" steps="210713"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_for_all">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1390617"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="71842"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_spec_for_all.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2154148"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="G1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2077907"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="horn_unsat_completeness">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2185813"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="union_eval_empty">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="not_subset_numOfSubset_0">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2503073"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121511"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_numOfSubset_0.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2644547"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125048"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_numOfSubset_0.0.0">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="475"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="satisf_clauselist_all_mem_satisf">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277560"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192334"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="satisf_clauselist_all_mem_satisf.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373312"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201939"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="satisf_clauselist_all_mem_satisf.0.0">
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="satisf_clauselist_all_mem_satisf.0.0.0">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="is_unsat_then_p_is_bot">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277140"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2406598"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115325"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="is_equal_list_reflexive&#39;vc.0" expl="assertion">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2514671"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="42817"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_equal_list">
   <goal name="is_equal_list_reflexive&#39;vc.0.0" expl="assertion">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2515158"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165611"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="is_equal_list_reflexive&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2336425"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112270"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="is_equal_list_reflexive&#39;vc.1.0" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="is_equal_list_reflexive&#39;vc.1.1" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_sat_unsat">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="case1_general_top_imples_p">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3752049"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="253838"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA_spec&#39;vc.0" expl="assertion">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="variant decrease">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9028784"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="706422"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="algorithmA_spec&#39;vc.1.0" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2271004"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.6.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294674"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104829"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" arg1="H">
    <goal name="algorithmA_spec&#39;vc.6.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="162398"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="175"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.6.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2487680"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104656"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="algorithmA_spec&#39;vc.6.1.1.0" expl="postcondition">
     <transf name="eliminate_let" >
      <goal name="algorithmA_spec&#39;vc.6.1.1.0.0" expl="postcondition">
      <transf name="destruct" arg1="H">
       <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2450067"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123396"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="H">
        <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2491397"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115978"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="subset_set_smb_clauselist" arg2="clauselist">
         <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="Hinst" arg2="x1">
          <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="x">
           <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501013"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133198"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.0" expl="destruct premise">
            <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="185493"/></proof>
            <proof prover="2"><undone/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="188"/></proof>
            </goal>
            <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2550119"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="110536"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" arg1="(subset (singleton (convertRStoAF x) ) (set_smb_clauselist clauselist))">
             <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.0" expl="asserted formula">
             <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="168089"/></proof>
             <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="53695"/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.16" steps="957"/></proof>
             <transf name="instantiate" arg1="sublist_subset_set_smb" arg2="clauselist">
              <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.0.0" expl="asserted formula">
              <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="168891"/></proof>
              <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="54265"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.17" steps="979"/></proof>
              <transf name="instantiate" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
               <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.0.0.0" expl="asserted formula">
               <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="169227"/></proof>
               <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="56009"/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.21" steps="1219"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.0.0.0.0" expl="destruct premise">
                <proof prover="2"><undone/></proof>
                </goal>
                <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.0.0.0.1" expl="asserted formula">
                <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="169869"/></proof>
                <proof prover="2"><undone/></proof>
                <proof prover="4" obsolete="true"><result status="valid" time="0.19" steps="1082"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.1" expl="postcondition">
             <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10649554"/></proof>
             <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="504483"/></proof>
             <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
             <transf name="instantiate" arg1="sublist_subset_set_smb" arg2="clauselist">
              <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.1.0" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2980703"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119598"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="instantiate" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
               <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.1.0.0" expl="postcondition">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2995760"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="91805"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.1.0.0.0" expl="destruct premise">
                <proof prover="2"><undone/></proof>
                </goal>
                <goal name="algorithmA_spec&#39;vc.6.1.1.0.0.0.0.0.0.0.1.1.0.0.1" expl="postcondition">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2541135"/></proof>
                <proof prover="2"><undone/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3451143"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180880"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="precondition">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.1.1" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2955214"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125730"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="findOneSubset_def" arg2="clauselist, c">
    <goal name="algorithmA_spec&#39;vc.1.1.0" expl="variant decrease">
    <transf name="destruct" arg1="Hinst">
     <goal name="algorithmA_spec&#39;vc.1.1.0.0" expl="variant decrease">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="algorithmA_spec&#39;vc.1.1.0.1" expl="variant decrease">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2869379"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="precondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6182892"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.5" expl="postcondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.6" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3216326"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="184752"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.6.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2438588"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.6.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3731142"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.6.2" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2711962"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161381"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2501093"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177765"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="270831"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="63694"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="211"/></proof>
   <transf name="split_vc" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246804"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174208"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
    <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2510269"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180884"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition">
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.28" steps="801"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2338455"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="408052"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
   <transf name="split_vc" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2472376"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149065"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2468665"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149903"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition">
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.13" steps="801"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="p_implies_bot_sat">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="19844789"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.73" steps="87386"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="p_implies_bot_sat.0">
  <transf name="unfold" arg1="is_satisfiable_clause">
   <goal name="p_implies_bot_sat.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4254251"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146214"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="p_implies_bot_sat.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4258469"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146214"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="p_implies_bot_sat.0.0.0.0">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4109221"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424592"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2533818"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117732"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2200494"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="202150"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_algA&#39;vc.3.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255435"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117531"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="eliminate_let" >
    <goal name="monotone_algA&#39;vc.3.0.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2260118"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132555"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="monotone_algA&#39;vc.3.0.0.0" expl="precondition">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8298461"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="771642"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="assert" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
      <goal name="monotone_algA&#39;vc.3.0.0.0.0" expl="asserted formula">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2355606"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.3.0.0.0.1" expl="precondition">
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.10" steps="891"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="monotone_algA&#39;vc.5.2.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2464276"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131400"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
      <goal name="monotone_algA&#39;vc.5.2.0.0.0" expl="asserted formula">
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.25" steps="891"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.5.2.0.0.1" expl="postcondition">
      <proof prover="0"><result status="timeout" time="1.00" steps="2149525"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_algA&#39;vc.5.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2412353"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146529"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="monotone_algA&#39;vc.5.0.0" expl="postcondition">
    <transf name="eliminate_let" >
     <goal name="monotone_algA&#39;vc.5.0.0.0" expl="postcondition">
     <proof prover="2"><undone/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="150"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_algA&#39;vc.5.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2496849"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="150"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="monotone_algA&#39;vc.4" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.5" expl="postcondition">
  <proof prover="2"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="G3">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2131918"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="smb">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="14278341"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="eval_setconjunction_singleton">
 <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="123773"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2081573"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_permut">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1553188"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121707"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_permut.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1725343"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118513"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="permut">
   <goal name="removeFromList_permut.0.0">
   <transf name="split_vc" >
    <goal name="removeFromList_permut.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1655081"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119617"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="case" arg1="(x = elem)">
     <goal name="removeFromList_permut.0.0.0.0" expl="true case">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="removeFromList_permut.0.0.0.1" expl="false case">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1657192"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="G6">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1893188"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="G5">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2048997"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="numOfSubset_1_num_occ">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1973987"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="226357"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset_1_num_occ.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1026651"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129831"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="numOfSubset_1_num_occ.0.0">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.25" steps="1437"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="G4">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2135044"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="if_mem_then_subset_set_smb">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2876564"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137385"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="if_mem_then_subset_set_smb.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1641680"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134631"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.79" steps="1558"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2834289"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="468"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="top_is_satisfiable">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4242737"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="386528"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="top_is_satisfiable.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2469543"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="379235"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_rs">
   <goal name="top_is_satisfiable.0.0">
   <transf name="exists" arg1="(val_all_top)">
    <goal name="top_is_satisfiable.0.0.0">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="distr_exists">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="5040407"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_union&#39;vc" expl="VC for eval_union">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="590613"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127265"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_union&#39;vc.0" expl="precondition">
  <proof prover="2"><undone/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease">
  <proof prover="2"><undone/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion">
  <proof prover="2"><undone/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion">
  <proof prover="2"><undone/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition">
  <proof prover="2"><undone/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1561499"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118745"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset_1.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="2122453"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="610484"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="numOfSubset_1.0.0">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.29" steps="1576"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="GG">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="herbrand_model_case2">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8484290"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="sat_clause">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8416214"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="569489"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="sat_clause.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2208785"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="if_sat_clauselist_sat_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1412420"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_permut_concat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2091139"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122792"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_permut_concat.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1626528"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7297570"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="715499"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6285900"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="786667"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="case" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1979662"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123868"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1575264"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120543"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1915190"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119993"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="683215"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.98" steps="1638"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5665152"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="781552"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.0" expl="true case (postcondition)">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3179677"/></proof>
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1" expl="true case (postcondition)">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3154761"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="707011"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="instantiate" arg1="Hinst" arg2="(pick c)">
        <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1.1.0" expl="true case (postcondition)">
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.41" steps="1334"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8711205"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="597289"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="case" arg1="(cardinal c = 1)">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0" expl="false case (true case. postcondition)">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10469230"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="567581"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0" expl="false case (true case. postcondition)">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3176163"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1" expl="false case (true case. postcondition)">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2051801"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103434"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" arg1="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0" expl="false case (true case. postcondition)">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9495172"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="628784"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="assert" arg1="(exists x. c = singleton x)">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.0" expl="asserted formula">
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.09" steps="311"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1" expl="false case (true case. postcondition)">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2125707"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114978"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="introduce_exists" >
        <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0" expl="false case (true case. postcondition)">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2128378"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107189"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="subst" arg1="c">
         <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0" expl="false case (true case. postcondition)">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2023604"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="575632"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="val_all_top">
          <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0" expl="false case (true case. postcondition)">
          <transf name="instantiate" arg1="Hinst" arg2="(singleton x)">
           <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0" expl="false case (true case. postcondition)">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2360950"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111232"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.0" expl="destruct premise">
            <proof prover="2"><undone/></proof>
            </goal>
            <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1" expl="false case (true case. postcondition)">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2329451"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111854"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" arg1="Hinst" arg2="x">
             <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0" expl="false case (true case. postcondition)">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2374201"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115088"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0.0" expl="destruct premise">
              <proof prover="2"><undone/></proof>
              </goal>
              <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0.1" expl="false case (true case. postcondition)">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2464033"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113432"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="assert" arg1="(eval_atomicformula x val_all_top = top1)">
               <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0.1.0" expl="asserted formula">
               <proof prover="2"><undone/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.89" steps="2075"/></proof>
               </goal>
               <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0.0.1.0.1.1" expl="false case (true case. postcondition)">
               <proof prover="2"><undone/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.1" expl="false case (postcondition)">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="herbrand_model_case3">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2421551"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6415372"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="smb_generic">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10250884"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="765763"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="smb_generic.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="notSubset_numOfSubset_1">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="removeTwoClauses_inductive_case2&#39;vc" expl="VC for removeTwoClauses_inductive_case2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1936611"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168015"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeTwoClauses_inductive_case2&#39;vc.0" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4455282"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="535463"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0" expl="postcondition">
   <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0" expl="postcondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1797972"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130637"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2015634"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="989577"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144085"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="valid" time="0.45" steps="946108"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="61974"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.17" steps="1001"/></proof>
       <transf name="assert" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0" expl="asserted formula">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="501722"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.1" expl="destruct premise">
        <proof prover="2"><undone/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1" expl="postcondition">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5247964"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="732718"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0" expl="postcondition">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5568983"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="739027"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1.0" expl="postcondition">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5661703"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="700226"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="induction_arg_ty_lex" arg1="clauselist">
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1.0.0" expl="VC for removeTwoClauses_inductive_case2">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1695796"/></proof>
          <proof prover="2"><undone/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1645110"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122758"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="induction_arg_ty_lex" arg1="clauselist">
          <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1.1.0" expl="VC for removeTwoClauses_inductive_case2">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1742889"/></proof>
          <proof prover="2"><undone/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1" expl="postcondition">
        <proof prover="0"><result status="timeout" time="1.00" steps="1498176"/></proof>
        <proof prover="2"><undone/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1" expl="postcondition">
     <proof prover="2"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_diffsingleton">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="496899"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="horn_sat_completeness">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="unsat_then_bot">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2216871"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135560"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_then_bot.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2207281"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126996"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="eval_rightside" arg2="in" arg3="H">
   <goal name="unsat_then_bot.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2221833"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127031"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="H" arg2="val_all_top">
    <goal name="unsat_then_bot.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2387013"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="3.01" steps="391433"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct_term" arg1="(assign_rightside p val_all_top)">
     <goal name="unsat_then_bot.0.0.0.0">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2172955"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135672"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="replace" arg1="(assign_rightside p val_all_top)" arg2="(RProp x)" arg3="in" arg4="Hinst">
      <goal name="unsat_then_bot.0.0.0.1.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2270869"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.64" steps="1322"/></proof>
      </goal>
      <goal name="unsat_then_bot.0.0.0.1.1" expl="equality hypothesis">
      <proof prover="2"><undone/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="44"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="unsat_then_bot.0.0.0.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2114810"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_test">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2719674"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114161"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_spec_test.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1428122"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130325"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="l">
   <goal name="not_subset_spec_test.0.0">
   <transf name="split_vc" >
    <goal name="not_subset_spec_test.0.0.0">
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
    </goal>
    <goal name="not_subset_spec_test.0.0.1">
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_mem_subset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3422201"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2294650"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2080190"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="not_unsat_set_sat_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2220289"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="G2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2127456"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="findOneSubset_notsubset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3742862"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201761"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="findOneSubset_notsubset.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3781072"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="252236"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_notsubset.0.0">
   <transf name="destruct" arg1="Hinst">
    <goal name="findOneSubset_notsubset.0.0.0">
    <proof prover="2"><undone/></proof>
    </goal>
    <goal name="findOneSubset_notsubset.0.0.1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2717005"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="527443"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145478"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_commutes_add&#39;vc.0" expl="variant decrease">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="postcondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.0" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="p_implies_bot_sat2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2012631"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2801256"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124941"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="equality_is_equal_list&#39;vc.0" expl="assertion">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3682332"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.1" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="equality_is_equal_list&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527581"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119434"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="equality_is_equal_list&#39;vc.2.0" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.1" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.2" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="equality_is_equal_list&#39;vc.2.3" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_nil">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3431020"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="177114"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="findOneSubset_nil.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3372789"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180326"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_nil.0.0">
   <transf name="destruct" arg1="Hinst">
    <goal name="findOneSubset_nil.0.0.0">
    <proof prover="2"><undone/></proof>
    </goal>
    <goal name="findOneSubset_nil.0.0.1">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_unsat_clause_sat_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2244439"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138178"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_unsat_clause_sat_clause.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8187100"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="694388"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="unfold" arg1="is_unsatisfiable_clause" arg2="in" arg3="H">
   <goal name="not_unsat_clause_sat_clause.0.0">
   <transf name="destruct_term" arg1="clause">
    <goal name="not_unsat_clause_sat_clause.0.0.0">
    <transf name="subst" arg1="clause">
     <goal name="not_unsat_clause_sat_clause.0.0.0.0">
     <transf name="compile_match" >
      <goal name="not_unsat_clause_sat_clause.0.0.0.0.0">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2158014"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133350"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2285410"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133350"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="split_vc" >
        <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7647966"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="63696"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="assert" arg1="((exists f.
not eval_setconjunction x1 f = top1 \/ eval_rightside (assign_rightside x f) = top1))">
         <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.0" expl="asserted formula">
         <proof prover="2"><undone/></proof>
         </goal>
         <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8136656"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="648485"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="unfold" arg1="is_satisfiable_clause">
          <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1.0">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7408360"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="536020"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="split_vc" >
           <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1.0.0">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7409503"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="536020"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="unfold" arg1="is_unsatisfiable_set">
            <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1.0.0.0">
            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7475846"/></proof>
            <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="577104"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
            <transf name="destruct" arg1="h">
             <goal name="not_unsat_clause_sat_clause.0.0.0.0.0.0.0.1.0.0.0.0">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2218820"/></proof>
             <proof prover="2"><undone/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="not_unsat_clause_sat_clause.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2205399"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138410"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.60" steps="1211"/></proof>
  <transf name="unfold" arg1="is_satisfiable_clause" arg2="in" arg3="H">
   <goal name="not_unsat_clause_sat_clause.1.0">
   <transf name="destruct" arg1="H">
    <goal name="not_unsat_clause_sat_clause.1.0.0">
    <transf name="destruct" arg1="H">
     <goal name="not_unsat_clause_sat_clause.1.0.0.0">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="not_unsat_clause_sat_clause.1.0.0.0">
     <proof prover="2"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality">
 <transf name="split_vc" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2997534"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129390"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="tuple_equality&#39;vc.0.0" expl="variant decrease">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.0.1" expl="variant decrease">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6780028"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="197"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition">
   <proof prover="2"><undone/></proof>
   <proof prover="4"><result status="valid" time="0.05" steps="197"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423557"/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1580198"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="64851"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="271"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="271"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="480279"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="196776"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeTwoClauses_basecase&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1495979"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168156"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_basecase&#39;vc.0.0" expl="postcondition">
   <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0" expl="postcondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1473231"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166910"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0" expl="destruct premise">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4473183"/></proof>
      <proof prover="2"><undone/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1422513"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149082"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1589306"/></proof>
       <proof prover="2"><undone/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1" expl="postcondition">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5499631"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="859084"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1669260"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116249"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1.1.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1656780"/></proof>
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1.1.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1792043"/></proof>
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1.1" expl="postcondition">
        <proof prover="2"><undone/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1" expl="postcondition">
     <proof prover="2"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2592517"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111099"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_numocc.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2247870"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122237"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0">
   <transf name="split_vc" >
    <goal name="removeFromList_numocc.0.0.0">
    <proof prover="2"><undone/></proof>
    </goal>
    <goal name="removeFromList_numocc.0.0.1">
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="260"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="857767"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="312454"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4704247"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125330"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="numOfSubset&#39;vc.0.0" expl="variant decrease">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.0.1" expl="variant decrease">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.0" expl="postcondition">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.1" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255490"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111610"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="numOfSubset&#39;vc.1.0" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2395037"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107447"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="numOfSubset&#39;vc.1.0.0" expl="variant decrease">
    <proof prover="2"><undone/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.0" expl="postcondition">
    <proof prover="2"><undone/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.1" expl="postcondition">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset&#39;vc.1.1" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2399925"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108239"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="numOfSubset&#39;vc.1.1.0" expl="variant decrease">
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="52"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.2" expl="postcondition">
    <proof prover="2"><undone/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="52"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.1" expl="postcondition">
    <proof prover="2"><undone/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="54"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.2" expl="postcondition">
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="numOfSubset&#39;vc.3" expl="postcondition">
  <proof prover="2"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model_case1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1556250"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="numOfSubset_clauselist_c_1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1132002"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116127"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="numOfSubset_clauselist_c_1.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1498814"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130104"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="(exists set p. mem1 (set,p) clauselist /\ subset set c)">
   <goal name="numOfSubset_clauselist_c_1.0.0" expl="asserted formula">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1268318"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139516"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(forall set1:fset atomicformula, p1:rightside. mem1 (set1,p1) (removeFromList (set, p) clauselist) -&gt; (not subset set1 c))">
    <goal name="numOfSubset_clauselist_c_1.0.0.0" expl="asserted formula">
    <proof prover="2"><undone/></proof>
    </goal>
    <goal name="numOfSubset_clauselist_c_1.0.0.1" expl="asserted formula">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1220980"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset_clauselist_c_1.0.1">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn_sat_soundness">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2264845"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.43" steps="75584"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="horn_sat_soundness.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2258299"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139066"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" arg1="clauselist">
   <goal name="horn_sat_soundness.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2030547"/></proof>
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="horn_sat_soundness.0.1">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2350304"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137488"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="((horn_logic clauselist = True) -&gt; (not mem ABot (algorithmA_spec clauselist (singleton ATop))))">
    <goal name="horn_sat_soundness.0.1.0" expl="asserted formula">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2218545"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137541"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="h">
     <goal name="horn_sat_soundness.0.1.0.0" expl="asserted formula">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="horn_sat_soundness.0.0.1.0" expl="destruct premise">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8472244"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="horn_sat_soundness.0.1.1">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="notSubset_numOfSubset_0">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="bot_is_unsatisfiable">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="permut_cl1_cl2">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="G">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3271297"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="union_eval_samesingleton">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="concat_with_element">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3460135"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113302"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="precondition">
  <proof prover="2"><undone/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.4" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="12555206"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="921624"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="permutacoes&#39;vc.4.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2498921"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="45071"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" arg1="H">
    <goal name="permutacoes&#39;vc.4.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2181374"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="permutacoes&#39;vc.4.1.0" expl="postcondition">
    <proof prover="0"><result status="timeout" time="1.00" steps="1955007"/></proof>
    <proof prover="2"><undone/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permutacoes&#39;vc.4.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2035801"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124396"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" arg1="H">
    <goal name="permutacoes&#39;vc.4.1.0" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8264640"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="499963"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="eliminate_let" >
     <goal name="permutacoes&#39;vc.4.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2204980"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="102643"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H">
      <goal name="permutacoes&#39;vc.4.1.0.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2258246"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="97509"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
       <goal name="permutacoes&#39;vc.4.1.0.0.0.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2392419"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="99759"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.1.0.0.0.0.0" expl="destruct premise">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2404381"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="99739"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.0" expl="destruct premise">
         <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="8450"/></proof>
         <proof prover="2"><undone/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="50"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2318058"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="99724"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.0" expl="destruct premise">
          <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="151803"/></proof>
          <proof prover="2"><undone/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="56"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1" expl="postcondition">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9463121"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="406470"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.0" expl="postcondition">
           <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="153718"/></proof>
           <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.22" steps="46775"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="60"/></proof>
           <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.0.0" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="155684"/></proof>
            <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="47598"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="67"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.0.0.0" expl="destruct premise">
             <proof prover="2"><undone/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.0.0.1" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="155676"/></proof>
             <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="47587"/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="67"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.0.0.1.0" expl="destruct premise">
              <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="8456"/></proof>
              <proof prover="2"><undone/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="54"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.0.0.1.1" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="155676"/></proof>
              <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="47576"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="67"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.0.0.1.1.0" expl="destruct premise">
               <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="151463"/></proof>
               <proof prover="2"><undone/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="60"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.0.0.1.1.1" expl="postcondition">
               <proof prover="2"><undone/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1" expl="postcondition">
           <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10148882"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="100194"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
            <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0" expl="postcondition">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2316522"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="101625"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.0" expl="destruct premise">
             <proof prover="2"><undone/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.1" expl="postcondition">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2384839"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="101631"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.1.0" expl="destruct premise">
              <proof prover="2"><undone/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.1.1" expl="postcondition">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2295142"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="101590"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.1.1.0" expl="destruct premise">
               <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="154004"/></proof>
               <proof prover="2" obsolete="true"><result status="valid" time="0.17" steps="42830"/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="59"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.1.1.0.0" expl="destruct premise">
                <proof prover="2"><undone/></proof>
                <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="62"/></proof>
                </goal>
                <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.1.1.0.1" expl="destruct premise">
                <proof prover="2"><undone/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.1.1.1" expl="postcondition">
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="101433"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.1.1.1.0" expl="postcondition">
                <proof prover="2"><undone/></proof>
                </goal>
                <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0.1.1.1.1" expl="postcondition">
                <proof prover="2"><undone/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1" expl="postcondition">
        <proof prover="2"><undone/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permutacoes&#39;vc.4.1.1" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8576658"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="760978"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="permutacoes&#39;vc.4.1.1.0" expl="postcondition">
     <transf name="eliminate_let" >
      <goal name="permutacoes&#39;vc.4.1.1.0.0" expl="postcondition">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8788980"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="754465"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
       <goal name="permutacoes&#39;vc.4.1.1.0.0.0" expl="postcondition">
       <transf name="destruct" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.1.1.0.0.0.0" expl="destruct premise">
        <proof prover="2"><undone/></proof>
        </goal>
        <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2413880"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133756"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.0" expl="destruct premise">
         <proof prover="2"><undone/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2217479"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133751"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.0" expl="destruct premise">
          <proof prover="2"><undone/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2272160"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133689"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.0" expl="postcondition">
           <proof prover="2"><undone/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1" expl="postcondition">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2077934"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135664"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.0" expl="postcondition">
            <proof prover="2"><undone/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.1" expl="postcondition">
            <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8341508"/></proof>
            <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="684727"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
            <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
             <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.1.0" expl="postcondition">
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.1.0.0" expl="destruct premise">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2067054"/></proof>
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112667"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.1.0.0.0" expl="destruct premise">
               <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2068070"/></proof>
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="91415"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.0.1.1.0" expl="destruct premise">
                <proof prover="2"><undone/></proof>
                </goal>
                <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.0.1.1.1" expl="postcondition">
                <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2065389"/></proof>
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="94702"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.0.1.1.1.0" expl="postcondition">
                 <proof prover="2"><undone/></proof>
                 </goal>
                 <goal name="permutacoes&#39;vc.4.1.0.0.0.0.1.1.1.1.0.0.1.1.1.1" expl="postcondition">
                 <proof prover="2"><undone/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.1.0.0.1" expl="destruct premise">
               <proof prover="2"><undone/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="permutacoes&#39;vc.4.1.1.0.0.0.1.1.1.1.1.0.1" expl="postcondition">
              <proof prover="2"><undone/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1331314"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98348"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sublist_is_satisfiable_clauselist.0">
  <transf name="induction_arg_ty_lex" arg1="sublist">
   <goal name="sublist_is_satisfiable_clauselist.0.0">
   <transf name="split_vc" >
    <goal name="sublist_is_satisfiable_clauselist.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1751538"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152242"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H1">
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.0" expl="destruct premise">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1090093"/></proof>
     <proof prover="2"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sublist_is_satisfiable_clauselist.0.0.1">
    <proof prover="2"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2105040"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118867"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_length.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2159512"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114480"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" arg1="(clauselist = Nil)">
   <goal name="removeFromList_length.0.0" expl="true case">
   <proof prover="2"><undone/></proof>
   </goal>
   <goal name="removeFromList_length.0.1" expl="false case">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2160427"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117680"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="removeFromList_length.0.1.0">
    <transf name="split_vc" >
     <goal name="removeFromList_length.0.1.0.0" expl="false case">
     <proof prover="2"><undone/></proof>
     </goal>
     <goal name="removeFromList_length.0.1.0.1" expl="false case">
     <proof prover="2"><undone/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="667"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2416889"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145646"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_numocc_2.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0">
   <transf name="split_vc" >
    <goal name="removeFromList_numocc_2.0.0.0">
    <proof prover="2"><undone/></proof>
    </goal>
    <goal name="removeFromList_numocc_2.0.0.1">
    <proof prover="2"><undone/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.10" steps="722"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p">
 <proof prover="0" obsolete="true"><result status="valid" time="0.20" steps="360856"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="unsat_induction">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2211890"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="contr_exists">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="removeFromList_elem_not_in_list">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2424464"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122344"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_elem_not_in_list.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2419393"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136747"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0">
   <proof prover="2"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_if_only_if_some">
 <proof prover="2"><undone/></proof>
 </goal>
 <goal name="permut_ref">
 <proof prover="2"><undone/></proof>
 </goal>
</theory>
</file>
</why3session>
