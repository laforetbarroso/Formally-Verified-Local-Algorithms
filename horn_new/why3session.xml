<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_new.mlw"/>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="28251"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27394"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28065"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="28030"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="26200"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="801"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="23704"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="AFtoRS_RStoAF.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="27620"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="26550"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Eval" proved="true">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="123353"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="153022"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="3805706"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="152707"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="34841"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="40847"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="30958"/></proof>
 </goal>
 <goal name="top_is_satisfiable">
 <proof prover="0"><result status="timeout" time="1.00" steps="4328253"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="if_satisf_then_not_bottom">
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="bot_is_unsatisfiable">
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 </goal>
</theory>
<theory name="SAT">
 <goal name="rs_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="32593"/></proof>
 </goal>
 <goal name="af_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="32789"/></proof>
 </goal>
 <goal name="set_unsat_then_not_sat" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="20151437"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="32992"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="clause_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="33195"/></proof>
 </goal>
 <goal name="cl_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="33398"/></proof>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="4088499"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="130833"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="36127"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="35237"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="13590241"/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="921565"/></proof>
  <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="3254606"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="140125"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="3249794"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="121958"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="3268767"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="104964"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="113207"/></proof>
      <proof prover="2"><result status="valid" time="0.14" steps="33015"/></proof>
      <proof prover="4"><result status="valid" time="0.02" steps="27"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="15519639"/></proof>
      <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="643766"/></proof>
      <proof prover="4" timelimit="5"><result status="valid" time="0.98" steps="1264"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="15027764"/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="778508"/></proof>
   <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
   <transf name="case" proved="true" arg1="(cardinal c = 1)">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0" expl="false case (true case. postcondition)" proved="true">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="16981320"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="799537"/></proof>
    <proof prover="4" timelimit="5"><result status="valid" time="4.77" steps="3152"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0" expl="false case (true case. postcondition)" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="112170"/></proof>
     <proof prover="2"><result status="valid" time="0.14" steps="32778"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1" expl="false case (true case. postcondition)" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="3184553"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="130121"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
      <proof prover="0" timelimit="5"><result status="failure" time="0.00"/></proof>
      <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="938407"/></proof>
      <proof prover="4" timelimit="5"><result status="valid" time="4.61" steps="3044"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.1" expl="false case (postcondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="34348"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="39063"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set&#39;vc" expl="VC for subset_of_satisfiable_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3784125"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="175780"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_satisfiable_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="36516"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2466309"/></proof>
  <proof prover="2"><result status="valid" time="0.16" steps="35445"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1571077"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="40512"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3557374"/></proof>
  <proof prover="2"><result status="valid" time="0.72" steps="120832"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3586077"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="478079"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Hornify" proved="true">
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3682481"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128704"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="30154"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="36518"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="106289"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="33957"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.29" steps="46441"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="36998"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="41585"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="529887"/></proof>
 <proof prover="2"><result status="valid" time="1.64" steps="183642"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="36549"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="39478"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3699636"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163934"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2951384"/></proof>
    <proof prover="2"><result status="valid" time="0.21" steps="40013"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="232"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4350887"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119188"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="21860636"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1313291"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.62" steps="2877"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166990"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="717"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="126738"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="717"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4336013"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173612"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4123852"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174336"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.21" steps="40623"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="37846"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4229769"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117470"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4285867"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115962"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4275269"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114059"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3894993"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114077"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4312540"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115531"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="130587"/></proof>
       <proof prover="4"><result status="valid" time="0.13" steps="725"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3737655"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="65468"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="188"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3739516"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="65450"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="188"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3738226"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="66199"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="197"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.21" steps="41728"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="198"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="43580"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="158109"/></proof>
 <proof prover="4"><result status="valid" time="0.31" steps="1832"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="38738"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="44625"/></proof>
 </goal>
</theory>
<theory name="Horn_Logic">
 <goal name="removeFromList_numocc" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1623031"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142663"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2091761"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114970"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="36779"/></proof>
    </goal>
    <goal name="removeFromList_numocc.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="114467"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="185"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1767171"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119267"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc_2.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2068282"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119288"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_numocc_2.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="37017"/></proof>
    </goal>
    <goal name="removeFromList_numocc_2.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="118381"/></proof>
    <proof prover="4"><result status="valid" time="0.06" steps="583"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2074166"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125911"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_length.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2268375"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106888"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_length.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeFromList_length.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="37148"/></proof>
    </goal>
    <goal name="removeFromList_length.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.91" steps="121455"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="145"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_if_only_if_some" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="37834"/></proof>
 </goal>
 <goal name="findOneSubset_mem_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="38077"/></proof>
 </goal>
 <goal name="findOneSubset_nil" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2567912"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="321446"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_nil.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3256502"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="321324"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_nil.0.0" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="findOneSubset_nil.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="32895"/></proof>
    </goal>
    <goal name="findOneSubset_nil.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131632"/></proof>
    <proof prover="2"><result status="valid" time="0.20" steps="38375"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="95"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_notsubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2622379"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="345083"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_notsubset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2815935"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="342310"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_notsubset.0.0" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="findOneSubset_notsubset.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="33030"/></proof>
    </goal>
    <goal name="findOneSubset_notsubset.0.0.1" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="126162"/></proof>
    <proof prover="2"><result status="valid" time="0.14" steps="36307"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="29"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="if_mem_then_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2281877"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143475"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_mem_then_subset_set_smb.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527211"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121510"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="109429"/></proof>
   <proof prover="4"><result status="valid" time="0.59" steps="1404"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist" proved="true">
 <proof prover="2"><result status="valid" time="0.36" steps="52142"/></proof>
 </goal>
 <goal name="sublist_subset_set_smb" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2695209"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154908"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_subset_set_smb.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2956947"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130993"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="sublist_subset_set_smb.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="151847"/></proof>
    <proof prover="2"><result status="valid" time="0.22" steps="41585"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="172"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3351264"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="403200"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" proved="true" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.17" steps="39609"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2032201"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108927"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.18" steps="1073"/></proof>
     <transf name="destruct" proved="true" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.19" steps="40111"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2045246"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107127"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="343"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0" proved="true">
        <transf name="replace" proved="true" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2435544"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="47924"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="360"/></proof>
         <transf name="assert" proved="true" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="172355"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="39564"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="28"/></proof>
          <transf name="destruct" proved="true" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.16" steps="39479"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="131765"/></proof>
           <proof prover="2"><result status="valid" time="0.15" steps="37564"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="29"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0.1" proved="true">
          <proof prover="2"><result status="valid" time="0.24" steps="47182"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="0.18" steps="39676"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1539885"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117463"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="41060"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="141038"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.16" steps="39529"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.02" steps="38"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="algorithmA_spec&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="141038"/></proof>
   <proof prover="2"><result status="valid" time="0.16" steps="39772"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="38"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="141378"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="39561"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="40"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="39804"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161284"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="37222"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="37283"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.31" steps="58917"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8307372"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149933"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="45303"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="46731"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2230377"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114306"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA_spec&#39;vc.4.2.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.35" steps="62879"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.4.2.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2371677"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112214"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA_spec&#39;vc.4.2.1.0" expl="postcondition" proved="true">
     <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="6826496"/></proof>
     <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="685814"/></proof>
     <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
     <transf name="eliminate_let" proved="true" >
      <goal name="algorithmA_spec&#39;vc.4.2.1.0.0" expl="postcondition" proved="true">
      <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="7230151"/></proof>
      <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="645118"/></proof>
      <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
      <transf name="instantiate" proved="true" arg1="subset_set_smb_clauselist" arg2="clauselist">
       <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0" expl="postcondition" proved="true">
       <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1">
        <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="instantiate" proved="true" arg1="Hinst" arg2="x">
         <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.15" steps="38600"/></proof>
          </goal>
          <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1" expl="postcondition" proved="true">
          <proof prover="0"><result status="timeout" time="1.00" steps="2245661"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="124271"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
           <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1.0" expl="postcondition" proved="true">
           <transf name="instantiate" proved="true" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
            <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1.0.0" expl="postcondition" proved="true">
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1.0.0.0" expl="destruct premise" proved="true">
             <proof prover="2"><result status="valid" time="0.24" steps="46557"/></proof>
             </goal>
             <goal name="algorithmA_spec&#39;vc.4.2.1.0.0.0.0.0.1.0.0.1" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.90" steps="99645"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1533075"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119104"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="42338"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.27" steps="50758"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="40741"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="40773"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8756521"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="945799"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="permutacoes&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="40174"/></proof>
   </goal>
   <goal name="permutacoes&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2453355"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124806"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
    <goal name="permutacoes&#39;vc.4.1.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="permutacoes&#39;vc.4.1.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.09" steps="36656"/></proof>
     </goal>
     <goal name="permutacoes&#39;vc.4.1.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2512228"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121284"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="permutacoes&#39;vc.4.1.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.10" steps="36654"/></proof>
      </goal>
      <goal name="permutacoes&#39;vc.4.1.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2509149"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121276"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="permutacoes&#39;vc.4.1.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.20" steps="39921"/></proof>
       </goal>
       <goal name="permutacoes&#39;vc.4.1.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2302136"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122042"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0" expl="postcondition" proved="true">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8246438"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="797062"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
         <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2086183"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141479"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.10" steps="36712"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2107950"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141468"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.09" steps="36710"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1.1" expl="postcondition" proved="true">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2125786"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141457"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1.1.0" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.18" steps="40398"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0.1.1.1" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.26" steps="49612"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="215569"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.37" steps="54489"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="41"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.22" steps="42517"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.1" expl="postcondition" proved="true">
         <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.07" steps="227185"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.30" steps="51391"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="43"/></proof>
         <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
          <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.1.0" expl="postcondition" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.1.0.0" expl="destruct premise" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="7406"/></proof>
           <proof prover="2"><result status="valid" time="0.10" steps="36819"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="40"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1.1.0.1" expl="postcondition" proved="true">
           <proof prover="2"><result status="valid" time="0.36" steps="56191"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutacoes&#39;vc.4.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2172955"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112692"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
    <goal name="permutacoes&#39;vc.4.2.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="permutacoes&#39;vc.4.2.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.10" steps="37174"/></proof>
     </goal>
     <goal name="permutacoes&#39;vc.4.2.0.1" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2173848"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108533"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="permutacoes&#39;vc.4.2.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.10" steps="37172"/></proof>
      </goal>
      <goal name="permutacoes&#39;vc.4.2.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2192939"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109934"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="permutacoes&#39;vc.4.2.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.20" steps="41894"/></proof>
       </goal>
       <goal name="permutacoes&#39;vc.4.2.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2225128"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109177"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0" expl="postcondition" proved="true">
        <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.07" steps="216176"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.32" steps="53333"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="54"/></proof>
        <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
         <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="218531"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.39" steps="57865"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="61"/></proof>
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="valid" time="0.10" steps="37238"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1" expl="postcondition" proved="true">
          <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="218534"/></proof>
          <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="57854"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="61"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.10" steps="37236"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1.1" expl="postcondition" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="218513"/></proof>
           <proof prover="2" obsolete="true"><result status="valid" time="0.46" steps="57848"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="55"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1.1.0" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.21" steps="42417"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.0.0.1.1.1" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.40" steps="59295"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2403779"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105737"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2276097"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120959"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
          <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0" expl="postcondition" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.0" expl="destruct premise" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="7534"/></proof>
           <proof prover="2"><result status="valid" time="0.11" steps="37304"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="44"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1" expl="postcondition" proved="true">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="100702"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1.0" expl="destruct premise" proved="true">
            <proof prover="2"><result status="valid" time="0.10" steps="37302"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1.1" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2405619"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103181"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1.1.0" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.22" steps="43590"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.0.0.1.1.1" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.27" steps="48559"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1" expl="postcondition" proved="true">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9844075"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="641661"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
          <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0" expl="postcondition" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.0" expl="destruct premise" proved="true">
           <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="7542"/></proof>
           <proof prover="2"><result status="valid" time="0.11" steps="37333"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="44"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1" expl="postcondition" proved="true">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="102355"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1.0" expl="destruct premise" proved="true">
            <proof prover="2"><result status="valid" time="0.10" steps="37331"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1.1" expl="postcondition" proved="true">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2394278"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109538"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1.1.0" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.21" steps="44370"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.2.0.1.1.1.1.1.0.1.1.1" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.39" steps="56905"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="571807"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123339"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="42754"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="41095"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="41127"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="146834"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="40914"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="monotone_algA&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="146834"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="40914"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
   <transf name="eliminate_let" proved="true" >
    <goal name="monotone_algA&#39;vc.3.0.0" expl="precondition" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="146774"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="40906"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="monotone_algA&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="146774"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.16" steps="40906"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
     <transf name="assert" proved="true" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
      <goal name="monotone_algA&#39;vc.3.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1953337"/></proof>
      <proof prover="2"><result status="valid" time="0.54" steps="83709"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="457"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.3.0.0.0.1" expl="precondition" proved="true">
      <proof prover="2"><result status="valid" time="0.16" steps="41177"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="48"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="monotone_algA&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="54904"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2121836"/></proof>
  <proof prover="2" timelimit="20" obsolete="true"><result status="timeout" time="20.00" steps="3938080"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="monotone_algA&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="160853"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="116"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="138548"/></proof>
   <proof prover="4"><result status="valid" time="0.04" steps="277"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.5.2" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2050879"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104023"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="monotone_algA&#39;vc.5.2.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2053426"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114906"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
     <goal name="monotone_algA&#39;vc.5.2.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.95" steps="105794"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="48453"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="41451"/></proof>
  </goal>
  <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2831005"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="45220"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="431"/></proof>
  <transf name="case" proved="true" arg1="(cardinal s &gt; 1)">
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3097907"/></proof>
   <proof prover="2"><result status="valid" time="0.27" steps="45613"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="426"/></proof>
   </goal>
   <goal name="all_x_top_then_eval_setconjunction_top&#39;vc.1.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="235601"/></proof>
   <proof prover="2"><result status="valid" time="0.26" steps="46791"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="138"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction_1" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="42365"/></proof>
 <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="subset_of_evalsetconjunction" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2487437"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147097"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3094233"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112752"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" proved="true" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="200440"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.56" steps="77489"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="case" proved="true" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="133261"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="38140"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="31"/></proof>
    <transf name="case" proved="true" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.0.0" expl="true case" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="38395"/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.0.1" expl="false case (true case)" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="133434"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="38156"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="33"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.0.1.0" expl="false case (true case)" proved="true">
      <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="134124"/></proof>
      <proof prover="2"><result status="valid" time="0.15" steps="38592"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="33"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case" proved="true">
    <proof prover="2"><result status="valid" time="0.16" steps="38391"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="contr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="39572"/></proof>
 </goal>
 <goal name="distr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="39952"/></proof>
 </goal>
 <goal name="smb_generic" proved="true">
 <proof prover="2"><result status="valid" time="0.44" steps="65314"/></proof>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="49978"/></proof>
 </goal>
 <goal name="not_subset_spec_test" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2297114"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105238"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_test.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2538238"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116958"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="not_subset_spec_test.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_spec_test.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.22" steps="42148"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="34"/></proof>
    </goal>
    <goal name="not_subset_spec_test.0.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="112069"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="34"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="44695"/></proof>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="43911"/></proof>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="40828"/></proof>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2905827"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155256"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="148098"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="43046"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="32"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="42876"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="42962"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13469707"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1414972"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="41128"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="40931"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="218"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="90626"/></proof>
   <proof prover="4"><result status="valid" time="0.05" steps="218"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="40931"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2520526"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119238"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.21" steps="40871"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="137"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="44634"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="155"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="107303"/></proof>
   <proof prover="4"><result status="valid" time="0.05" steps="155"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="44634"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_ref" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="41460"/></proof>
 </goal>
 <goal name="permut_trans" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="41578"/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="43453"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="42811"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.26" steps="47738"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list" proved="true">
 <proof prover="2"><result status="valid" time="0.40" steps="62953"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="49120"/></proof>
 </goal>
 <goal name="permut_cl1_cl2" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="42761"/></proof>
 </goal>
 <goal name="concat_with_element" proved="true">
 <proof prover="2"><result status="valid" time="0.30" steps="51550"/></proof>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1" proved="true">
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_concat_not_mem_l1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2704402"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106114"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.27" steps="53251"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.27" steps="49333"/></proof>
 </goal>
 <goal name="removeFromList_permut" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="52199"/></proof>
 </goal>
 <goal name="removeFromList_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.62" steps="86669"/></proof>
 </goal>
 <goal name="removeFromList_elem_not_in_list" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1904065"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="97086"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_elem_not_in_list.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2271066"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123353"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="47808"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761987"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113729"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2040410"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129079"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="32"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="147298"/></proof>
   <proof prover="2"><result status="valid" time="0.21" steps="45032"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="31"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2046302"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="117202"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1919519"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117802"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="32"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="44969"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="123615"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130893"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1602627"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130238"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="39314"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="42354"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="38638"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="numOfSubset&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1600230"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130468"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="39763"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="114309"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="38"/></proof>
    </goal>
    <goal name="numOfSubset&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="120620"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="36"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107490"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="numOfSubset&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="41613"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="47836"/></proof>
   </goal>
   <goal name="numOfSubset&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="48299"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_for_all" proved="true">
 <proof prover="2"><result status="valid" time="0.35" steps="53650"/></proof>
 </goal>
 <goal name="not_subset_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1583527"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="91625"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_subset_general.0" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="160257"/></proof>
  <proof prover="2"><result status="valid" time="0.18" steps="43955"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="113"/></proof>
  </goal>
  <goal name="not_subset_general.1">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127362"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="not_subset_general.1.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1795317"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129137"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="not_subset_general.1.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.18" steps="45310"/></proof>
    </goal>
    <goal name="not_subset_general.1.0.1">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1525074"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="796743"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="destruct" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="47811"/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1066584"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131657"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" arg1="not_subset_spec">
      <goal name="not_subset_general.1.0.1.1.0">
      <transf name="split_vc" >
       <goal name="not_subset_general.1.0.1.1.0.0">
       <proof prover="0"><result status="timeout" time="1.00" steps="1813051"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="111054"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="not_subset_general.1.0.1.1.0.1" proved="true">
       <proof prover="2"><result status="valid" time="0.10" steps="39187"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.27" steps="44635"/></proof>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset" proved="true">
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_0_not_subset&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1858023"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123145"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="113"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.0.0" expl="VC for numOfSubset_0_not_subset" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="numOfSubset_0_not_subset&#39;vc.0.0.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="0.27" steps="47334"/></proof>
    </goal>
    <goal name="numOfSubset_0_not_subset&#39;vc.0.0.1" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="0.35" steps="53454"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1438379"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="130011"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="33"/></proof>
  </goal>
  <goal name="numOfSubset_0_not_subset&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6098713"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="325129"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_0_not_subset&#39;vc.2.0" expl="VC for numOfSubset_0_not_subset" proved="true">
   <proof prover="2"><result status="valid" time="0.19" steps="48555"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="notSubset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="48108"/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_1" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="47678"/></proof>
 </goal>
 <goal name="addSubset_to_numOfSubset" proved="true">
 <proof prover="2"><result status="valid" time="0.32" steps="50245"/></proof>
 </goal>
 <goal name="removeNumOfSubset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1895434"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="93555"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeNumOfSubset.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1285951"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109377"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeNumOfSubset.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="117450"/></proof>
   <proof prover="4"><result status="valid" time="0.33" steps="2370"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_clauselist_c_1" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="49485"/></proof>
 </goal>
 <goal name="numOfSubset_1_num_occ" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1738577"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="84233"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1_num_occ.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1578978"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="101742"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1_num_occ.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="129409"/></proof>
   <proof prover="4"><result status="valid" time="0.20" steps="1516"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1568020"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106076"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1667362"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108801"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="143270"/></proof>
   <proof prover="4"><result status="valid" time="0.91" steps="2008"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut" proved="true">
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="162336"/></proof>
  <proof prover="2"><result status="valid" time="0.26" steps="47460"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28" steps="50118"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.27" steps="53297"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="159411"/></proof>
  <proof prover="2"><result status="valid" time="0.25" steps="49226"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_equality_add" proved="true">
 <proof prover="2"><result status="valid" time="0.47" steps="64243"/></proof>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="396895"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115236"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_basecase&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1318258"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129806"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_basecase&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="176554"/></proof>
     <proof prover="2"><result status="valid" time="0.19" steps="48817"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
     </goal>
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148245"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.18" steps="48828"/></proof>
      </goal>
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1351662"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145667"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1481976"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104749"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="valid" time="0.31" steps="465288"/></proof>
        <proof prover="2"><result status="valid" time="0.21" steps="50464"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="242"/></proof>
        </goal>
        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.0.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.32" steps="47814"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="1.64" steps="211363"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses_inductive_case2&#39;vc" expl="VC for removeTwoClauses_inductive_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1766971"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103347"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_inductive_case2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4334625"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="429173"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="179836"/></proof>
     <proof prover="2"><result status="valid" time="0.20" steps="50243"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="44"/></proof>
     </goal>
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126735"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.18" steps="50254"/></proof>
      </goal>
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1762559"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128039"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1409341"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113154"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="499191"/></proof>
        <proof prover="2"><result status="valid" time="0.34" steps="60753"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.21" steps="49002"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1350713"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="218018"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="506742"/></proof>
        <proof prover="2"><result status="valid" time="0.79" steps="105296"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.46" steps="82996"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses" proved="true">
 <proof prover="2"><result status="valid" time="0.30" steps="56103"/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA" proved="true">
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1925879"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124709"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="removeFromList_algorithmA&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="9490"/></proof>
     <proof prover="2"><result status="valid" time="0.13" steps="48309"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="32"/></proof>
     </goal>
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127588"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.12" steps="48307"/></proof>
      </goal>
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1947446"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127577"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.25" steps="54718"/></proof>
       </goal>
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.29" steps="56895"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="299715"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="133945"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_model_case1" proved="true">
 <proof prover="2"><result status="valid" time="0.44" steps="63798"/></proof>
 </goal>
 <goal name="herbrand_model_case2" proved="true">
 <proof prover="2"><result status="valid" time="0.32" steps="55119"/></proof>
 </goal>
 <goal name="herbrand_model_case3" proved="true">
 <proof prover="2"><result status="valid" time="0.34" steps="55381"/></proof>
 </goal>
 <goal name="if_sat_clauselist_sat_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1741887"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134944"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_sat_clauselist_sat_clause.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1323547"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103516"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="if_sat_clauselist_sat_clause.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1197715"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103366"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" proved="true" arg1="is_satisfiable_clause">
    <goal name="if_sat_clauselist_sat_clause.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1221755"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106081"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
     <goal name="if_sat_clauselist_sat_clause.0.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.28" steps="59818"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand_model" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="131514"/></proof>
 <proof prover="4"><result status="valid" time="0.08" steps="388"/></proof>
 </goal>
 <goal name="is_sat_set">
 <proof prover="0"><result status="timeout" time="1.00" steps="1851445"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="97345"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_not_empty_setc_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1749951"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="97789"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_not_empty_setc_clauselist.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7181333"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="434332"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_not_empty_setc_clauselist.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.37" steps="67397"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="895154"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104926"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_top_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="173941"/></proof>
  <proof prover="2"><result status="valid" time="0.21" steps="51572"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="33"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1776587"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133183"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="190391"/></proof>
     <proof prover="2"><result status="valid" time="0.22" steps="55362"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="33"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146626"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.21" steps="55425"/></proof>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1817856"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143007"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="190011"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="55470"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="37"/></proof>
       <transf name="subst" proved="true" arg1="clauselist">
        <goal name="case1_top_imples_p.1.0.0.1.1.0.0" proved="true">
        <transf name="subst" proved="true" arg1="clause">
         <goal name="case1_top_imples_p.1.0.0.1.1.0.0.0" proved="true">
         <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="201009"/></proof>
         <proof prover="2"><result status="valid" time="0.23" steps="57622"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="35"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="case1_top_imples_p.1.0.0.1.1.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2235850"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137253"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case1_top_imples_p.1.0.0.1.1.1.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2127152"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140465"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0">
         <proof prover="0"><result status="timeout" time="1.00" steps="2009792"/></proof>
         <proof prover="2"><result status="failure" time="0.00"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1">
         <proof prover="0"><result status="timeout" time="1.00" steps="2155222"/></proof>
         <proof prover="2"><result status="failure" time="0.00"/></proof>
         <proof prover="4"><result status="valid" time="0.63" steps="3717"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case1_top_imples_p.1.0.0.1.1.1.1">
        <proof prover="0"><result status="timeout" time="1.00" steps="1884054"/></proof>
        <proof prover="2"><result status="timeout" time="1.00" steps="127880"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p">
 <proof prover="0"><result status="timeout" time="1.00" steps="1266108"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="107601"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case1_general" proved="true">
 <proof prover="2"><result status="valid" time="0.26" steps="57758"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.27" steps="57928"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.26" steps="58138"/></proof>
 </goal>
 <goal name="case2_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.77" steps="98808"/></proof>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1068876"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107718"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="10242"/></proof>
     <proof prover="2"><result status="valid" time="0.14" steps="51849"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="34"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146217"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.13" steps="51847"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1886679"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142940"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.20" steps="56592"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1569358"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145412"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.0" proved="true">
        <proof prover="2"><result status="valid" time="0.20" steps="56657"/></proof>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1484378"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181646"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0">
         <proof prover="0"><result status="timeout" time="1.00" steps="1432892"/></proof>
         <proof prover="2"><result status="timeout" time="1.00" steps="151335"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1" proved="true">
         <proof prover="2"><result status="timeout" time="1.00" steps="170621"/></proof>
         <proof prover="4"><result status="valid" time="0.39" steps="2306"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1101506"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122712"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_general.0">
  <proof prover="0"><result status="timeout" time="1.00" steps="950160"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="117539"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.26" steps="59262"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="59242"/></proof>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1385813"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130263"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1587308"/></proof>
  <proof prover="2"><result status="valid" time="0.29" steps="60081"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="587"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="69068"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.84" steps="114864"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="189119"/></proof>
  <proof prover="2"><result status="valid" time="0.22" steps="55388"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="54"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="200383"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="58130"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="56"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="200383"/></proof>
   <proof prover="2"><result status="valid" time="0.23" steps="58121"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="56"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="200313"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.23" steps="58138"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="58"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="200313"/></proof>
   <proof prover="2"><result status="valid" time="0.22" steps="58129"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.04" steps="58"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.6" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="50041"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.7" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5531626"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="850161"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="case3_induction_general&#39;vc.7.0" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5327577"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="515192"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="destruct" arg1="H">
    <goal name="case3_induction_general&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="120539"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="43"/></proof>
    </goal>
    <goal name="case3_induction_general&#39;vc.7.0.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1743582"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118167"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="case3_induction_general&#39;vc.7.0.1.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="112274"/></proof>
     <proof prover="4"><result status="valid" time="0.05" steps="150"/></proof>
     </goal>
     <goal name="case3_induction_general&#39;vc.7.0.1.1" expl="postcondition">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3851591"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="418749"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="destruct" arg1="H">
      <goal name="case3_induction_general&#39;vc.7.0.1.1.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1708912"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150644"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="eliminate_let" >
       <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1677162"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144563"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="H">
        <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0.0" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1684896"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148536"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="H">
         <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0.0.0" expl="postcondition">
         <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1595093"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150993"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="H">
          <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0.0.0.0" expl="postcondition">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1427622"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152618"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="H">
           <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0.0.0.1.0" expl="postcondition">
           <proof prover="0"><result status="timeout" time="1.00" steps="1428167"/></proof>
           <proof prover="2"><result status="failure" time="0.00"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="case3_induction_general&#39;vc.7.0.1.1.0.0.0.0.1" expl="postcondition">
          <proof prover="0"><result status="timeout" time="1.00" steps="1377737"/></proof>
          <proof prover="2"><result status="timeout" time="1.00" steps="132723"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction_general&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="52300"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="63661"/></proof>
 </goal>
 <goal name="unsat_then_bot" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1631453"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132044"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="unsat_then_bot.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6093686"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="689709"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="unfold" proved="true" arg1="eval_rightside" arg2="in" arg3="H">
   <goal name="unsat_then_bot.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1633249"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128883"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="H" arg2="val_all_top">
    <goal name="unsat_then_bot.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1997179"/></proof>
    <proof prover="2"><result status="valid" time="1.01" steps="124131"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_unsat_then_p_is_bot" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1853749"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106392"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_unsat_then_p_is_bot.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2132657"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137627"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_unsatisfiable_clause" arg2="in" arg3="H">
   <goal name="is_unsat_then_p_is_bot.0.0" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6100905"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="641814"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="unfold" proved="true" arg1="eval_clause" arg2="in" arg3="H">
    <goal name="is_unsat_then_p_is_bot.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.29" steps="59870"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_clauselist_then_exists_one_clause_unsat">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1642293"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119708"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_clauselist_then_exists_one_clause_unsat.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1640623"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120514"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="unsat_clauselist_then_exists_one_clause_unsat.0.0">
   <proof prover="0"><result status="timeout" time="1.00" steps="1787975"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="111451"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_clauselist_then_exists_one_clause_unsat.1" proved="true">
  <proof prover="2"><result status="valid" time="0.40" steps="71994"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_induction_general&#39;vc" expl="VC for unsat_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="850495"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164545"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_induction_general&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="50575"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.1" expl="assertion">
  <proof prover="0"><result status="timeout" time="1.00" steps="2180957"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="120565"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="392999"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="120337"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.3" expl="unreachable point">
  <proof prover="0"><result status="timeout" time="1.00" steps="1886542"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="106595"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.30" steps="719884"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="60782"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="578"/></proof>
  <transf name="assert" proved="true" arg1="(x &lt;&gt; RProp bot1)">
   <goal name="unsat_induction_general&#39;vc.4.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.22" steps="56168"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.30" steps="719983"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="60767"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="589"/></proof>
   <transf name="assert" proved="true" arg1="(exists y1 y2. mem1 (y1,y2) clauselist /\ is_unsatisfiable_clause (y1,y2))">
    <goal name="unsat_induction_general&#39;vc.4.1.0" expl="asserted formula" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="207134"/></proof>
    <proof prover="2"><result status="valid" time="0.30" steps="60393"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.07" steps="195"/></proof>
    </goal>
    <goal name="unsat_induction_general&#39;vc.4.1.1" expl="variant decrease" proved="true">
    <proof prover="2"><result status="valid" time="0.31" steps="62249"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.39" steps="69744"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.6" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1339420"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120212"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="(exists x p. is_unsatisfiable_clause (x,p) /\ mem1 (x,p) clauselist)">
   <goal name="unsat_induction_general&#39;vc.6.0" expl="asserted formula" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="208046"/></proof>
   <proof prover="2"><result status="valid" time="0.29" steps="60939"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="203"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.6.1" expl="precondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="1227047"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="107885"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="55973"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="203742"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="58704"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="56"/></proof>
  <transf name="case" proved="true" arg1="(x1 ==&#39; (singleton ATop))">
   <goal name="unsat_induction_general&#39;vc.8.0" expl="true case (precondition)" proved="true">
   <proof prover="2"><result status="valid" time="0.24" steps="58726"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="58"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.8.1" expl="false case (precondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="204733"/></proof>
   <proof prover="2"><result status="valid" time="0.24" steps="58732"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="58"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="58712"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="219480"/></proof>
  <proof prover="2"><result status="valid" time="0.35" steps="68501"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="233"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.11" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121632"/></proof>
  <transf name="split_vc" >
   <goal name="unsat_induction_general&#39;vc.11.0" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="1088191"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="119948"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.11.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1958712"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150176"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="unsat_induction_general&#39;vc.11.1.0" expl="postcondition">
    <proof prover="0"><result status="timeout" time="1.00" steps="1814563"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="135743"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_induction" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="122774"/></proof>
 <proof prover="4"><result status="valid" time="0.19" steps="919"/></proof>
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic" proved="true">
 <proof prover="2"><result status="valid" time="0.26" steps="58443"/></proof>
 </goal>
 <goal name="horn_sat_soundness" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2148638"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123127"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="horn_sat_soundness.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2143277"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123075"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" proved="true" arg1="clauselist">
   <goal name="horn_sat_soundness.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="238775"/></proof>
   <proof prover="2"><result status="valid" time="0.51" steps="75440"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="horn_sat_soundness.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2152172"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113422"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="((horn_logic clauselist = True) -&gt; (not mem ABot (algorithmA_spec clauselist (singleton ATop))))">
    <goal name="horn_sat_soundness.0.1.0" expl="asserted formula" proved="true">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="199298"/></proof>
    <proof prover="2"><result status="valid" time="0.22" steps="58420"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="36"/></proof>
    </goal>
    <goal name="horn_sat_soundness.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2142144"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121674"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="h">
     <goal name="horn_sat_soundness.0.1.1.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2147154"/></proof>
     <proof prover="2"><result status="valid" time="1.35" steps="145447"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="horn_sat_soundness.0.1.1.1" proved="true">
     <proof prover="2"><result status="valid" time="0.20" steps="55756"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn_unsat_soundness" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.34" steps="60825"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="horn_unsat_soundness.0" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="209570"/></proof>
  <proof prover="2"><result status="valid" time="0.31" steps="60750"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_unsat_set_sat_set" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="56452"/></proof>
 </goal>
 <goal name="not_unsat_clause_sat_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2114290"/></proof>
 <proof prover="2"><result status="valid" time="0.32" steps="58049"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="not_unsat_sat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2134295"/></proof>
 <proof prover="2"><result status="valid" time="0.33" steps="58116"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="not_sat_unsat" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="56025"/></proof>
 </goal>
 <goal name="horn_sat_completeness" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="57734"/></proof>
 </goal>
 <goal name="horn_unsat_completeness" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="57833"/></proof>
 </goal>
</theory>
<theory name="Horn" proved="true">
 <goal name="length_equal_listset_to_list_fset" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3665476"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="227829"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="length_equal_listset_to_list_fset.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="cl">
   <goal name="length_equal_listset_to_list_fset.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="124219"/></proof>
   <proof prover="4"><result status="valid" time="0.23" steps="591"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_prog&#39;vc" expl="VC for removeFromList_prog" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2344047"/></proof>
 <proof prover="2"><result status="valid" time="0.68" steps="105505"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1909438"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146393"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="64825"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.0.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.0.0.0" expl="variant decrease" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2266318"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.0.0.0.0" expl="variant decrease" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.16" steps="268742"/></proof>
     <proof prover="2"><result status="valid" time="0.32" steps="66406"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1910792"/></proof>
   <proof prover="2"><result status="valid" time="0.38" steps="70096"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2094926"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141213"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4724996"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="447139"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.1.0.0" expl="precondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2005174"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114777"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.1.0.0.0" expl="precondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1596697"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119869"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
      <goal name="algorithmA&#39;vc.1.0.0.0.0" expl="precondition" proved="true">
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="(to_fset c)">
       <goal name="algorithmA&#39;vc.1.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1606376"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131960"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="algorithmA&#39;vc.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1607868"/></proof>
        <proof prover="2"><result status="valid" time="0.14" steps="56976"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.1.0.0.0.0.0.1" expl="precondition" proved="true">
        <proof prover="2"><result status="valid" time="0.16" steps="63161"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2401492"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146149"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5180706"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="416618"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="assert" proved="true" arg1="(length (listset_to_listfset o) &lt; length (listset_to_listfset clauselist))">
    <goal name="algorithmA&#39;vc.2.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="118997"/></proof>
    <proof prover="4"><result status="valid" time="0.13" steps="455"/></proof>
    </goal>
    <goal name="algorithmA&#39;vc.2.0.1" expl="precondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4655795"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="650039"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" proved="true" arg1="(length (listset_to_listfset o) = length o)">
     <goal name="algorithmA&#39;vc.2.0.1.0" expl="asserted formula" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2215796"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137990"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" proved="true" arg1="(length (listset_to_listfset clauselist) = length clauselist)">
      <goal name="algorithmA&#39;vc.2.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.23" steps="60475"/></proof>
      </goal>
      <goal name="algorithmA&#39;vc.2.0.1.0.1" expl="asserted formula" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2448998"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158622"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
       <goal name="algorithmA&#39;vc.2.0.1.0.1.0" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4920176"/></proof>
       <proof prover="2"><result status="valid" time="0.26" steps="68573"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.2.0.1.1" expl="precondition" proved="true">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4823108"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="277327"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="induction_arg_ty_lex" proved="true" arg1="o">
      <goal name="algorithmA&#39;vc.2.0.1.1.0" expl="VC for algorithmA" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1147276"/></proof>
      <proof prover="2"><result status="valid" time="0.26" steps="70384"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761229"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139206"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2250084"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134419"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.3.0.0" expl="precondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2061764"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111579"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <proof prover="2"><result status="valid" time="0.32" steps="67681"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="195"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1717222"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149528"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="59668"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2344556"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140747"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.23" steps="59771"/></proof>
    </goal>
    <goal name="algorithmA&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2352279"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130093"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.4.1.1.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.37" steps="71659"/></proof>
     </goal>
     <goal name="algorithmA&#39;vc.4.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.07" steps="254685"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="129340"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138125"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134305"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2230152"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="65005"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2238343"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137289"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="algorithmA&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.29" steps="61582"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2088011"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138834"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="algorithmA&#39;vc.5.1.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5169960"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="569973"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
     <goal name="algorithmA&#39;vc.5.1.0.0" expl="VC for algorithmA" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="139634"/></proof>
     <proof prover="4"><result status="valid" time="0.16" steps="923"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.5.1.1" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2088215"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137967"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
     <goal name="algorithmA&#39;vc.5.1.1.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(to_fset c)">
      <goal name="algorithmA&#39;vc.5.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2203640"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142243"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="algorithmA&#39;vc.5.1.1.0.0.0" expl="destruct premise" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2060711"/></proof>
       <proof prover="2"><result status="valid" time="0.15" steps="57204"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="algorithmA&#39;vc.5.1.1.0.0.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2011284"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119138"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="algorithmA&#39;vc.5.1.1.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="0.15" steps="57202"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1" expl="postcondition" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2045214"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116760"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1.0" expl="postcondition" proved="true">
         <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="244652"/></proof>
         <proof prover="2"><result status="valid" time="0.44" steps="75947"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="199"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.5.1.1.0.0.1.1.1" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.48" steps="84288"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="66580"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p">
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="979345"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123441"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_top_imples_p.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2569353"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127623"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_top_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2269024"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164847"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3048712"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="137037"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="subst" arg1="clauselist">
       <goal name="case1_top_imples_p.1.0.0.1.0.0" expl="destruct premise">
       <transf name="subst" arg1="clause">
        <goal name="case1_top_imples_p.1.0.0.1.0.0.0" expl="destruct premise">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2300008"/></proof>
        <proof prover="2"><result status="failure" time="0.00"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2002335"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="58685"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.1.1.0" expl="destruct premise">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3789846"/></proof>
       <proof prover="2"><result status="failure" time="0.00"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="case1_top_imples_p.1.0.0.1.1.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277177"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145192"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case1_top_imples_p.1.0.0.1.1.1.0">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3838032"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="638593"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0">
         <proof prover="2"><result status="failure" time="0.00"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.87" steps="5331"/></proof>
         </goal>
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1">
         <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="212275"/></proof>
         <proof prover="2"><result status="failure" time="0.00"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.86" steps="5329"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="case1_top_imples_p.1.0.0.1.1.1.1">
        <proof prover="0"><result status="timeout" time="1.00" steps="2217561"/></proof>
        <proof prover="2"><result status="failure" time="0.00"/></proof>
        <proof prover="4"><result status="timeout" time="2.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="case1_top_imples_p.0.0.0.1">
     <proof prover="2"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="case1_top_imples_p.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2527138"/></proof>
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1307008"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="281647"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p.0">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p.0.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p.0.0.0.0" expl="destruct premise">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2762111"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167234"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p.0.0.0.1.0" expl="destruct premise">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2013086"/></proof>
      <proof prover="2"><result status="failure" time="0.00"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p.0.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2035166"/></proof>
      <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="59612"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1263000"/></proof>
       <proof prover="2"><result status="failure" time="0.00"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
       </goal>
       <goal name="case2_conjunction_imples_p.0.0.0.1.1.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1561038"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="240998"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1604635"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154844"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0">
         <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="57397"/></proof>
         <proof prover="2"><result status="failure" time="0.00"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.03" steps="56"/></proof>
         </goal>
         <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1">
         <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6771863"/></proof>
         <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="684121"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1806465"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165169"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="instantiate" arg1="is_sat_set" arg2="clauselist,c">
           <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1789965"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174810"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0.0" expl="destruct premise">
            <proof prover="2"><result status="failure" time="0.00"/></proof>
            </goal>
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0.1">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1808939"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164758"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0.1.0">
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             </goal>
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.0.0.1.1">
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.19" steps="1445"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1">
          <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7055977"/></proof>
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="635812"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="instantiate" arg1="is_sat_set" arg2="clauselist,c">
           <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0">
           <transf name="destruct" arg1="Hinst">
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.0" expl="destruct premise">
            <proof prover="2"><result status="failure" time="0.00"/></proof>
            </goal>
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1820817"/></proof>
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172078"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1.0">
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             </goal>
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1.1">
             <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1871960"/></proof>
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="256838"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1.1.0">
              <proof prover="2"><result status="failure" time="0.00"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.29" steps="1793"/></proof>
              </goal>
              <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.1.1.0.1.1.1">
              <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1762950"/></proof>
              <proof prover="2"><result status="failure" time="0.00"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.50" steps="2859"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1">
        <proof prover="0"><result status="timeout" time="1.00" steps="1554827"/></proof>
        <proof prover="2"><result status="failure" time="0.00"/></proof>
        <proof prover="4"><result status="timeout" time="2.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="case2_conjunction_imples_p.0.0.0.1">
     <proof prover="2"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction_1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2824061"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="168386"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset_of_evalsetconjunction_1.0">
  <transf name="exists" arg1="(val_all_top)">
   <goal name="subset_of_evalsetconjunction_1.0.0">
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general_conjuction_imples_p">
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1871066"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135753"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1334937"/></proof>
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.3" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1879508"/></proof>
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.4" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1821812"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131841"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.4.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1939225"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="624330"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="2.39" steps="5119"/></proof>
   <transf name="split_vc" >
    <goal name="case3_induction_general&#39;vc.4.0.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1932986"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159558"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" >
     <goal name="case3_induction_general&#39;vc.4.0.0.0" expl="precondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1932227"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156304"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H">
      <goal name="case3_induction_general&#39;vc.4.0.0.0.0" expl="precondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2197737"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152986"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2187676"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158784"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="replace" arg1="(algorithmA_spec clauselist c)" arg2="(algorithmA_spec (removeFromList (x1, x) clauselist)
       (add (convertRStoAF x) c))">
        <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0" expl="destruct premise">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1915673"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="237854"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="is_sat_set" arg2="clauselist,c">
         <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0" expl="destruct premise">
         <transf name="destruct" arg1="Hinst">
          <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.0" expl="destruct premise">
          <proof prover="2"><result status="failure" time="0.00"/></proof>
          </goal>
          <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.1" expl="destruct premise">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1779613"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146899"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.1.0" expl="destruct premise">
           <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423472"/></proof>
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155807"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.1.0.0" expl="destruct premise">
            <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1449171"/></proof>
            <proof prover="2"><result status="failure" time="0.00"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
            <goal name="case3_induction_general&#39;vc.8.2.0.0.1.0.1.0.1.1.0" expl="equality hypothesis">
            <proof prover="2"><result status="failure" time="0.00"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.27" steps="1904"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.0.0.1.1" expl="destruct premise">
           <proof prover="2"><result status="failure" time="0.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case3_induction_general&#39;vc.4.0.0.0.0.0.1" expl="equality hypothesis">
        <proof prover="2"><result status="failure" time="0.00"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="case3_induction_general&#39;vc.4.0.0.0.0.1" expl="precondition">
       <proof prover="2"><result status="failure" time="0.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="case3_induction_general&#39;vc.8.2.0.0.0" expl="postcondition">
      <proof prover="2"><result status="failure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction_general&#39;vc.8.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1850482"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121162"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="57"/></proof>
   <transf name="eliminate_let" >
    <goal name="case3_induction_general&#39;vc.8.2.0" expl="postcondition">
    <proof prover="0"><result status="timeout" time="1.00" steps="1918439"/></proof>
    <proof prover="2"><result status="failure" time="0.00"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   <transf name="split_vc" >
    <goal name="case3_induction_general&#39;vc.8.2.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1937299"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146181"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="eliminate_let" >
     <goal name="case3_induction_general&#39;vc.8.2.0.0" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="1925431"/></proof>
     <proof prover="2"><result status="failure" time="0.00"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction_general&#39;vc.8.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1653921"/></proof>
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   <proof prover="4"><result status="valid" time="0.07" steps="225"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.5" expl="precondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982709"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="253248"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.5.0" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3982180"/></proof>
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.6" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1916618"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138195"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.6.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1484999"/></proof>
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.7" expl="unreachable point">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.8" expl="postcondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_induction_general&#39;vc" expl="VC for unsat_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1074455"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132057"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_induction_general&#39;vc.0" expl="unreachable point">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.1" expl="assertion">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1134473"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142757"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="unsat_induction_general&#39;vc.1.0" expl="assertion">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1352949"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139466"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
    <goal name="unsat_induction_general&#39;vc.1.0.0" expl="assertion">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1354483"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130359"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="unsat_induction_general&#39;vc.1.0.0.0" expl="destruct premise">
     <proof prover="2"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="unsat_induction_general&#39;vc.1.0.0.1" expl="assertion">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1354353"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129848"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="unsat_induction_general&#39;vc.1.0.0.1.0" expl="destruct premise">
      <proof prover="2"><result status="failure" time="0.00"/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.1.0.0.1.1" expl="assertion">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1354752"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130958"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2979977"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136332"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="unsat_induction_general&#39;vc.11.1.0.1.1.1.0" expl="postcondition">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3031678"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="614640"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="unsat_induction_general&#39;vc.11.0.0.1.1.1.1.0" expl="postcondition">
         <proof prover="2"><result status="failure" time="0.00"/></proof>
         </goal>
         <goal name="unsat_induction_general&#39;vc.11.0.0.1.1.1.1.1" expl="postcondition">
         <proof prover="2"><result status="failure" time="0.00"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.22" steps="1557"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="unsat_induction_general&#39;vc.11.1.0.1.1.1.1" expl="postcondition">
        <proof prover="2"><result status="failure" time="0.00"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="unsat_induction_general&#39;vc.1.0.0.1.1.1" expl="assertion">
       <proof prover="2"><result status="failure" time="0.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="unsat_induction_general&#39;vc.11.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246075"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152187"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="unsat_induction_general&#39;vc.11.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2246067"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151659"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="induction_arg_ty_lex" arg1="clauselist">
     <goal name="unsat_induction_general&#39;vc.11.0.0.0" expl="VC for unsat_induction_general">
     <proof prover="0"><result status="timeout" time="1.00" steps="592186"/></proof>
     <proof prover="2"><result status="failure" time="0.00"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.2" expl="assertion">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2242907"/></proof>
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="191"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.3" expl="unreachable point">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.4" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1688663"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122721"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="(x &lt;&gt; RProp bot1)">
   <goal name="unsat_induction_general&#39;vc.4.0" expl="asserted formula">
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.4.1" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1788340"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127092"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(exists y1 y2. mem1 (y1,y2) clauselist /\ is_unsatisfiable_clause (y1,y2))">
    <goal name="unsat_induction_general&#39;vc.4.1.0" expl="asserted formula">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1584311"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="259435"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="introduce_exists" >
     <goal name="unsat_induction_general&#39;vc.4.1.0.0" expl="asserted formula">
     <transf name="assert" arg1="(x &lt;&gt; y2)">
      <goal name="unsat_induction_general&#39;vc.6.1.1.0.0" expl="asserted formula">
      <proof prover="2"><result status="failure" time="0.00"/></proof>
      </goal>
      <goal name="unsat_induction_general&#39;vc.6.1.1.0.1" expl="precondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1170943"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="94168"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="assert" arg1="(mem1 (y1,y2) (removeFromList (x1, x) clauselist))">
       <goal name="unsat_induction_general&#39;vc.6.1.1.0.1.0" expl="asserted formula">
       <proof prover="2"><result status="failure" time="0.00"/></proof>
       </goal>
       <goal name="unsat_induction_general&#39;vc.6.1.1.0.1.1" expl="precondition">
       <proof prover="2"><result status="failure" time="0.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="unsat_induction_general&#39;vc.4.1.1" expl="variant decrease">
    <proof prover="2"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.5" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.6" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1718449"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="55920"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="assert" arg1="(exists x p. is_unsatisfiable_clause (x,p) /\ mem1 (x,p) clauselist)">
   <goal name="unsat_induction_general&#39;vc.6.0" expl="asserted formula">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1195941"/></proof>
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.6.1" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5138798"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="613223"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="unfold" arg1="is_unsatisfiable_clauselist" arg2="in" arg3="Requires3">
    <goal name="unsat_induction_general&#39;vc.6.1.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1780045"/></proof>
    <proof prover="2"><result status="failure" time="0.00"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.7" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.8" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1845259"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134954"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="case" arg1="(x1 ==&#39; (singleton ATop))">
   <goal name="unsat_induction_general&#39;vc.8.0" expl="true case (precondition)">
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="192"/></proof>
   </goal>
   <goal name="unsat_induction_general&#39;vc.8.1" expl="false case (precondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2155759"/></proof>
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_induction_general&#39;vc.9" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.10" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1808070"/></proof>
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unsat_induction_general&#39;vc.11" expl="postcondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2027613"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="satisf_clauselist_all_mem_satisf">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2277560"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="192334"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="satisf_clauselist_all_mem_satisf.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2373312"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201939"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="H1">
   <goal name="satisf_clauselist_all_mem_satisf.0.0">
   <transf name="induction_arg_ty_lex" arg1="clauselist">
    <goal name="satisf_clauselist_all_mem_satisf.0.0.0">
    <proof prover="2"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2533818"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117732"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2200494"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="202150"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_algA&#39;vc.3.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2255435"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117531"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="eliminate_let" >
    <goal name="monotone_algA&#39;vc.3.0.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2260118"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132555"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="monotone_algA&#39;vc.3.0.0.0" expl="precondition">
     <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8298461"/></proof>
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="771642"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="assert" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
      <goal name="monotone_algA&#39;vc.3.0.0.0.0" expl="asserted formula">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2355606"/></proof>
      <proof prover="2"><result status="failure" time="0.00"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.3.0.0.0.1" expl="precondition">
      <proof prover="2"><result status="failure" time="0.00"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.10" steps="891"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="monotone_algA&#39;vc.5.2.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2464276"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131400"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
      <goal name="monotone_algA&#39;vc.5.2.0.0.0" expl="asserted formula">
      <proof prover="2"><result status="failure" time="0.00"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.25" steps="891"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.5.2.0.0.1" expl="postcondition">
      <proof prover="0"><result status="timeout" time="1.00" steps="2149525"/></proof>
      <proof prover="2"><result status="failure" time="0.00"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_algA&#39;vc.5.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2412353"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146529"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="monotone_algA&#39;vc.5.0.0" expl="postcondition">
    <transf name="eliminate_let" >
     <goal name="monotone_algA&#39;vc.5.0.0.0" expl="postcondition">
     <proof prover="2"><result status="failure" time="0.00"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="150"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_algA&#39;vc.5.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2496849"/></proof>
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="150"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="monotone_algA&#39;vc.4" expl="precondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.5" expl="postcondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1331314"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="98348"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sublist_is_satisfiable_clauselist.0">
  <transf name="induction_arg_ty_lex" arg1="sublist">
   <goal name="sublist_is_satisfiable_clauselist.0.0">
   <transf name="split_vc" >
    <goal name="sublist_is_satisfiable_clauselist.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1751538"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152242"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H1">
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.0" expl="destruct premise">
     <proof prover="2"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="sublist_is_satisfiable_clauselist.0.0.1.1">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1090093"/></proof>
     <proof prover="2"><result status="failure" time="0.00"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sublist_is_satisfiable_clauselist.0.0.1">
    <proof prover="2"><result status="failure" time="0.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
