<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.5.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="setstheory.mlw"/>
<theory name="BoolSet" proved="true">
 <goal name="VC eval_positive" expl="VC for eval_positive" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="13175"/></proof>
 </goal>
 <goal name="VC eval_negative" expl="VC for eval_negative" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="13332"/></proof>
 </goal>
 <goal name="VC deriv" expl="VC for deriv" proved="true">
 <proof prover="2"><result status="valid" time="0.08" steps="15308"/></proof>
 </goal>
 <goal name="VC evalElemNegative" expl="VC for evalElemNegative" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="22591"/></proof>
 </goal>
 <goal name="VC evalElemPositive" expl="VC for evalElemPositive" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="12644"/></proof>
 </goal>
 <goal name="evalPositiveAbso" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="11664"/></proof>
 </goal>
 <goal name="evalNegativeAbso" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="11697"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3469205"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="evalPositiveNeutral" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="12580"/></proof>
 </goal>
 <goal name="evalNegativeNeutral" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="12015"/></proof>
 </goal>
</theory>
<theory name="PropositionalFormulaSet">
 <goal name="VC eval_positive" expl="VC for eval_positive" proved="true">
 <proof prover="2"><result status="valid" time="0.08" steps="15731"/></proof>
 <proof prover="6" obsolete="true"><result status="valid" time="0.11" steps="15559"/></proof>
 </goal>
 <goal name="VC cast_commutes_add" expl="VC for cast_commutes_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC cast_commutes_add.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="16770"/></proof>
  <proof prover="6" obsolete="true"><result status="valid" time="0.06" steps="16585"/></proof>
  </goal>
  <goal name="VC cast_commutes_add.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00" steps="1180463"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="valid" time="0.25" steps="34917"/></proof>
  <proof prover="6" obsolete="true"><result status="valid" time="0.24" steps="35899"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC eval_negative" expl="VC for eval_negative" proved="true">
 <proof prover="2"><result status="valid" time="0.08" steps="15927"/></proof>
 </goal>
 <goal name="VC deriv" expl="VC for deriv">
 <proof prover="2"><result status="timeout" time="1.00" steps="218090"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="3567623"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <proof prover="6" obsolete="true"><result status="valid" time="0.29" steps="22664"/></proof>
 </goal>
 <goal name="VC evalElemLet" expl="VC for evalElemLet">
 <proof prover="2"><result status="timeout" time="1.00" steps="163958"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="3277463"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC evalElemLet.0" expl="postcondition">
  <transf name="unfold" arg1="eval_negative">
   <goal name="VC evalElemLet.0.0" expl="postcondition">
   <transf name="assert" arg1="(cast_setPF_setB (add x s) f == add (eval_pl x f) (cast_setPF_setB s f))">
    <goal name="VC evalElemLet.0.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.06" steps="14063"/></proof>
    <proof prover="6" obsolete="true"><result status="valid" time="0.07" steps="14066"/></proof>
    </goal>
    <goal name="VC evalElemLet.0.0.1" expl="postcondition">
    <proof prover="2"><result status="timeout" time="1.00" steps="143869"/></proof>
    <proof prover="3"><result status="timeout" time="1.00" steps="3603919"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <proof prover="6" obsolete="true"><result status="valid" time="0.07" steps="14358"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="evalElem1" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="14201"/></proof>
 <proof prover="6" obsolete="true"><result status="valid" time="0.05" steps="14111"/></proof>
 </goal>
 <goal name="VC evalElem" expl="VC for evalElem" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="20055"/></proof>
 <proof prover="6" obsolete="true"><result status="valid" time="0.10" steps="19850"/></proof>
 </goal>
</theory>
</file>
</why3session>
