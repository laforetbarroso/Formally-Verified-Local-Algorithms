<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.8.6" alternative="noBV" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn_clean.mlw"/>
<theory name="Converts" proved="true">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="28390"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="27533"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="28204"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="28169"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="26339"/></proof>
 <proof prover="4"><result status="valid" time="0.02" steps="23"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="convertAFtoPL_evaluation.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="PLtoAF_AFtoPL.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" proved="true" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0" proved="true">
   <transf name="compile_match" proved="true" >
    <goal name="PLtoAF_AFtoPL.0.0.0" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" proved="true" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="23819"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="RStoAF_AFtoRS.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0" proved="true">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="AFtoRS_RStoAF.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" proved="true" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="27759"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="26689"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Eval">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153022"/></proof>
 <proof prover="3"><result status="valid" time="0.10" steps="280330"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3805706"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152707"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="34980"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="40986"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="31097"/></proof>
 </goal>
 <goal name="eval_clauselist_top_is_conj_eval_clause_top" proved="true">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="359415"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="5526237"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_clauselist_top_is_conj_eval_clause_top.0" proved="true">
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="659723"/></proof>
  <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9448202"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="cl">
   <goal name="eval_clauselist_top_is_conj_eval_clause_top.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="37707"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eval_clauselist_top_is_conj_eval_clause_top.1" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="357199"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="5100050"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="cl">
   <goal name="eval_clauselist_top_is_conj_eval_clause_top.1.0" proved="true">
   <proof prover="2"><result status="valid" time="0.20" steps="43039"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_clauselist_bot_is_conj_eval_clause_bot" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="33471"/></proof>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="41444"/></proof>
 </goal>
 <goal name="subset_of_evalsetconjunction_1">
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1622169"/></proof>
 <proof prover="3" timelimit="5"><result status="timeout" time="5.00" steps="27457317"/></proof>
 <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset_of_evalsetconjunction_1.0">
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1032025"/></proof>
  <proof prover="3" timelimit="5"><result status="timeout" time="5.00" steps="21962198"/></proof>
  <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subset_of_evalsetconjunction" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="145014"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="4909257"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_evalsetconjunction.0" proved="true">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="146298"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="exists" proved="true" arg1="(f)">
   <goal name="subset_of_evalsetconjunction.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.35" steps="53584"/></proof>
   <proof prover="3"><result status="valid" time="0.09" steps="215262"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="case" proved="true" arg1="(is_empty c)">
    <goal name="subset_of_evalsetconjunction.0.0.0" expl="true case" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="32476"/></proof>
    </goal>
    <goal name="subset_of_evalsetconjunction.0.0.1" expl="false case" proved="true">
    <proof prover="2"><result status="valid" time="0.41" steps="57757"/></proof>
    <proof prover="3"><result status="valid" time="0.08" steps="225273"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="case" proved="true" arg1="(is_empty d)">
     <goal name="subset_of_evalsetconjunction.0.0.1.0" expl="false case (true case)" proved="true">
     <proof prover="2"><result status="valid" time="0.20" steps="35753"/></proof>
     </goal>
     <goal name="subset_of_evalsetconjunction.0.0.1.1" expl="false case" proved="true">
     <proof prover="2"><result status="valid" time="0.45" steps="62913"/></proof>
     <proof prover="3"><result status="valid" time="0.07" steps="204065"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="f">
      <goal name="subset_of_evalsetconjunction.0.0.1.1.0" expl="false case" proved="true">
      <proof prover="2"><result status="valid" time="0.53" steps="67516"/></proof>
      <proof prover="3"><result status="valid" time="0.07" steps="205536"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="contr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="33773"/></proof>
 </goal>
 <goal name="distr_exists" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="34153"/></proof>
 </goal>
 <goal name="tautology_then_not_bot_in_set&#39;vc" expl="VC for tautology_then_not_bot_in_set" proved="true">
 <proof prover="2"><result status="valid" time="0.67" steps="90023"/></proof>
 </goal>
 <goal name="forall_eval_af_bot_exists_eval_af_bot&#39;vc" expl="VC for forall_eval_af_bot_exists_eval_af_bot" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="33634"/></proof>
 </goal>
 <goal name="forall_eval_clause_bot_exists_eval_clause_bot&#39;vc" expl="VC for forall_eval_clause_bot_exists_eval_clause_bot">
 <proof prover="2"><result status="timeout" time="1.00" steps="133964"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="5596295"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="forall_eval_clause_bot_exists_eval_clause_bot&#39;vc.0" expl="postcondition">
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1190595"/></proof>
  <proof prover="3" timelimit="5"><result status="timeout" time="5.00" steps="29449700"/></proof>
  <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eval_cl_bot_then_exists_eval_clause_bot&#39;vc" expl="VC for eval_cl_bot_then_exists_eval_clause_bot" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="40859"/></proof>
 </goal>
</theory>
<theory name="SAT">
 <goal name="rs_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="34813"/></proof>
 </goal>
 <goal name="af_unsat_then_not_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="35009"/></proof>
 </goal>
 <goal name="set_unsat_then_not_sat" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="20151437"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="35212"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197502"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132862"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="38221"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="37572"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13590241"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="921565"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="case" proved="true" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3254606"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140125"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3249794"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121958"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3268767"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104964"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.13" steps="35377"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.04" steps="189357"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.02" steps="27"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15519639"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="146920"/></proof>
      <proof prover="4"><result status="valid" time="0.94" steps="1492"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15027764"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="778508"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="case" proved="true" arg1="(cardinal c = 1)">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0" expl="false case (true case. postcondition)" proved="true">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="16981320"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="799537"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="4.50" steps="3154"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0" expl="false case (true case. postcondition)" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3374702"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="330559"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
     <transf name="instantiate" proved="true" arg1="eval_setconjunction_singleton" arg2="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
      <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
       <proof prover="2"><result status="valid" time="0.14" steps="35249"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="33"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1" expl="false case (true case. postcondition)" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3184553"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130121"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" proved="true" arg1="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8757046"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="348184"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="assert" proved="true" arg1="(exists o. o = pick c)">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="valid" time="0.16" steps="31676"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1" expl="false case (true case. postcondition)" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1890499"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="75498"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="introduce_exists" proved="true" >
        <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1846040"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76460"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" proved="true" arg1="eval_setconjunction_singleton" arg2="(fun (_:i1) -&gt; top1)">
         <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
         <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
          <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="112131"/></proof>
          <proof prover="4"><result status="valid" time="0.27" steps="1126"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.1" expl="false case (postcondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.16" steps="36473"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="41147"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set&#39;vc" expl="VC for subset_of_satisfiable_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3784125"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="43932"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_satisfiable_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="38748"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2466309"/></proof>
  <proof prover="2"><result status="valid" time="0.17" steps="37885"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1571077"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="44566"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3557374"/></proof>
  <proof prover="2"><result status="timeout" time="2.00" steps="247303"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="240818"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="satisfiable_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2114374"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="satisfiable_clause.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="satisfiable_clause.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="39031"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3908768"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="478857"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_is_satisfiable_clauselist.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4268308"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="477218"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist" arg2="in" arg3="H">
   <goal name="sublist_is_satisfiable_clauselist.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="is_satisfiable_clauselist">
    <goal name="sublist_is_satisfiable_clauselist.0.0.0" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4136161"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="359166"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="sublist_is_satisfiable_clauselist.0.0.0.0" proved="true">
     <transf name="exists" proved="true" arg1="f">
      <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0" proved="true">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="21654367"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1948466"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct_term" proved="true" arg1="clauselist">
       <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0" proved="true">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="19244217"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3003363"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
        <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1410552"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120846"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="split_vc" proved="true" >
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0.0.0" proved="true">
         <proof prover="2"><result status="valid" time="0.13" steps="37709"/></proof>
         </goal>
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0.0.1" proved="true">
         <proof prover="2"><result status="valid" time="0.26" steps="51562"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4439115"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="387133"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
        <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1.0" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1388425"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181045"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="split_vc" proved="true" >
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1.0.0" proved="true">
         <proof prover="2"><result status="valid" time="0.13" steps="37932"/></proof>
         </goal>
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1.0.1" proved="true">
         <proof prover="2"><result status="valid" time="0.24" steps="48305"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sat_cl_bot_right">
 <proof prover="2"><result status="timeout" time="1.00" steps="108788"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="2729842"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="sat_cl_bot_left" proved="true">
 <proof prover="2"><result status="valid" time="0.33" steps="56896"/></proof>
 </goal>
 <goal name="not_unsat_set_sat_set" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="36304"/></proof>
 </goal>
 <goal name="not_unsat_clause_sat_clause" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="35816"/></proof>
 </goal>
 <goal name="not_unsat_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="35851"/></proof>
 </goal>
 <goal name="not_sat_unsat" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="35751"/></proof>
 </goal>
 <goal name="unsat_then_bot" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="120908"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="4810546"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="unsat_then_bot.0" proved="true">
  <proof prover="0" timelimit="5"><undone/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="799617"/></proof>
  <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
  <transf name="unfold" proved="true" arg1="eval_rightside" arg2="in" arg3="H">
   <goal name="unsat_then_bot.0.0" proved="true">
   <proof prover="0"><undone/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="120557"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="H" arg2="val_all_top">
    <goal name="unsat_then_bot.0.0.0" proved="true">
    <proof prover="0"><undone/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1530254"/></proof>
    <proof prover="3"><result status="timeout" time="1.00" steps="3775470"/></proof>
    <proof prover="4" timelimit="5"><result status="valid" time="3.98" steps="3749"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_unsat_then_p_is_bot" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="127173"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="4854228"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="is_unsat_then_p_is_bot.0" proved="true">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="107479"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" proved="true" arg1="is_unsatisfiable_clause" arg2="in" arg3="H">
   <goal name="is_unsat_then_p_is_bot.0.0" proved="true">
   <proof prover="0" timelimit="5"><undone/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="712830"/></proof>
   <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
   <transf name="unfold" proved="true" arg1="is_satisfiable_clause" arg2="in" arg3="H">
    <goal name="is_unsat_then_p_is_bot.0.0.0" proved="true">
    <transf name="unfold" proved="true" arg1="eval_clause" arg2="in" arg3="H">
     <goal name="is_unsat_then_p_is_bot.0.0.0.0" proved="true">
     <proof prover="2" timelimit="5"><result status="valid" time="0.18" steps="38491"/></proof>
     <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="217437"/></proof>
     <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hornify" proved="true">
 <goal name="eval_union&#39;vc" expl="VC for eval_union" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3682481"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="135299"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="5192661"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_union&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="32935"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="39901"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="3.39" steps="388433"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="838492"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="37188"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.45" steps="56832"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="41407"/></proof>
 </goal>
 <goal name="union_eval_samesingleton" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="44507"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="532592"/></proof>
 <proof prover="2"><result status="valid" time="0.30" steps="52965"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="39764"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="42483"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3699636"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163934"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
  <transf name="unfold" proved="true" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
   <transf name="destruct_term" proved="true" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2951384"/></proof>
    <proof prover="2"><result status="valid" time="0.20" steps="44507"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="232"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4350887"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119188"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" proved="true" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
     <transf name="compile_match" proved="true" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
      <transf name="instantiate" proved="true" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="21860636"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1313291"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="3.71" steps="2879"/></proof>
        <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166990"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.14" steps="717"/></proof>
         <transf name="compile_match" proved="true" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="2"><result status="timeout" time="1.00" steps="100188"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="653"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4336013"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173612"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" proved="true" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4123852"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174336"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" proved="true" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.21" steps="44876"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1" proved="true">
           <proof prover="2"><result status="valid" time="0.18" steps="41755"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4229769"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117470"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4285867"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115962"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" proved="true" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4275269"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114059"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3894993"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114077"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4312540"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115531"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="timeout" time="1.00" steps="113685"/></proof>
       <proof prover="4"><result status="valid" time="0.13" steps="691"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3737655"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="73442"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="188"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3739516"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="73424"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="188"/></proof>
    <transf name="instantiate" proved="true" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3738226"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="74243"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="197"/></proof>
     <transf name="subst" proved="true" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compile_match" proved="true" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.22" steps="47120"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="198"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="48371"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="146199"/></proof>
 <proof prover="4"><result status="valid" time="0.60" steps="3138"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet" proved="true">
 <proof prover="2"><result status="valid" time="0.18" steps="41703"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList" proved="true">
 <proof prover="2"><result status="valid" time="0.21" steps="47487"/></proof>
 </goal>
</theory>
<theory name="ListPlus" proved="true">
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="25384"/></proof>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="24600"/></proof>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="22623"/></proof>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="128839"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1571185"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="24104"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="152170"/></proof>
  <proof prover="4"><result status="valid" time="0.01" steps="19"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.11" steps="23954"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="0.11" steps="24020"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5"><undone/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1525992"/></proof>
  <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.09" steps="22923"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.09" steps="22726"/></proof>
   <proof prover="4"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="154487"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="97"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.11" steps="22726"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="239176"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.09" steps="22666"/></proof>
   <proof prover="4"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="25558"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="158630"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="94"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.13" steps="25558"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_ref" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="23255"/></proof>
 </goal>
 <goal name="permut_trans" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="23373"/></proof>
 </goal>
 <goal name="permut_cl1_cl2" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="23610"/></proof>
 </goal>
 <goal name="concat_with_element" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="27831"/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="25996"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="25297"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="28930"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list" proved="true">
 <proof prover="2"><result status="valid" time="0.44" steps="63179"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="30188"/></proof>
 </goal>
</theory>
<theory name="RemoveFromList" proved="true">
 <goal name="removeFromList_numocc" proved="true">
 <proof prover="2" obsolete="true"><result status="unknown" time="0.17" steps="29290"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2442028"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc.0" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="93967"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3189519"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.30" steps="54373"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2" proved="true">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156739"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3687063"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_numocc_2.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.33" steps="58616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length" proved="true">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="86137"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="4036303"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_length.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_length.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.37" steps="66247"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="161696"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="3563662"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_concat_not_mem_l1.0" proved="true">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="207316"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="34151"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="30925"/></proof>
 </goal>
 <goal name="removeFromList_permut" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="32496"/></proof>
 </goal>
 <goal name="removeFromList_permut_concat" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="51185"/></proof>
 </goal>
 <goal name="removeFromList_elem_not_in_list" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="257973"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="3308295"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_elem_not_in_list.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.12" steps="30181"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="FindOneSubset" proved="true">
 <goal name="findOneSubset_if_only_if_some" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="25393"/></proof>
 </goal>
 <goal name="findOneSubset_mem_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="25636"/></proof>
 </goal>
 <goal name="findOneSubset_nil" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="309930"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="4194173"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_nil.0" proved="true">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="308592"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_nil.0.0" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="findOneSubset_nil.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.06" steps="22271"/></proof>
    </goal>
    <goal name="findOneSubset_nil.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="25663"/></proof>
    <proof prover="3"><result status="valid" time="0.05" steps="129667"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="59"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_notsubset" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="285127"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="4002366"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="findOneSubset_notsubset.0" proved="true">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="281406"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_notsubset.0.0" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="findOneSubset_notsubset.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.06" steps="22406"/></proof>
    </goal>
    <goal name="findOneSubset_notsubset.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.09" steps="24253"/></proof>
    <proof prover="3"><result status="valid" time="0.05" steps="127031"/></proof>
    <proof prover="4"><result status="valid" time="0.01" steps="20"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SetOfSymbols" proved="true">
 <goal name="if_mem_then_subset_set_smb" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="140151"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="2084676"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="if_mem_then_subset_set_smb.0" proved="true">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="141972"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0" proved="true">
   <proof prover="0"><undone/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="168549"/></proof>
   <proof prover="4"><result status="valid" time="0.60" steps="1441"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="42744"/></proof>
 </goal>
 <goal name="sublist_subset_set_smb" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="184585"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="3567337"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="sublist_subset_set_smb.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0" proved="true">
   <proof prover="0"><undone/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="136572"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="sublist_subset_set_smb.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.19" steps="34050"/></proof>
    <proof prover="3"><result status="valid" time="0.06" steps="182280"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="174"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1" proved="true">
    <proof prover="0" timelimit="5"><undone/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="852538"/></proof>
    <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" proved="true" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.13" steps="32135"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1" proved="true">
     <proof prover="0"><undone/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="142386"/></proof>
     <proof prover="4"><result status="valid" time="0.18" steps="1103"/></proof>
     <transf name="destruct" proved="true" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="32565"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1" proved="true">
      <proof prover="0"><undone/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="140074"/></proof>
      <proof prover="4"><result status="valid" time="0.06" steps="343"/></proof>
      <transf name="destruct_term" proved="true" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0" proved="true">
       <transf name="subst" proved="true" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0" proved="true">
        <transf name="replace" proved="true" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0" proved="true">
         <proof prover="2"><result status="valid" time="0.21" steps="38442"/></proof>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><undone/></proof>
         <proof prover="2"><result status="valid" time="0.13" steps="32775"/></proof>
         <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
         <transf name="assert" proved="true" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1.0" expl="asserted formula" proved="true">
          <proof prover="2"><result status="valid" time="0.16" steps="33356"/></proof>
          <proof prover="3"><result status="valid" time="0.06" steps="192824"/></proof>
          <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
          <transf name="destruct" proved="true" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.13" steps="32185"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1.0.1" expl="asserted formula" proved="true">
           <proof prover="2"><result status="valid" time="0.13" steps="31479"/></proof>
           <proof prover="3"><result status="valid" time="0.06" steps="166674"/></proof>
           <proof prover="4"><result status="valid" time="0.02" steps="29"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="2"><result status="valid" time="0.13" steps="32794"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NumOfSubset" proved="true">
 <goal name="numOfSubset&#39;vc" expl="VC for numOfSubset" proved="true">
 <proof prover="2"><result status="valid" time="0.77" steps="122569"/></proof>
 </goal>
 <goal name="not_subset_spec_soundness" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="190513"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1087821"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_spec_soundness.0" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="143319"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="1543452"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="not_subset_spec_soundness.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="50569"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="35114"/></proof>
 </goal>
 <goal name="not_subset_general" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="193681"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1137171"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_general.0" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="34692"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_general.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_general.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="36794"/></proof>
    </goal>
    <goal name="not_subset_general.0.0.1" proved="true">
    <proof prover="0"><undone/></proof>
    <proof prover="2"><result status="valid" time="0.19" steps="38712"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="30"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="not_subset_general.1" proved="true">
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="1466609"/></proof>
  <proof prover="3" timelimit="5"><result status="timeout" time="5.00" steps="8563468"/></proof>
  <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="not_subset_general.1.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="not_subset_general.1.0.0" proved="true">
    <proof prover="0"><undone/></proof>
    <proof prover="2"><result status="valid" time="0.14" steps="35526"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="23"/></proof>
    </goal>
    <goal name="not_subset_general.1.0.1" proved="true">
    <proof prover="2"><result status="timeout" time="1.00" steps="157268"/></proof>
    <proof prover="3"><result status="timeout" time="1.00" steps="641895"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="not_subset_general.1.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.18" steps="38120"/></proof>
     </goal>
     <goal name="not_subset_general.1.0.1.1" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="110886"/></proof>
     <proof prover="3"><result status="timeout" time="1.00" steps="646522"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct_term" proved="true" arg1="x1">
      <goal name="not_subset_general.1.0.1.1.0" proved="true">
      <transf name="instantiate" proved="true" arg1="H" arg2="x2">
       <goal name="not_subset_general.1.0.1.1.0.0" proved="true">
       <transf name="instantiate" proved="true" arg1="Hinst" arg2="x1">
        <goal name="not_subset_general.1.0.1.1.0.0.0" proved="true">
        <proof prover="2"><result status="valid" time="0.19" steps="39680"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_0_not_subset&#39;vc" expl="VC for numOfSubset_0_not_subset" proved="true">
 <proof prover="2"><result status="valid" time="0.21" steps="41569"/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_0" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="38359"/></proof>
 </goal>
 <goal name="notSubset_numOfSubset_1" proved="true">
 <proof prover="2"><result status="valid" time="0.19" steps="38040"/></proof>
 </goal>
 <goal name="addSubset_to_numOfSubset" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="40181"/></proof>
 </goal>
 <goal name="removeNumOfSubset" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="168962"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1150549"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeNumOfSubset.0" proved="true">
  <proof prover="2"><result status="timeout" time="1.00" steps="200763"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeNumOfSubset.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="removeNumOfSubset.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.15" steps="37167"/></proof>
    </goal>
    <goal name="removeNumOfSubset.0.0.1" proved="true">
    <proof prover="0"><undone/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="123981"/></proof>
    <proof prover="4"><result status="valid" time="0.07" steps="526"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_clauselist_c_1" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="39782"/></proof>
 </goal>
 <goal name="numOfSubset_1_num_occ" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="128071"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1225221"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1_num_occ.0" proved="true">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="125924"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1_num_occ.0.0" proved="true">
   <proof prover="2"><result status="timeout" time="1.00" steps="140756"/></proof>
   <proof prover="4"><result status="valid" time="0.16" steps="763"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numOfSubset_1" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="163530"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1118103"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="numOfSubset_1.0" proved="true">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="160945"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="numOfSubset_1.0.0" proved="true">
   <proof prover="0"><undone/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="162007"/></proof>
   <proof prover="4"><result status="valid" time="0.19" steps="1198"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_permut&#39;vc" expl="VC for not_subset_permut" proved="true">
 <proof prover="2"><result status="timeout" time="1.00" steps="104854"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1174090"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="not_subset_permut&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="38064"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="40560"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="41422"/></proof>
  </goal>
  <goal name="not_subset_permut&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="38661"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="not_subset_spec_for_all" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="43919"/></proof>
 </goal>
</theory>
<theory name="Horn_Logic">
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1539885"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117463"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="47000"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161284"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="45272"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8307372"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149933"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.24" steps="45304"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162617"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3226356"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="algorithmA_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.14" steps="42697"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="42758"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.51" steps="74194"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="postcondition">
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823795"/></proof>
  <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="11207914"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="algorithmA_spec&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="51400"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.4.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159419"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2642290"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" arg1="H">
    <goal name="algorithmA_spec&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.27" steps="53250"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2738729"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.4.1.1" expl="postcondition">
    <proof prover="2"><result status="timeout" time="1.00" steps="98612"/></proof>
    <proof prover="3"><result status="timeout" time="1.00" steps="2788453"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="algorithmA_spec&#39;vc.4.1.1.0" expl="postcondition">
     <transf name="eliminate_let" >
      <goal name="algorithmA_spec&#39;vc.4.1.1.0.0" expl="postcondition">
      <proof prover="2"><result status="timeout" time="1.00" steps="114812"/></proof>
      <proof prover="3"><result status="timeout" time="1.00" steps="2853716"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0" expl="postcondition">
       <proof prover="2"><result status="timeout" time="1.00" steps="114816"/></proof>
       <proof prover="3"><result status="timeout" time="1.00" steps="2908352"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="H">
        <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0" expl="postcondition">
        <proof prover="2"><result status="timeout" time="1.00" steps="119393"/></proof>
        <proof prover="3"><result status="timeout" time="1.00" steps="2900731"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="H">
         <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.50" steps="78924"/></proof>
         </goal>
         <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1" expl="postcondition">
         <proof prover="2"><result status="timeout" time="1.00" steps="142824"/></proof>
         <proof prover="3"><result status="timeout" time="1.00" steps="2228761"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="H">
          <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0" expl="postcondition">
          <proof prover="2"><result status="timeout" time="1.00" steps="121326"/></proof>
          <proof prover="3"><result status="timeout" time="1.00" steps="2272701"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="H">
           <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0.0" expl="postcondition">
           <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="657939"/></proof>
           <proof prover="3" timelimit="5"><result status="timeout" time="5.00" steps="8465294"/></proof>
           <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
           <transf name="instantiate" arg1="subset_set_smb_clauselist" arg2="clauselist">
            <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0.0.0" expl="postcondition">
            <proof prover="2"><result status="timeout" time="1.00" steps="113669"/></proof>
            <proof prover="3"><result status="timeout" time="1.00" steps="2149388"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" arg1="Hinst" arg2="x1,x">
             <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0.0.0.0" expl="postcondition">
             <proof prover="2"><result status="timeout" time="1.00" steps="111611"/></proof>
             <proof prover="3"><result status="timeout" time="1.00" steps="2103234"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
              <proof prover="2"><result status="valid" time="0.18" steps="44479"/></proof>
              <proof prover="3"><result status="valid" time="0.19" steps="540387"/></proof>
              <proof prover="4"><result status="valid" time="0.05" steps="201"/></proof>
              <transf name="instantiate" proved="true" arg1="sublist_subset_set_smb" arg2="clauselist">
               <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
               <transf name="instantiate" proved="true" arg1="Hinst" arg2="(removeFromList (x1, x) clauselist)">
                <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
                <proof prover="2"><result status="valid" time="0.18" steps="44726"/></proof>
                <transf name="destruct" proved="true" arg1="Hinst">
                 <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
                 <proof prover="2"><result status="valid" time="0.26" steps="52902"/></proof>
                 </goal>
                 <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="destruct premise" proved="true">
                 <proof prover="2"><result status="valid" time="0.18" steps="44625"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="algorithmA_spec&#39;vc.4.1.1.0.0.0.0.1.0.0.0.0.1" expl="postcondition">
              <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="797951"/></proof>
              <proof prover="3" timelimit="5"><result status="timeout" time="5.00" steps="9452472"/></proof>
              <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1533075"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119104"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="48396"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8756521"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="945799"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="permutacoes&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.34" steps="48694"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="46241"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="46273"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.4" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="360378"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3223688"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="permutacoes&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.18" steps="45838"/></proof>
   </goal>
   <goal name="permutacoes&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="766470"/></proof>
   <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13245623"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
    <goal name="permutacoes&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105837"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2802254"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="permutacoes&#39;vc.4.1.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.09" steps="41652"/></proof>
     </goal>
     <goal name="permutacoes&#39;vc.4.1.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106854"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2806349"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="permutacoes&#39;vc.4.1.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.10" steps="41650"/></proof>
      </goal>
      <goal name="permutacoes&#39;vc.4.1.0.1.1" expl="postcondition" proved="true">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107586"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2808015"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="permutacoes&#39;vc.4.1.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.20" steps="45369"/></proof>
       </goal>
       <goal name="permutacoes&#39;vc.4.1.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108614"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2878575"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0" expl="postcondition" proved="true">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112663"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3163191"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" proved="true" arg1="(findOneSubset clauselist c = findOneSubset clauselist2 c)">
         <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.0" expl="asserted formula" proved="true">
         <proof prover="2"><result status="valid" time="0.24" steps="54022"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.1" expl="postcondition" proved="true">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121508"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3182278"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
          <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.1.0" expl="postcondition" proved="true">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114417"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3210524"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.1.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.09" steps="41726"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.1.0.1" expl="postcondition" proved="true">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114391"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3138220"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.1.0.1.0" expl="destruct premise" proved="true">
            <proof prover="2"><result status="valid" time="0.09" steps="41724"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.1.0.1.1" expl="postcondition" proved="true">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118748"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3175476"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.1.0.1.1.0" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.29" steps="45968"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.1.0.1.1.1.0.1.0.1.1.1" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.23" steps="46768"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutacoes&#39;vc.4.1.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.29" steps="65537"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutacoes&#39;vc.4.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137293"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2637814"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(findOneSubset clauselist2 c = None)">
    <goal name="permutacoes&#39;vc.4.2.0" expl="asserted formula">
    <proof prover="2"><result status="timeout" time="1.00" steps="114175"/></proof>
    <proof prover="3"><result status="timeout" time="1.00" steps="2612460"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
     <goal name="permutacoes&#39;vc.4.2.0.0" expl="asserted formula">
     <proof prover="2"><result status="timeout" time="1.00" steps="111895"/></proof>
     <proof prover="3"><result status="timeout" time="1.00" steps="2619117"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="permutacoes&#39;vc.4.2.0.0.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.11" steps="42170"/></proof>
      </goal>
      <goal name="permutacoes&#39;vc.4.2.0.0.1" expl="asserted formula">
      <proof prover="2"><result status="timeout" time="1.00" steps="111890"/></proof>
      <proof prover="3"><result status="timeout" time="1.00" steps="2583065"/></proof>
      <proof prover="4"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="permutacoes&#39;vc.4.2.0.0.1.0" expl="destruct premise" proved="true">
       <proof prover="2"><result status="valid" time="0.11" steps="42168"/></proof>
       </goal>
       <goal name="permutacoes&#39;vc.4.2.0.0.1.1" expl="asserted formula">
       <proof prover="2"><result status="timeout" time="1.00" steps="111875"/></proof>
       <proof prover="3"><result status="timeout" time="1.00" steps="2634759"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="permutacoes&#39;vc.4.2.0.0.1.1.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.23" steps="47880"/></proof>
        </goal>
        <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1" expl="asserted formula">
        <proof prover="2"><result status="timeout" time="1.00" steps="123591"/></proof>
        <proof prover="3"><result status="timeout" time="1.00" steps="2237768"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.0" expl="asserted formula" proved="true">
         <proof prover="2"><result status="valid" time="0.24" steps="48242"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1" expl="asserted formula">
         <proof prover="2"><result status="timeout" time="1.00" steps="148703"/></proof>
         <proof prover="3"><result status="timeout" time="1.00" steps="2358983"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist2,c">
          <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0" expl="asserted formula">
          <proof prover="2"><result status="timeout" time="1.00" steps="163588"/></proof>
          <proof prover="3"><result status="timeout" time="1.00" steps="2420582"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.0" expl="destruct premise" proved="true">
           <proof prover="2"><result status="valid" time="0.11" steps="42352"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.1" expl="asserted formula">
           <proof prover="2"><result status="timeout" time="1.00" steps="163578"/></proof>
           <proof prover="3"><result status="timeout" time="1.00" steps="2363047"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.1.0" expl="destruct premise" proved="true">
            <proof prover="2"><result status="valid" time="0.11" steps="42350"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.1.1" expl="asserted formula">
            <proof prover="2"><result status="timeout" time="1.00" steps="163568"/></proof>
            <proof prover="3"><result status="timeout" time="1.00" steps="2443708"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.1.1.0" expl="asserted formula" proved="true">
             <proof prover="2"><result status="valid" time="0.22" steps="49428"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.1.1.1" expl="asserted formula">
             <proof prover="2"><result status="timeout" time="1.00" steps="126578"/></proof>
             <proof prover="3"><result status="timeout" time="1.00" steps="2763694"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.1.1.1.0" expl="asserted formula" proved="true">
              <proof prover="2"><result status="valid" time="0.11" steps="40282"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.1.1.1.1" expl="asserted formula">
              <proof prover="2"><result status="timeout" time="1.00" steps="103956"/></proof>
              <proof prover="3"><result status="timeout" time="1.00" steps="2079397"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.1.1.1.1.0" expl="asserted formula">
               <proof prover="2"><result status="timeout" time="1.00" steps="100474"/></proof>
               <proof prover="3"><result status="timeout" time="1.00" steps="2164920"/></proof>
               <proof prover="4"><result status="timeout" time="1.00"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.4.2.0.0.1.1.1.1.0.1.1.1.1.1" expl="asserted formula">
               <proof prover="2"><result status="timeout" time="1.00" steps="100638"/></proof>
               <proof prover="3"><result status="timeout" time="1.00" steps="2352605"/></proof>
               <proof prover="4"><result status="timeout" time="1.00"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permutacoes&#39;vc.4.2.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.56" steps="72396"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2573180"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="571807"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123339"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="48734"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="46595"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="46627"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="46657"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="271153"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="monotone_algA&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.16" steps="46657"/></proof>
   <proof prover="3"><result status="valid" time="0.05" steps="271153"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
   <transf name="eliminate_let" proved="true" >
    <goal name="monotone_algA&#39;vc.3.0.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.16" steps="46649"/></proof>
    <proof prover="3"><result status="valid" time="0.05" steps="271045"/></proof>
    <proof prover="4"><result status="valid" time="0.03" steps="48"/></proof>
    <transf name="destruct" proved="true" arg1="H">
     <goal name="monotone_algA&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <proof prover="2" timelimit="5"><result status="valid" time="0.16" steps="46649"/></proof>
     <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="271045"/></proof>
     <proof prover="4" timelimit="5"><result status="valid" time="0.03" steps="48"/></proof>
     <transf name="assert" proved="true" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
      <goal name="monotone_algA&#39;vc.3.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1953337"/></proof>
      <proof prover="2"><result status="valid" time="1.51" steps="154496"/></proof>
      <proof prover="4"><result status="valid" time="0.08" steps="581"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.3.0.0.0.1" expl="precondition" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="46677"/></proof>
      <proof prover="4"><result status="valid" time="0.03" steps="50"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="monotone_algA&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2121836"/></proof>
  <proof prover="2" timelimit="20" obsolete="true"><result status="timeout" time="20.00" steps="3938080"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="monotone_algA&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.28" steps="63776"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="monotone_algA&#39;vc.5" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="186123"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3189189"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_algA&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="185178"/></proof>
   <proof prover="4"><result status="valid" time="0.03" steps="270"/></proof>
   </goal>
   <goal name="monotone_algA&#39;vc.5.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125441"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2792181"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
    <goal name="monotone_algA&#39;vc.5.1.0" expl="asserted formula">
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="495317"/></proof>
    <proof prover="3" timelimit="5"><result status="timeout" time="5.00" steps="8160379"/></proof>
    <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="monotone_algA&#39;vc.5.1.1" expl="postcondition" proved="true">
    <proof prover="2" timelimit="5"><result status="valid" time="0.91" steps="96111"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2774787"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_algA&#39;vc.5.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161740"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb_generic" proved="true">
 <proof prover="2"><result status="valid" time="0.46" steps="72701"/></proof>
 </goal>
 <goal name="smb" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="55320"/></proof>
 </goal>
 <goal name="set_equality_add" proved="true">
 <proof prover="2"><result status="valid" time="0.42" steps="66006"/></proof>
 </goal>
 <goal name="removeTwoClauses_basecase&#39;vc" expl="VC for removeTwoClauses_basecase" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="396895"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115236"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_basecase&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1318258"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129806"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_basecase&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_basecase&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.20" steps="47581"/></proof>
     <proof prover="3"><result status="valid" time="0.05" steps="278324"/></proof>
     <proof prover="4"><result status="valid" time="0.03" steps="46"/></proof>
     </goal>
     <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148245"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.19" steps="47592"/></proof>
      </goal>
      <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1351662"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145667"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1471679"/></proof>
       <proof prover="2"><result status="valid" time="0.30" steps="55620"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1481976"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104749"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.21" steps="49680"/></proof>
        <proof prover="3"><result status="valid" time="0.26" steps="564303"/></proof>
        <proof prover="4"><result status="valid" time="0.07" steps="244"/></proof>
        </goal>
        <goal name="removeTwoClauses_basecase&#39;vc.0.0.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.32" steps="58202"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses_inductive_case2&#39;vc" expl="VC for removeTwoClauses_inductive_case2" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1766971"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="103347"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeTwoClauses_inductive_case2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4334625"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="429173"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(removeFromList elem1 clauselist)">
   <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(add (convertRStoAF p1) c)">
    <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.20" steps="49007"/></proof>
     <proof prover="3"><result status="valid" time="0.05" steps="283898"/></proof>
     <proof prover="4"><result status="valid" time="0.03" steps="44"/></proof>
     </goal>
     <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126735"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.20" steps="49018"/></proof>
      </goal>
      <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1762559"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128039"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1350713"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="218018"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="506742"/></proof>
        <proof prover="2"><result status="valid" time="0.31" steps="59837"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.0.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.20" steps="47883"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1409341"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113154"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" proved="true" arg1="(is_equal_list (removeFromList elem1 clauselist) (Cons elem2 Nil))">
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="499191"/></proof>
        <proof prover="2"><result status="valid" time="1.04" steps="107624"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="removeTwoClauses_inductive_case2&#39;vc.0.0.0.1.1.1.1" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.48" steps="83782"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeTwoClauses&#39;vc" expl="VC for removeTwoClauses" proved="true">
 <proof prover="2"><result status="valid" time="0.27" steps="54783"/></proof>
 </goal>
 <goal name="removeFromList_algorithmA&#39;vc" expl="VC for removeFromList_algorithmA" proved="true">
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_algorithmA&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1925879"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124709"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="removeFromList_algorithmA&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="removeFromList_algorithmA&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.13" steps="47380"/></proof>
     <proof prover="3"><result status="valid" time="0.02" steps="19139"/></proof>
     <proof prover="4"><result status="valid" time="0.03" steps="32"/></proof>
     </goal>
     <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127588"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.13" steps="47378"/></proof>
      </goal>
      <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1947446"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127577"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.29" steps="53213"/></proof>
       </goal>
       <goal name="removeFromList_algorithmA&#39;vc.0.0.0.1.1.1" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.26" steps="55654"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="diff_is_sat_p" proved="true">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153412"/></proof>
 <proof prover="3"><result status="valid" time="0.13" steps="412019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="herbrand_general_c&#39;vc" expl="VC for herbrand_general_c">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1510802"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166892"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2202263"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="herbrand_general_c&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="53892"/></proof>
  </goal>
  <goal name="herbrand_general_c&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="84064"/></proof>
  </goal>
  <goal name="herbrand_general_c&#39;vc.2" expl="precondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165504"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2722402"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="herbrand_general_c&#39;vc.2.0" expl="precondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163340"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2687747"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="((convertRStoAF x) &lt;&gt; ABot)">
    <goal name="herbrand_general_c&#39;vc.2.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="45676"/></proof>
    </goal>
    <goal name="herbrand_general_c&#39;vc.2.0.1" expl="precondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171438"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2699132"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" arg1="(is_satisfiable_clause (x1,x))">
     <goal name="herbrand_general_c&#39;vc.2.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132618"/></proof>
     <proof prover="3"><result status="valid" time="0.09" steps="315675"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="herbrand_general_c&#39;vc.2.0.1.1" expl="precondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166674"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2638686"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" arg1="(forall f. eval_setconjunction x1 f = top1)">
      <goal name="herbrand_general_c&#39;vc.2.0.1.1.0" expl="asserted formula">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162188"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1287751"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="herbrand_general_c&#39;vc.2.0.1.1.1" expl="precondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="167667"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2699026"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="assert" arg1="(forall f. eval_rightside (assign_rightside x f) = top1)">
       <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0" expl="asserted formula">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156346"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2637088"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="unfold" arg1="is_satisfiable_clause" arg2="in" arg3="h2">
        <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0" expl="asserted formula">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138282"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2460608"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="introduce_exists" >
         <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0" expl="asserted formula">
         <transf name="unfold" arg1="eval_clause" arg2="in" arg3="h2">
          <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0.0" expl="asserted formula">
          <transf name="compile_match" >
           <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0.0.0" expl="asserted formula">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155492"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2744639"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="h1" arg2="f">
            <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0.0.0.0" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154305"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2612943"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" arg1="modus_ponens" arg2="(eval_setconjunction x1 f)">
             <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0.0.0.0.0" expl="asserted formula">
             <transf name="instantiate" arg1="Hinst" arg2="(eval_rightside (assign_rightside x f))">
              <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0.0.0.0.0.0" expl="asserted formula">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154413"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2673913"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
               <proof prover="2"><result status="valid" time="0.12" steps="46118"/></proof>
               </goal>
               <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0.0.0.0.0.0.1" expl="asserted formula">
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151153"/></proof>
               <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2725868"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="introduce_premises" >
                <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0.0.0.0.0.0.1.0" expl="asserted formula">
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161866"/></proof>
                <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2781987"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           <transf name="introduce_premises" >
            <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.0.0.0.0.0.0" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162265"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2771275"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="herbrand_general_c&#39;vc.2.0.1.1.1.1" expl="precondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164187"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2757256"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    <transf name="assert" arg1="(forall f. eval_clause (x1, x) f = top1)">
     <goal name="herbrand_general_c&#39;vc.2.0.1.0" expl="asserted formula">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130434"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2608718"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="herbrand_general_c&#39;vc.2.0.1.1" expl="precondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152869"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2677220"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" arg1="eval_clause" arg2="in" arg3="h">
      <goal name="herbrand_general_c&#39;vc.2.0.1.1.0" expl="precondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150397"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2561080"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="compile_match" >
       <goal name="herbrand_general_c&#39;vc.2.0.1.1.0.0" expl="precondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155231"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2671309"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="h" arg2="f">
        <goal name="herbrand_general_c&#39;vc.2.0.1.1.0.0.0" expl="precondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157186"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2556524"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(forall f. eval_setconjunction x1 f = top1)">
         <goal name="herbrand_general_c&#39;vc.2.0.1.1.0.0.0.0" expl="asserted formula">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160904"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1040011"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="herbrand_general_c&#39;vc.2.0.1.1.0.0.0.1" expl="precondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163372"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2726670"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   <transf name="assert" arg1="(subset x1 set)">
    <goal name="herbrand_general_c&#39;vc.2.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.27" steps="55680"/></proof>
    </goal>
    <goal name="herbrand_general_c&#39;vc.2.0.1" expl="precondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137304"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2681493"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="assert" arg1="(forall f p.
   mem p x1 -&gt; eval_atomicformula p f = top1)">
     <goal name="herbrand_general_c&#39;vc.2.0.1.0" expl="asserted formula">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="178710"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2739516"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="herbrand_general_c&#39;vc.2.0.1.1" expl="precondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166812"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2767635"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="herbrand_general_c&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="52568"/></proof>
  </goal>
  <goal name="herbrand_general_c&#39;vc.4" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146124"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2344116"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,set">
   <goal name="herbrand_general_c&#39;vc.4.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160294"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2198620"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" arg1="Hinst">
    <goal name="herbrand_general_c&#39;vc.4.0.0" expl="destruct premise" proved="true">
    <proof prover="2"><result status="valid" time="0.13" steps="48890"/></proof>
    </goal>
    <goal name="herbrand_general_c&#39;vc.4.0.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156611"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2210883"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="herbrand_general_c&#39;vc.4.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148162"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2135054"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" proved="true" arg1="(exists f. eval_atomicformula ABot f = bot1)">
      <goal name="herbrand_general_c&#39;vc.4.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172087"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2568533"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="assert" proved="true" arg1="(forall f. eval_atomicformula ABot f = bot1)">
       <goal name="herbrand_general_c&#39;vc.4.0.1.0.0.0" expl="asserted formula" proved="true">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="171363"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2573283"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" proved="true" arg1="forall_eval_af_bot_exists_eval_af_bot" arg2="f">
        <goal name="herbrand_general_c&#39;vc.4.0.1.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.19" steps="51219"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="herbrand_general_c&#39;vc.4.0.1.0.0.1" expl="asserted formula" proved="true">
       <proof prover="2" timelimit="5"><result status="valid" time="3.22" steps="459185"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2575253"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="herbrand_general_c&#39;vc.4.0.1.0.1" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.21" steps="53685"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="herbrand_general_c&#39;vc.4.0.1.1" expl="postcondition">
     <proof prover="2"><result status="timeout" time="1.00" steps="164360"/></proof>
     <proof prover="3"><result status="timeout" time="1.00" steps="2133861"/></proof>
     <proof prover="4"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="herbrand_general_c&#39;vc.4.0.1.1.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.18" steps="51351"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2568130"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="herbrand_general_c&#39;vc.4.0.1.1.1" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159576"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2621587"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="herbrand_general_c&#39;vc.4.0.1.1.1.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.19" steps="51403"/></proof>
       <proof prover="3"><result status="valid" time="0.08" steps="296919"/></proof>
       <proof prover="4" timelimit="5"><result status="valid" time="0.03" steps="43"/></proof>
       </goal>
       <goal name="herbrand_general_c&#39;vc.4.0.1.1.1.1" expl="postcondition">
       <proof prover="2"><result status="timeout" time="1.00" steps="131365"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="herbrand" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1666284"/></proof>
 <proof prover="2"><result status="valid" time="0.29" steps="56187"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="is_sat_set" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2069353"/></proof>
 <proof prover="2"><result status="valid" time="0.26" steps="52748"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="removeFromList_not_empty_setc_clauselist" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1829658"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105946"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1903199"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="removeFromList_not_empty_setc_clauselist.0" proved="true">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7181333"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="434332"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="clauselist">
   <goal name="removeFromList_not_empty_setc_clauselist.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.37" steps="67008"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_top_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="950343"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108817"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case1_top_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1423992"/></proof>
  <proof prover="2"><result status="valid" time="0.53" steps="69293"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="case1_top_imples_p.1">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1776587"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133183"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_top_imples_p.1.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_top_imples_p.1.0.0">
    <transf name="destruct" arg1="Hinst">
     <goal name="case1_top_imples_p.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.21" steps="54034"/></proof>
     <proof prover="3"><result status="valid" time="0.18" steps="304217"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="33"/></proof>
     </goal>
     <goal name="case1_top_imples_p.1.0.0.1">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146626"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case1_top_imples_p.1.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.21" steps="54097"/></proof>
      </goal>
      <goal name="case1_top_imples_p.1.0.0.1.1">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1817856"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143007"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case1_top_imples_p.1.0.0.1.1.0" proved="true">
       <proof prover="2"><result status="valid" time="0.21" steps="54142"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="case1_top_imples_p.1.0.0.1.1.1">
       <transf name="destruct" arg1="Hinst">
        <goal name="case1_top_imples_p.1.0.0.1.1.1.0" proved="true">
        <proof prover="0" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
        <proof prover="2"><result status="valid" time="0.19" steps="54212"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0">
         <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="250606"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2723452"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
         <transf name="assert" arg1="(s = singleton ATop)">
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.0" expl="asserted formula">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138697"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.79" steps="2109"/></proof>
          </goal>
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146329"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2653931"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(p &lt;&gt; RProp bot1)">
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1.0" expl="asserted formula">
           <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="56403"/></proof>
           </goal>
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1.1">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141821"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2696189"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" arg1="(is_satisfiable_clause (s,p))">
            <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1.1.0" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138547"/></proof>
            <proof prover="3" obsolete="true"><result status="valid" time="0.17" steps="537221"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
            <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1.1.1">
            <proof prover="2" obsolete="true"><result status="valid" time="0.40" steps="72153"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1">
         <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152911"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2717048"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(subset s (singleton ATop))">
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.0" expl="asserted formula">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143342"/></proof>
          <transf name="assert" arg1="(is_satisfiable_clause (s,p))">
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.0.0" expl="asserted formula">
           <proof prover="2" obsolete="true"><result status="valid" time="0.34" steps="65847"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="2.00" steps="4751695"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.0.1" expl="asserted formula">
           <proof prover="2" obsolete="true"><result status="valid" time="0.30" steps="57885"/></proof>
           <proof prover="3" obsolete="true"><result status="valid" time="0.15" steps="484740"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="451"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.1">
          <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="60688"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2867050"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="177"/></proof>
          <transf name="assert" arg1="(is_satisfiable_clause (s,p))">
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.1.0" expl="asserted formula">
           <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="57088"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2784701"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="436"/></proof>
           </goal>
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.1.1">
           <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="60767"/></proof>
           <proof prover="3" obsolete="true"><result status="valid" time="0.12" steps="416097"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="185"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case1_top_imples_p.1.0.0.1.1.1.1">
        <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156123"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2741268"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0" proved="true">
         <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140807"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2631283"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" proved="true" arg1="(subset s (singleton ATop))">
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.0" expl="asserted formula" proved="true">
          <proof prover="2"><result status="valid" time="0.31" steps="57423"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2783734"/></proof>
          <proof prover="4"><result status="valid" time="0.05" steps="173"/></proof>
          <transf name="assert" proved="true" arg1="(is_satisfiable_clause (s,p))">
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.0.0" expl="asserted formula" proved="true">
           <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
           <proof prover="3"><result status="valid" time="0.44" steps="975275"/></proof>
           <proof prover="4"><result status="valid" time="0.83" steps="2141"/></proof>
           </goal>
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.0.1" expl="asserted formula" proved="true">
           <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2784721"/></proof>
           <proof prover="4"><result status="valid" time="0.05" steps="180"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1" proved="true">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139851"/></proof>
          <transf name="assert" proved="true" arg1="(is_satisfiable_clause (s,p))">
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1.0" expl="asserted formula" proved="true">
           <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="2.00" steps="4833288"/></proof>
           <proof prover="4"><result status="valid" time="0.86" steps="2284"/></proof>
           </goal>
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.0.1.1" proved="true">
           <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
           <proof prover="3"><result status="valid" time="0.40" steps="1076473"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1">
         <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145119"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2653289"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(subset s (singleton ATop))">
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.0" expl="asserted formula" proved="true">
          <proof prover="2"><result status="valid" time="0.30" steps="58421"/></proof>
          </goal>
          <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.1">
          <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="258084"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2765394"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(is_satisfiable_clause (s,p))">
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.1.0" expl="asserted formula" proved="true">
           <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
           <proof prover="3"><result status="valid" time="0.10" steps="328100"/></proof>
           <proof prover="4"><result status="valid" time="0.08" steps="465"/></proof>
           </goal>
           <goal name="case1_top_imples_p.1.0.0.1.1.1.1.1.1.1">
           <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
           <proof prover="3"><result status="timeout" time="2.00" steps="5682710"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_conjuction_imples_p" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1279203"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109437"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="case1_conjuction_imples_p.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1259253"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117372"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" proved="true" arg1="algorithmA_spec&#39;def" arg2="(clauselist)">
   <goal name="case1_conjuction_imples_p.0.0" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="case1_conjuction_imples_p.0.0.0" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="case1_conjuction_imples_p.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.21" steps="54262"/></proof>
     <proof prover="3"><result status="valid" time="0.18" steps="305480"/></proof>
     <proof prover="4"><result status="valid" time="0.03" steps="37"/></proof>
     </goal>
     <goal name="case1_conjuction_imples_p.0.0.0.1" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142779"/></proof>
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="case1_conjuction_imples_p.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.21" steps="54338"/></proof>
      </goal>
      <goal name="case1_conjuction_imples_p.0.0.0.1.1" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1106177"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142548"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.0" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1372349"/></proof>
       <proof prover="2"><result status="valid" time="0.21" steps="54383"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="case1_conjuction_imples_p.0.0.0.1.1.1" proved="true">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138674"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1801495"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="subst" proved="true" arg1="clauselist">
        <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.0" proved="true">
        <transf name="subst" proved="true" arg1="clause">
         <goal name="case1_conjuction_imples_p.0.0.0.1.1.1.0.0" proved="true">
         <proof prover="2"><result status="valid" time="0.42" steps="72602"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1796424"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case1_general" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="56625"/></proof>
 </goal>
 <goal name="case1_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="56762"/></proof>
 </goal>
 <goal name="case1_general_conjuction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="56955"/></proof>
 </goal>
 <goal name="case2_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.70" steps="96586"/></proof>
 </goal>
 <goal name="case2_conjunction_imples_p&#39;vc" expl="VC for case2_conjunction_imples_p">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1096448"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131784"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1346615"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_conjunction_imples_p&#39;vc.0" expl="postcondition">
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist">
   <goal name="case2_conjunction_imples_p&#39;vc.0.0" expl="postcondition">
   <transf name="instantiate" arg1="Hinst" arg2="c">
    <goal name="case2_conjunction_imples_p&#39;vc.0.0.0" expl="postcondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.14" steps="50841"/></proof>
     <proof prover="3"><result status="valid" time="0.02" steps="20621"/></proof>
     <proof prover="4"><result status="valid" time="0.03" steps="34"/></proof>
     </goal>
     <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146217"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2116897"/></proof>
      <proof prover="2"><result status="valid" time="0.13" steps="50839"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1886679"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142940"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.0" expl="postcondition" proved="true">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2210582"/></proof>
       <proof prover="2"><result status="valid" time="0.19" steps="55780"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2643078"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.0" expl="postcondition">
        <proof prover="2"><result status="valid" time="0.51" steps="87942"/></proof>
        </goal>
        <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1" expl="postcondition">
        <proof prover="2"><result status="timeout" time="1.00" steps="193095"/></proof>
        <proof prover="3"><result status="timeout" time="1.00" steps="2828905"/></proof>
        <proof prover="4"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0" expl="postcondition">
         <proof prover="2"><result status="timeout" time="1.00" steps="196320"/></proof>
         <proof prover="3"><result status="timeout" time="1.00" steps="2958606"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(exists f. eval_clauselist clauselist f = top1)">
          <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.0" expl="asserted formula">
          <proof prover="2"><result status="valid" time="0.61" steps="119321"/></proof>
          </goal>
          <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1" expl="postcondition">
          <proof prover="2"><result status="timeout" time="1.00" steps="165534"/></proof>
          <proof prover="3"><result status="timeout" time="1.00" steps="2898720"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="introduce_exists" >
           <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0" expl="postcondition">
           <proof prover="2"><result status="timeout" time="1.00" steps="163021"/></proof>
           <proof prover="3"><result status="timeout" time="1.00" steps="3005284"/></proof>
           <proof prover="4"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" arg1="(eval_clause (s,p) f = top1)">
            <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.0" expl="asserted formula">
            <proof prover="2"><result status="valid" time="0.30" steps="59739"/></proof>
            </goal>
            <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.1" expl="postcondition">
            <proof prover="2"><result status="timeout" time="1.00" steps="165913"/></proof>
            <proof prover="3"><result status="timeout" time="1.00" steps="3032766"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" arg1="(subset s c)">
             <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.1.0" expl="asserted formula">
             <proof prover="2"><result status="valid" time="0.52" steps="96568"/></proof>
             </goal>
             <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.1.1" expl="postcondition">
             <proof prover="2"><result status="timeout" time="1.00" steps="167625"/></proof>
             <proof prover="3"><result status="valid" time="0.18" steps="606991"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1" expl="postcondition">
         <proof prover="2"><result status="timeout" time="1.00" steps="211352"/></proof>
         <proof prover="3"><result status="timeout" time="1.00" steps="2890834"/></proof>
         <proof prover="4"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(removeFromList (s, p) clauselist = Nil)">
          <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.0" expl="asserted formula">
          <proof prover="2"><result status="valid" time="0.32" steps="68392"/></proof>
          </goal>
          <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.1" expl="postcondition">
          <proof prover="2"><result status="timeout" time="1.00" steps="215811"/></proof>
          <proof prover="3"><result status="timeout" time="1.00" steps="2734800"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(removeFromList (s, p) clauselist)">
           <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.1.0" expl="postcondition">
           <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p) c)">
            <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.1.0.0" expl="postcondition">
            <proof prover="2"><result status="timeout" time="1.00" steps="206320"/></proof>
            <proof prover="3"><result status="timeout" time="1.00" steps="2751573"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.1.0.0.0" expl="destruct premise">
             <proof prover="2"><result status="valid" time="0.21" steps="58687"/></proof>
             </goal>
             <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.1.0.0.1" expl="postcondition">
             <proof prover="2"><result status="timeout" time="1.00" steps="199382"/></proof>
             <proof prover="3"><result status="timeout" time="1.00" steps="2761514"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.1.0.0.1.0" expl="destruct premise">
              <proof prover="2"><result status="timeout" time="1.00" steps="185226"/></proof>
              <proof prover="3"><result status="timeout" time="1.00" steps="2946303"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              </goal>
              <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.1.0.0.1.1" expl="postcondition">
              <proof prover="2"><result status="timeout" time="1.00" steps="202801"/></proof>
              <proof prover="3"><result status="timeout" time="1.00" steps="2839028"/></proof>
              <proof prover="4"><result status="timeout" time="1.00"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1569358"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="268453"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2674351"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="183134"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2910078"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="184085"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2979191"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(exists f. eval_clauselist clauselist f = top1)">
          <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.0" expl="asserted formula">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174391"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2915908"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="introduce_exists" >
           <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.0.0" expl="asserted formula">
           <proof prover="2" obsolete="true"><result status="valid" time="0.67" steps="119355"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2898396"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" arg1="(eval_clause (s,p) f = top1)">
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.1.0.0" expl="asserted formula">
            <proof prover="2"><result status="failure" time="0.00"/></proof>
            </goal>
            <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.1.0.1">
            <proof prover="2"><result status="timeout" time="1.00" steps="173690"/></proof>
            <proof prover="3"><result status="timeout" time="1.00" steps="2899862"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" arg1="(subset s c)">
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.1.0.1.0" expl="asserted formula">
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             </goal>
             <goal name="case2_conjunction_imples_p.0.0.0.1.1.1.1.0.1.0.1.1">
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             <proof prover="3"><result status="valid" time="0.19" steps="606991"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1" expl="postcondition">
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="654414"/></proof>
          <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10034826"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="introduce_exists" >
           <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164767"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2261417"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" arg1="(eval_clause (s,p) f = top1)">
            <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.0" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="59915"/></proof>
            </goal>
            <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="164265"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2220008"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" arg1="(eval_setconjunction s f = top1)">
             <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.1.0" expl="asserted formula">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156925"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2485113"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="assert" arg1="(subset s c)">
              <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.1.0.0" expl="asserted formula">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162601"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="238"/></proof>
              </goal>
              <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.1.0.1" expl="asserted formula">
              <proof prover="2" obsolete="true"><result status="valid" time="0.52" steps="96475"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.0.1.0.1.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="valid" time="0.65" steps="125237"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="176124"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2258191"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(exists f. eval_clauselist clauselist f = top1)">
          <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.0" expl="asserted formula">
          <proof prover="2" obsolete="true"><result status="valid" time="0.61" steps="163576"/></proof>
          <proof prover="3" obsolete="true"><result status="valid" time="0.10" steps="349424"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="206"/></proof>
          </goal>
          <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="197039"/></proof>
          <proof prover="4" obsolete="true"><result status="valid" time="0.58" steps="3257"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case2_conjunction_imples_p&#39;vc.0.0.0.1.1.1.1" expl="postcondition">
        <proof prover="2"><result status="timeout" time="1.00" steps="178966"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general&#39;vc" expl="VC for case2_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1106342"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120798"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case2_general&#39;vc.0" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3009360"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="891756"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
   <goal name="case2_general&#39;vc.0.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="967026"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146096"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct" arg1="Hinst">
    <goal name="case2_general&#39;vc.0.0.0" expl="destruct premise" proved="true">
    <proof prover="2"><result status="valid" time="0.14" steps="50512"/></proof>
    </goal>
    <goal name="case2_general&#39;vc.0.0.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="966681"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143349"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="case2_general&#39;vc.0.0.1.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.12" steps="50510"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2330045"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="case2_general&#39;vc.0.0.1.1" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="966689"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144100"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="case2_general&#39;vc.0.0.1.1.0" expl="postcondition" proved="true">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1189163"/></proof>
      <proof prover="2"><result status="valid" time="0.19" steps="55352"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_general.0.0.1.1.1.0">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1318740"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="152720"/></proof>
       <proof prover="3"><result status="timeout" time="1.00" steps="2571556"/></proof>
       <proof prover="4"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="case2_general.0.0.1.1.1.1">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137417"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2636313"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_general.0.0.1.1.1.1.0">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141543"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2533526"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
        <transf name="assert" arg1="(subset s c)">
         <goal name="case2_general.0.0.1.1.1.1.0.0" expl="asserted formula">
         <proof prover="2"><result status="valid" time="0.36" steps="74120"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="183"/></proof>
         </goal>
         <goal name="case2_general.0.0.1.1.1.1.0.1">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136926"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2514731"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(is_satisfiable_clause (s,p))">
          <goal name="case2_general.0.0.1.1.1.1.0.1.0" expl="asserted formula">
          <proof prover="2"><result status="valid" time="0.69" steps="106489"/></proof>
          </goal>
          <goal name="case2_general.0.0.1.1.1.1.0.1.1">
          <proof prover="2"><result status="timeout" time="1.00" steps="168489"/></proof>
          <proof prover="3"><result status="timeout" time="1.00" steps="2439999"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case2_general.0.0.1.1.1.1.1">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149496"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1293535"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
        <transf name="assert" arg1="(subset s c)">
         <goal name="case2_general.0.0.1.1.1.1.1.0" expl="asserted formula">
         <proof prover="2"><result status="valid" time="0.47" steps="66910"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.06" steps="189"/></proof>
         </goal>
         <goal name="case2_general.0.0.1.1.1.1.1.1">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139382"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2465623"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(is_satisfiable_clause (s,p))">
          <goal name="case2_general.0.0.1.1.1.1.1.1.0" expl="asserted formula">
          <proof prover="2"><result status="valid" time="0.29" steps="59606"/></proof>
          </goal>
          <goal name="case2_general.0.0.1.1.1.1.1.1.1">
          <proof prover="2"><result status="timeout" time="1.00" steps="176563"/></proof>
          <proof prover="3"><result status="timeout" time="1.00" steps="2502696"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="case2_general&#39;vc.0.0.1.1.1" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157923"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1480123"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="case2_general&#39;vc.0.0.1.1.1.0" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144441"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1642500"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="case2_general&#39;vc.0.0.1.1.1.1.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154456"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1597847"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="unfold" arg1="is_satisfiable_clause" arg2="in" arg3="Requires">
         <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0" expl="postcondition">
         <transf name="introduce_exists" >
          <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139834"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1987186"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(eval_setconjunction setc f = top1)">
           <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0.0" expl="asserted formula">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131685"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1676526"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" arg1="(subset s c)">
            <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0.0.0" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="valid" time="0.45" steps="73677"/></proof>
            </goal>
            <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0.0.1" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132084"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1692444"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" arg1="Requires3" arg2="f">
             <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0.0.1.0" expl="asserted formula">
             <proof prover="2" obsolete="true"><result status="valid" time="0.51" steps="76598"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140745"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2233810"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" arg1="(eval_rightside (assign_rightside p f) = top1)">
            <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0.1.0" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="57553"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.12" steps="682"/></proof>
            </goal>
            <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132209"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3039302"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="unfold" arg1="eval_clause" arg2="in" arg3="Requires">
             <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0.1.1.0" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160342"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2993609"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="compile_match" >
              <goal name="case2_general&#39;vc.0.0.1.1.1.1.0.0.0.1.1.0.0" expl="postcondition">
              <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="579074"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2354542"/></proof>
              <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="2.85" steps="2500"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="case2_general&#39;vc.0.0.1.1.1.1.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149205"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1597655"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="unfold" arg1="is_satisfiable_clause" arg2="in" arg3="Requires">
         <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0" expl="postcondition">
         <transf name="introduce_exists" >
          <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148324"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1979002"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="assert" arg1="(eval_setconjunction setc f = top1)">
           <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0.0" expl="asserted formula">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143120"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1679594"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" arg1="(subset s c)">
            <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0.0.0" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="66727"/></proof>
            </goal>
            <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0.0.1" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137091"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1690388"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="instantiate" arg1="Requires3" arg2="f">
             <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0.0.1.0" expl="asserted formula">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131046"/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.20" steps="1220"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145974"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2227941"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="assert" arg1="(eval_rightside (assign_rightside p f) = top1)">
            <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0.1.0" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137645"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2951963"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="unfold" arg1="eval_clause" arg2="in" arg3="Requires">
             <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0.1.0.0" expl="asserted formula">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="169393"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2900632"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="compile_match" >
              <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0.1.0.0.0" expl="asserted formula">
              <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="620435"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2316598"/></proof>
              <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.11" steps="883"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="case2_general&#39;vc.0.0.1.1.1.1.1.0.0.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142537"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.42" steps="2509"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="case2_general&#39;vc.0.0.1.1.1.1" expl="postcondition">
       <proof prover="2"><result status="timeout" time="1.00" steps="127559"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="case2_general_top_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.21" steps="59156"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2521134"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="case2_general_conjunction_imples_p" proved="true">
 <proof prover="2"><result status="valid" time="0.51" steps="80903"/></proof>
 </goal>
 <goal name="case3_induction_general&#39;vc" expl="VC for case3_induction_general">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1944141"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142982"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="case3_induction_general&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1587308"/></proof>
  <proof prover="2"><result status="valid" time="0.29" steps="59950"/></proof>
  <proof prover="4"><result status="valid" time="0.18" steps="570"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.41" steps="69089"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="818731"/></proof>
  <proof prover="4"><result status="valid" time="0.15" steps="202"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="690778"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="214682"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2079401"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.2.0" expl="precondition">
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="594046"/></proof>
   <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="7199306"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="assert" arg1="(eval_clauselist clauselist f = top1)">
    <goal name="case3_induction_general&#39;vc.4.0.0" expl="asserted formula">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="126212"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2193134"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="case3_induction_general&#39;vc.4.0.1" expl="precondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122652"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2180920"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="55856"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.4" expl="precondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="96133"/></proof>
  </goal>
  <goal name="case3_induction_general&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1230007"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="82824"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1807845"/></proof>
   <proof prover="2"><result status="valid" time="0.24" steps="58006"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.26" steps="58038"/></proof>
  <proof prover="3" timelimit="5"><result status="valid" time="0.18" steps="330258"/></proof>
  <proof prover="4" timelimit="5"><result status="valid" time="0.04" steps="56"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="case3_induction_general&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="58038"/></proof>
   <proof prover="3" timelimit="5"><result status="valid" time="0.18" steps="330258"/></proof>
   <proof prover="4" timelimit="5"><result status="valid" time="0.04" steps="56"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.7" expl="unreachable point">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159760"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2789861"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="case3_induction_general&#39;vc.7.0" expl="unreachable point">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="183656"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2359746"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="case3_induction_general&#39;vc.7.0.0" expl="unreachable point">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="172333"/></proof>
    <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8338925"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction_general&#39;vc.8.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="157049"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2073059"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="eliminate_let" >
    <goal name="case3_induction_general&#39;vc.8.2.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151695"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2070808"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="case3_induction_general&#39;vc.8.2.0.0" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151841"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1998958"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="Requires4">
      <goal name="case3_induction_general&#39;vc.8.2.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151073"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1999404"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="introduce_exists" >
       <goal name="case3_induction_general&#39;vc.8.2.0.0.0.0" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154740"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1993718"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" arg1="(eval_clause (x1,x) f = top1)">
        <goal name="case3_induction_general&#39;vc.8.2.0.0.0.0.0" expl="asserted formula">
        <proof prover="2"><result status="valid" time="0.68" steps="60182"/></proof>
        </goal>
        <goal name="case3_induction_general&#39;vc.8.2.0.0.0.0.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150306"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2014904"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="assert" arg1="(eval_setconjunction x1 f = top1)">
         <goal name="case3_induction_general&#39;vc.8.2.0.0.0.0.1.0" expl="asserted formula">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146527"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2360887"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(subset x1 c)">
          <goal name="case3_induction_general&#39;vc.8.2.0.0.0.0.1.0.0" expl="asserted formula">
          <proof prover="2"><result status="valid" time="0.80" steps="65373"/></proof>
          </goal>
          <goal name="case3_induction_general&#39;vc.8.2.0.0.0.0.1.0.1" expl="asserted formula">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144418"/></proof>
          <proof prover="4"><result status="timeout" time="1.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="case3_induction_general&#39;vc.8.2.0.0.0.0.1.1" expl="postcondition">
         <proof prover="2"><result status="valid" time="0.80" steps="66524"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="case3_induction_general&#39;vc.8.2.0.1" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154027"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2495518"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H">
      <goal name="case3_induction_general&#39;vc.8.2.0.1.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159445"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2400502"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="H1">
       <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160082"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2337531"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,c">
        <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161052"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2414441"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.0" expl="destruct premise">
         <proof prover="2"><result status="valid" time="0.34" steps="54533"/></proof>
         </goal>
         <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150986"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2391114"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.0" expl="destruct premise">
          <proof prover="2"><result status="valid" time="0.35" steps="54531"/></proof>
          </goal>
          <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151245"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2436080"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.0" expl="postcondition">
           <proof prover="2"><result status="valid" time="0.35" steps="54561"/></proof>
           </goal>
           <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152663"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2395214"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.0" expl="postcondition">
            <proof prover="2"><result status="valid" time="0.55" steps="59930"/></proof>
            </goal>
            <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="202515"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2372424"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.0" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="199858"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2307864"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="Requires4">
              <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.0.0" expl="postcondition">
              <transf name="introduce_exists" >
               <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.0.0.0" expl="postcondition">
               <transf name="assert" arg1="(eval_clause (s,p) f = top1)">
                <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.0.0.0.0" expl="asserted formula">
                <proof prover="2"><result status="valid" time="0.78" steps="63951"/></proof>
                </goal>
                <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.0.0.0.1" expl="postcondition">
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201607"/></proof>
                <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2305433"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="assert" arg1="(eval_setconjunction s f = top1)">
                 <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.0.0.0.1.0" expl="asserted formula">
                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="228597"/></proof>
                 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2303554"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 <transf name="assert" arg1="(subset s c)">
                  <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.0.0.0.1.0.0" expl="asserted formula">
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="219381"/></proof>
                  <proof prover="4"><result status="valid" time="0.19" steps="344"/></proof>
                  </goal>
                  <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.0.0.0.1.0.1" expl="asserted formula">
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="231665"/></proof>
                  <proof prover="4"><result status="timeout" time="2.00"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.0.0.0.1.1" expl="postcondition">
                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="202819"/></proof>
                 <proof prover="3"><result status="valid" time="0.27" steps="427277"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="case3_induction_general&#39;vc.8.2.0.1.0.0.0.1.1.1.1.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="220694"/></proof>
             <proof prover="4"><result status="valid" time="0.04" steps="56"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="case3_induction_general&#39;vc.8.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111517"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2081247"/></proof>
   <proof prover="4"><result status="valid" time="0.06" steps="180"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="case3_induction_general&#39;vc.8" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5531626"/></proof>
  <proof prover="2"><result status="timeout" time="2.00" steps="264249"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="case3_induction" proved="true">
 <proof prover="2"><result status="valid" time="0.34" steps="63650"/></proof>
 </goal>
 <goal name="isReachable&#39;vc" expl="VC for isReachable" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="68536"/></proof>
 </goal>
 <goal name="isReachable_mem_algorithmA&#39;vc" expl="VC for isReachable_mem_algorithmA">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138827"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="869578"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="isReachable_mem_algorithmA&#39;vc.0" expl="unreachable point">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131607"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2038572"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="isReachable_mem_algorithmA&#39;vc.0.0" expl="unreachable point">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155126"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2009915"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="cl,c">
    <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0" expl="unreachable point">
    <transf name="destruct" arg1="Hinst">
     <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.15" steps="53992"/></proof>
     </goal>
     <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1" expl="unreachable point">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147317"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2101106"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.0" expl="destruct premise" proved="true">
      <proof prover="2"><result status="valid" time="0.15" steps="53990"/></proof>
      </goal>
      <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1" expl="unreachable point">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147234"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2156186"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.0" expl="unreachable point">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146762"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2125872"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="eliminate_let" >
        <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.0.0" expl="unreachable point">
        <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="208874"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1725959"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.1.0.0" expl="unreachable point">
         <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="68437"/></proof>
         </goal>
         <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.1.0.1" expl="unreachable point">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="151311"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1829790"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.1.0.1.0" expl="unreachable point">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149415"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="2.00" steps="4294077"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
          <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.1.0.1.1" expl="unreachable point">
          <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="610307"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2024647"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="2.77" steps="4683"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.1" expl="unreachable point">
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="236351"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1787730"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.1.0" expl="unreachable point" proved="true">
        <proof prover="2" timelimit="5"><result status="valid" time="0.36" steps="60907"/></proof>
        </goal>
        <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.1.1" expl="unreachable point">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146363"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1835451"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.1.1.0" expl="unreachable point">
         <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2026360"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
         </goal>
         <goal name="isReachable_mem_algorithmA&#39;vc.0.0.0.1.1.1.1.1" expl="unreachable point">
         <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="2.00" steps="4087060"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="isReachable_mem_algorithmA&#39;vc.6.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149460"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2171216"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="eliminate_let" >
    <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0" expl="postcondition">
    <transf name="destruct" arg1="H">
     <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.0" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146287"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2210161"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="H">
      <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154124"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2155446"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="H">
       <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154170"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1952245"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="assert" arg1="(rs_eq_pos x (RProp bot1) = False)">
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0" expl="asserted formula">
        <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
        <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6698015"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
        </goal>
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155261"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1952754"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="cl,c">
         <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.0" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142794"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2142502"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.0.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144957"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2175768"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.0.1.0" expl="destruct premise">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147055"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2170412"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.0.1.1.0" expl="postcondition">
            <proof prover="2"><result status="valid" time="0.22" steps="56721"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2083730"/></proof>
            <proof prover="4"><result status="valid" time="0.05" steps="40"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0.0.1.1.1.0" expl="asserted formula">
             <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
             </goal>
             <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0.0.1.1.1.1" expl="asserted formula">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136992"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1741490"/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="137"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0.0.1.1.1.1.0" expl="asserted formula">
              <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="57"/></proof>
              </goal>
              <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0.0.1.1.1.1.1" expl="asserted formula">
              <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
              <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8060605"/></proof>
              <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.05" steps="57"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.0.1.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.0.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.0.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155569"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1998894"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="cl,c">
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146473"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2127360"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.0.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
         </goal>
         <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.0.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145004"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2072220"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.0.1.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
          </goal>
          <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.0.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145388"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2123655"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.0.1.1.0" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146224"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2132956"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0.1.1.1.0" expl="postcondition">
            <proof prover="2"><result status="failure" time="0.00"/></proof>
            </goal>
            <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0.1.1.1.1" expl="postcondition">
            <proof prover="2"><result status="timeout" time="1.00" steps="115960"/></proof>
            <proof prover="3"><result status="timeout" time="1.00" steps="1915230"/></proof>
            <proof prover="4"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0.1.1.1.1.0" expl="postcondition">
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             <proof prover="3" timelimit="5"><result status="timeout" time="5.00" steps="7033117"/></proof>
             <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
             </goal>
             <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0.1.1.1.1.1" expl="postcondition">
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             <proof prover="4"><result status="valid" time="0.10" steps="338"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.0.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="cl,c">
       <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147100"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2162544"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153599"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2132237"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150377"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2258264"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.1.0" expl="postcondition">
          <proof prover="2"><result status="failure" time="0.00"/></proof>
          </goal>
          <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="150797"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2080861"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.1.1.0" expl="postcondition">
           <proof prover="2"><result status="failure" time="0.00"/></proof>
           </goal>
           <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154056"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2013914"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.1.1.1.0" expl="postcondition">
            <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="627386"/></proof>
            <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8044925"/></proof>
            <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
            <transf name="assert" arg1="(x &lt;&gt; RProp bot1)">
             <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.1.1.1.0.0" expl="asserted formula">
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             <proof prover="3"><result status="timeout" time="1.00" steps="2047007"/></proof>
             <proof prover="4"><result status="timeout" time="1.00"/></proof>
             </goal>
             <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.1.1.1.0.1" expl="postcondition">
             <proof prover="2"><result status="failure" time="0.00"/></proof>
             <proof prover="4"><result status="valid" time="0.05" steps="62"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.1.1.1.1" expl="postcondition">
            <proof prover="2"><result status="failure" time="0.00"/></proof>
            <proof prover="4"><result status="valid" time="0.05" steps="860"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152617"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2110420"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="cl,c">
      <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0" expl="postcondition">
      <transf name="destruct" arg1="Hinst">
       <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.14" steps="56636"/></proof>
       </goal>
       <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145735"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2288682"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="56634"/></proof>
        </goal>
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144804"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2269718"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.1.0" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="valid" time="0.31" steps="66636"/></proof>
         </goal>
         <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145903"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2326170"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.1.1.0" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="valid" time="0.52" steps="67702"/></proof>
          </goal>
          <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="155383"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2144438"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.1.1.1.0" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148400"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2054322"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           </goal>
           <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.1.1.1.1" expl="postcondition">
           <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="598770"/></proof>
           <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6821767"/></proof>
           <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
           <transf name="assert" arg1="(mem (convertRStoAF p1) (add (convertRStoAF p) c))">
            <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.1.1.1.1.0" expl="asserted formula">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="148884"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.94" steps="3332"/></proof>
            </goal>
            <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0.1.1.1.1.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142492"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1829078"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="cl,c">
    <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147722"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2105944"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="56745"/></proof>
     </goal>
     <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142162"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1808331"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="56743"/></proof>
      </goal>
      <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.1" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143609"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1900378"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.1.0" expl="postcondition">
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="622996"/></proof>
       <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6405045"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.1.1.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
        </goal>
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.1.1.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141520"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1966285"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.1.1.1.0" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1956276"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.1.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1988681"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.1.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="194486"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1725544"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.1.1.0" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146418"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1830717"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="isReachable_mem_algorithmA&#39;vc.6.0.0.1.1.1.1.0" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149016"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2020778"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="assert" arg1="(mem (convertRStoAF p1) (add (convertRStoAF p) c))">
          <goal name="isReachable_mem_algorithmA&#39;vc.6.0.0.1.1.1.1.0.0" expl="asserted formula">
          <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2074957"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="54"/></proof>
          </goal>
          <goal name="isReachable_mem_algorithmA&#39;vc.6.0.0.1.1.1.1.0.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="isReachable_mem_algorithmA&#39;vc.6.0.0.1.1.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="2.00" steps="3019054"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="isReachable_mem_algorithmA&#39;vc.6.2.0.1.1.1.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152926"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1940865"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="isReachable_mem_algorithmA&#39;vc.6.0" expl="postcondition">
   <proof prover="2"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="isReachable_mem_algorithmA&#39;vc.6.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146905"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.17" steps="761"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="isReachable_mem_algorithmA&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.35" steps="64429"/></proof>
  </goal>
  <goal name="isReachable_mem_algorithmA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133195"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1704386"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" proved="true" arg1="cl">
   <goal name="isReachable_mem_algorithmA&#39;vc.2.0" expl="VC for isReachable_mem_algorithmA" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="61191"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="isReachable_mem_algorithmA&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.40" steps="69748"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1962397"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="isReachable_mem_algorithmA&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="59641"/></proof>
  </goal>
  <goal name="isReachable_mem_algorithmA&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="59898"/></proof>
  </goal>
  <goal name="isReachable_mem_algorithmA&#39;vc.6" expl="postcondition">
  <proof prover="2"><result status="timeout" time="2.00" steps="167351"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_exists_clause_with_bot">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121766"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2015269"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_exists_clause_with_bot.0">
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="685844"/></proof>
  <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13276574"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="unfold" arg1="is_unsatisfiable_clauselist" arg2="in" arg3="H">
   <goal name="unsat_exists_clause_with_bot.0.0">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127754"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2006081"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="H">
    <goal name="unsat_exists_clause_with_bot.0.0.0">
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="685825"/></proof>
    <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13727743"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_exists_clause_with_bot_isReachable">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125599"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2159207"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_exists_clause_with_bot_isReachable.0">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122767"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1981088"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_induction_general_test&#39;vc" expl="VC for unsat_induction_general_test" proved="true">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129246"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1301000"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="unsat_induction_general_test&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="unsat_exists_clause_with_bot_isReachable" arg2="clauselist">
   <goal name="unsat_induction_general_test&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124961"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1148976"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="c">
    <goal name="unsat_induction_general_test&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124560"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1149594"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="unsat_induction_general_test&#39;vc.0.0.0.0" expl="destruct premise" proved="true">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120715"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1953241"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="unsat_induction_general_test&#39;vc.0.0.0.0.0" proved="true">
      <proof prover="2"><result status="valid" time="0.14" steps="52918"/></proof>
      </goal>
      <goal name="unsat_induction_general_test&#39;vc.0.0.0.0.1" proved="true">
      <proof prover="2"><result status="valid" time="0.14" steps="54987"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2030310"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="unsat_induction_general_test&#39;vc.0.0.0.0.2" proved="true">
      <proof prover="2"><result status="valid" time="0.14" steps="54985"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="unsat_induction_general_test&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.32" steps="65201"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_induction" proved="true">
 <proof prover="2"><result status="valid" time="0.33" steps="66819"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic" proved="true">
 <proof prover="2"><result status="valid" time="0.24" steps="60419"/></proof>
 </goal>
 <goal name="horn_sat_soundness" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2148638"/></proof>
 <proof prover="2"><result status="timeout" time="2.00" steps="170921"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="horn_sat_soundness.0" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2133092"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128311"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct_term" proved="true" arg1="clauselist">
   <goal name="horn_sat_soundness.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.36" steps="66677"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2671639"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="horn_sat_soundness.0.1" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2152172"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113422"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" proved="true" arg1="((horn_logic clauselist = True) -&gt; (not mem ABot (algorithmA_spec clauselist (singleton ATop))))">
    <goal name="horn_sat_soundness.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.24" steps="60388"/></proof>
    <proof prover="3"><result status="valid" time="0.19" steps="335865"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="36"/></proof>
    </goal>
    <goal name="horn_sat_soundness.0.1.1" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2142144"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121674"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" proved="true" arg1="h">
     <goal name="horn_sat_soundness.0.1.1.0" expl="destruct premise" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2159457"/></proof>
     <proof prover="2"><result status="timeout" time="2.00" steps="166700"/></proof>
     <proof prover="4" timelimit="5"><result status="valid" time="0.20" steps="998"/></proof>
     </goal>
     <goal name="horn_sat_soundness.0.1.1.1" proved="true">
     <proof prover="2"><result status="valid" time="0.23" steps="58340"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn_unsat_soundness" proved="true">
 <proof prover="2"><result status="valid" time="0.31" steps="63506"/></proof>
 </goal>
 <goal name="horn_sat_completeness" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="59770"/></proof>
 </goal>
 <goal name="horn_unsat_completeness" proved="true">
 <proof prover="2"><result status="valid" time="0.29" steps="59821"/></proof>
 </goal>
</theory>
<theory name="Horn">
 <goal name="length_equal_listset_to_list_fset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3665476"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="227829"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="length_equal_listset_to_list_fset.0">
  <transf name="induction_arg_ty_lex" arg1="cl">
   <goal name="length_equal_listset_to_list_fset.0.0">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117606"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.23" steps="590"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_prog&#39;vc" expl="VC for removeFromList_prog">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2344047"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.67" steps="109708"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1909438"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146393"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="74212"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.0.0" expl="variant decrease">
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.0.0.0" expl="variant decrease">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2266318"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.0.0.0.0" expl="variant decrease">
     <proof prover="2" obsolete="true"><result status="valid" time="0.38" steps="74169"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="6" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.0.1" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1910792"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="70726"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761229"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139206"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.1.0" expl="precondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="63982"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1289711"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2250084"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134419"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2061764"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="111579"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.3.1.0.0" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="124779"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1324439"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Ensures">
      <goal name="algorithmA&#39;vc.3.1.0.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="81391"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Ensures">
       <goal name="algorithmA&#39;vc.3.1.0.0.0.0" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="83061"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="157"/></proof>
       </goal>
       <goal name="algorithmA&#39;vc.3.1.0.0.0.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="58313"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="algorithmA&#39;vc.3.1.0.0.1" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="81378"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1336457"/></proof>
      <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="43"/></proof>
      <transf name="destruct" arg1="Ensures">
       <goal name="algorithmA&#39;vc.3.1.0.0.1.0" expl="postcondition">
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="279587"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1280965"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.09" steps="47"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.3.1.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104404"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2830019"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.3.1.1.0" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119259"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2455044"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" >
      <goal name="algorithmA&#39;vc.3.1.1.0.0" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="87179"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1369144"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Ensures">
       <goal name="algorithmA&#39;vc.3.1.1.0.0.0" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="79893"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.09" steps="56"/></proof>
       </goal>
       <goal name="algorithmA&#39;vc.3.1.1.0.0.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="80732"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1222876"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Ensures">
        <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0" expl="postcondition">
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="273955"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1330044"/></proof>
        <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.81" steps="1653"/></proof>
        <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
         <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0" expl="postcondition">
         <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
          <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0.0" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="85690"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1331952"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0.0.0" expl="destruct premise">
           <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="61524"/></proof>
           <proof prover="3" obsolete="true"><result status="valid" time="0.06" steps="25027"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.07" steps="50"/></proof>
           </goal>
           <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0.0.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="84213"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1337715"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0.0.1.0" expl="destruct premise">
            <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="61522"/></proof>
            <proof prover="3" obsolete="true"><result status="valid" time="0.06" steps="25027"/></proof>
            <proof prover="4" obsolete="true"><result status="valid" time="0.08" steps="50"/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0.0.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="84030"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1335958"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0.0.1.1.0" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="valid" time="0.35" steps="71836"/></proof>
             </goal>
             <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0.0.1.1.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="96456"/></proof>
             <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="6303290"/></proof>
             <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.15" steps="242"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0.0.1.1.1.0" expl="postcondition">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="96066"/></proof>
              <proof prover="3" obsolete="true"><result status="valid" time="0.14" steps="527262"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.10" steps="66"/></proof>
              </goal>
              <goal name="algorithmA&#39;vc.3.1.1.0.0.1.0.0.0.1.1.1.1" expl="postcondition">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105185"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1491809"/></proof>
              <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="68"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="algorithmA&#39;vc.3.1.1.1" expl="postcondition">
     <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="555702"/></proof>
     <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10969429"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
      <goal name="algorithmA&#39;vc.3.1.1.1.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
       <goal name="algorithmA&#39;vc.3.1.1.1.0.0" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="201875"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2702667"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.3.1.1.1.0.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="61627"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1299845"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.3.1.1.1.0.0.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="180630"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2658349"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="algorithmA&#39;vc.3.1.1.1.0.0.1.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="61625"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1260305"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.3.1.1.1.0.0.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181969"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2709664"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="algorithmA&#39;vc.3.1.1.1.0.0.1.1.0" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="valid" time="0.37" steps="74553"/></proof>
          </goal>
          <goal name="algorithmA&#39;vc.3.1.1.1.0.0.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="valid" time="0.31" steps="78688"/></proof>
          <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9664670"/></proof>
          <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="algorithmA&#39;vc.3.1.1.1.0.0.1.1.1.0" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="valid" time="0.38" steps="75545"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2793206"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.1.0" expl="postcondition">
            <proof prover="2"><result status="failure" time="0.00"/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.5.1.1.0.0.0.1.1.1.1.1" expl="postcondition">
            <proof prover="2"><result status="failure" time="0.00"/></proof>
            <proof prover="3" timelimit="5"><result status="timeout" time="5.00" steps="11243905"/></proof>
            <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="algorithmA&#39;vc.3.1.1.1.0.0.1.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="101324"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1578507"/></proof>
           <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="674"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2094926"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141213"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.2.0" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4724996"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="447139"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.2.0.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2005174"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114777"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.2.0.0.0" expl="precondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1596697"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119869"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
      <goal name="algorithmA&#39;vc.2.0.0.0.0" expl="precondition">
      <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
       <goal name="algorithmA&#39;vc.2.0.0.0.0.0" expl="precondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1606376"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131960"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.2.0.0.0.0.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="61498"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.2.0.0.0.0.0.1" expl="precondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1607868"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="68141"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138125"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134305"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2230152"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="69895"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2238343"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137289"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.3.0.0.0" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="algorithmA&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2088011"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138834"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2088215"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137967"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="(listset_to_listfset clauselist)">
     <goal name="algorithmA&#39;vc.3.1.0.0" expl="postcondition">
     <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
      <goal name="algorithmA&#39;vc.3.1.0.0.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2203640"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142243"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="algorithmA&#39;vc.3.1.0.0.0.0" expl="destruct premise">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2060711"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="61509"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="algorithmA&#39;vc.3.1.0.0.0.1" expl="postcondition">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2011284"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119138"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.3.1.0.0.0.1.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="61507"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.3.1.0.0.0.1.1" expl="postcondition">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2045214"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="116760"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="algorithmA&#39;vc.3.1.0.0.0.1.1.0" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="68058"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.3.1.0.0.0.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="valid" time="0.26" steps="67566"/></proof>
         <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="0.06" steps="58"/></proof>
         <proof prover="6" obsolete="true"><result status="valid" time="0.07"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5169960"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="569973"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="induction_arg_ty_lex" arg1="clauselist">
     <goal name="algorithmA&#39;vc.3.1.1.0" expl="VC for algorithmA">
     <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.16" steps="946"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="122860"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1518312"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="horn&#39;vc.0" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="65906"/></proof>
  </goal>
  <goal name="horn&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="65997"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1484616"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="horn&#39;vc.2" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="68768"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
