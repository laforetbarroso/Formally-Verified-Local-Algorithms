<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.8.6" alternative="noBV" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="horn_clean.mlw"/>
<theory name="ListPlus">
 <goal name="sublist&#39;vc" expl="VC for sublist">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149661"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2085835"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sublist&#39;vc.0" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.09" steps="22339"/></proof>
  <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5070719"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="sublist&#39;vc.1" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.09" steps="28261"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list">
 <proof prover="2"><result status="valid" time="0.13" steps="25924"/></proof>
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive">
 <proof prover="2"><result status="valid" time="0.12" steps="25140"/></proof>
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative">
 <proof prover="2"><result status="valid" time="0.10" steps="23022"/></proof>
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128839"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1571185"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="tuple_equality&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.12" steps="24503"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="154230"/></proof>
  <proof prover="4"><result status="valid" time="0.01" steps="19"/></proof>
  <transf name="split_vc" >
   <goal name="tuple_equality&#39;vc.0.0" expl="variant decrease">
   <proof prover="2"><result status="valid" time="0.11" steps="24353"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.0.1" expl="variant decrease">
   <proof prover="2"><result status="valid" time="0.11" steps="24419"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.1" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1525992"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" >
   <goal name="tuple_equality&#39;vc.1.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.11" steps="23322"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154487"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="154760"/></proof>
   <proof prover="4"><result status="valid" time="0.01" steps="97"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.1.3" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.09" steps="23125"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="tuple_equality&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="239176"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="tuple_equality&#39;vc.2.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.13" steps="23065"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158630"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="165351"/></proof>
   <proof prover="4"><result status="valid" time="0.02" steps="94"/></proof>
   </goal>
   <goal name="tuple_equality&#39;vc.2.3" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.09" steps="25957"/></proof>
   <proof prover="4"><result status="valid" time="0.01" steps="75"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_ref">
 <proof prover="2"><result status="valid" time="0.10" steps="23654"/></proof>
 </goal>
 <goal name="permut_trans">
 <proof prover="2"><result status="valid" time="0.10" steps="23772"/></proof>
 </goal>
 <goal name="permut_cl1_cl2">
 <proof prover="2"><result status="valid" time="0.11" steps="24009"/></proof>
 </goal>
 <goal name="concat_with_element">
 <proof prover="2"><result status="valid" time="0.16" steps="28474"/></proof>
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat">
 <proof prover="2"><result status="valid" time="0.12" steps="26395"/></proof>
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat">
 <proof prover="2"><result status="valid" time="0.11" steps="25696"/></proof>
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail">
 <proof prover="2"><result status="valid" time="0.16" steps="29470"/></proof>
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list">
 <proof prover="2"><result status="valid" time="0.38" steps="64019"/></proof>
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist">
 <proof prover="2"><result status="valid" time="0.16" steps="30728"/></proof>
 </goal>
</theory>
<theory name="SetOfSymbols">
 <goal name="if_mem_then_subset_set_smb">
 <proof prover="2"><result status="timeout" time="1.00" steps="140151"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="2084676"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="if_mem_then_subset_set_smb.0">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="141972"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="if_mem_then_subset_set_smb.0.0">
   <proof prover="0"><result status="failure" time="0.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="168549"/></proof>
   <proof prover="4"><result status="valid" time="0.60" steps="1441"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="subset_set_smb_clauselist">
 <proof prover="2"><result status="valid" time="0.25" steps="42744"/></proof>
 </goal>
 <goal name="sublist_subset_set_smb">
 <proof prover="2"><result status="timeout" time="1.00" steps="184585"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="3567337"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sublist_subset_set_smb.0">
  <transf name="induction_arg_ty_lex" arg1="sublist">
   <goal name="sublist_subset_set_smb.0.0">
   <proof prover="0"><result status="failure" time="0.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="136572"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="sublist_subset_set_smb.0.0.0">
    <proof prover="2"><result status="valid" time="0.19" steps="34050"/></proof>
    <proof prover="3"><result status="valid" time="0.06" steps="182280"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="174"/></proof>
    </goal>
    <goal name="sublist_subset_set_smb.0.0.1">
    <proof prover="0" timelimit="5"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5"><result status="timeout" time="5.00" steps="852538"/></proof>
    <proof prover="4" timelimit="5"><result status="timeout" time="5.00"/></proof>
    <transf name="assert" arg1="(mem1 x1 (Cons x1 x) -&gt; mem1 x1 (clauselist))">
     <goal name="sublist_subset_set_smb.0.0.1.0" expl="asserted formula">
     <proof prover="2"><result status="valid" time="0.13" steps="32135"/></proof>
     </goal>
     <goal name="sublist_subset_set_smb.0.0.1.1">
     <proof prover="0"><result status="failure" time="0.00"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="142386"/></proof>
     <proof prover="4"><result status="valid" time="0.18" steps="1103"/></proof>
     <transf name="destruct" arg1="H1">
      <goal name="sublist_subset_set_smb.0.0.1.1.0" expl="destruct premise">
      <proof prover="2"><result status="valid" time="0.15" steps="32565"/></proof>
      </goal>
      <goal name="sublist_subset_set_smb.0.0.1.1.1">
      <proof prover="0"><result status="failure" time="0.00"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="140074"/></proof>
      <proof prover="4"><result status="valid" time="0.06" steps="343"/></proof>
      <transf name="destruct_term" arg1="x1">
       <goal name="sublist_subset_set_smb.0.0.1.1.1.0">
       <transf name="subst" arg1="x3">
        <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0">
        <transf name="replace" arg1="((set_smb_clauselist (Cons (x2, x1) x)))" arg2="(union (add (convertRStoAF x1) x2) (set_smb_clauselist x))">
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.0">
         <proof prover="2"><result status="valid" time="0.21" steps="38442"/></proof>
         </goal>
         <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1" expl="equality hypothesis">
         <proof prover="0"><result status="failure" time="0.00"/></proof>
         <proof prover="2"><result status="valid" time="0.13" steps="32775"/></proof>
         <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
         <transf name="assert" arg1="(subset (add (convertRStoAF x1) x2) (set_smb_clauselist clauselist))">
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1.0" expl="asserted formula">
          <proof prover="2"><result status="valid" time="0.16" steps="33356"/></proof>
          <proof prover="3"><result status="valid" time="0.06" steps="192824"/></proof>
          <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
          <transf name="destruct" arg1="h1">
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1.0.0" expl="destruct premise">
           <proof prover="2"><result status="valid" time="0.13" steps="32185"/></proof>
           </goal>
           <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1.0.1" expl="asserted formula">
           <proof prover="2"><result status="valid" time="0.13" steps="31479"/></proof>
           <proof prover="3"><result status="valid" time="0.06" steps="166674"/></proof>
           <proof prover="4"><result status="valid" time="0.02" steps="29"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sublist_subset_set_smb.0.0.1.1.1.0.0.1.1" expl="equality hypothesis">
          <proof prover="2"><result status="valid" time="0.13" steps="32794"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Eval">
 <goal name="eval_setconjunction_singleton">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153022"/></proof>
 <proof prover="3"><result status="valid" time="0.10" steps="280330"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3805706"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="152707"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_commutes_add&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.17" steps="34980"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.25" steps="40986"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval">
 <proof prover="2"><result status="valid" time="0.11" steps="31097"/></proof>
 </goal>
 <goal name="eval_clauselist_top_is_conj_eval_clause_top">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="359415"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="5526237"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_clauselist_top_is_conj_eval_clause_top.0">
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="659723"/></proof>
  <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="9448202"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="cl">
   <goal name="eval_clauselist_top_is_conj_eval_clause_top.0.0">
   <proof prover="2"><result status="valid" time="0.17" steps="37707"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eval_clauselist_top_is_conj_eval_clause_top.1">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="357199"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="5100050"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="cl">
   <goal name="eval_clauselist_top_is_conj_eval_clause_top.1.0">
   <proof prover="2"><result status="valid" time="0.20" steps="43039"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_clauselist_bot_is_conj_eval_clause_bot">
 <proof prover="2"><result status="valid" time="0.12" steps="33471"/></proof>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top">
 <proof prover="2"><result status="valid" time="0.23" steps="41444"/></proof>
 </goal>
 <goal name="forall_eval_af_bot_exists_eval_af_bot&#39;vc" expl="VC for forall_eval_af_bot_exists_eval_af_bot">
 <proof prover="2"><result status="valid" time="0.12" steps="32290"/></proof>
 </goal>
 <goal name="eval_cl_bot_then_exists_eval_clause_bot&#39;vc" expl="VC for eval_cl_bot_then_exists_eval_clause_bot">
 <proof prover="2"><result status="valid" time="0.21" steps="40150"/></proof>
 </goal>
</theory>
<theory name="Horn_Logic">
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1539885"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113625"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2250915"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA_spec&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.23" steps="46947"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.17" steps="44114"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="valid" time="0.17" steps="44146"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.3" expl="precondition">
  <proof prover="2"><result status="valid" time="0.16" steps="42896"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.4" expl="precondition">
  <proof prover="2"><result status="valid" time="0.44" steps="63328"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.5" expl="precondition">
  <proof prover="2"><result status="valid" time="0.86" steps="99358"/></proof>
  </goal>
  <goal name="algorithmA_spec&#39;vc.6" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136133"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2144775"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.6.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.16" steps="41603"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.6.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.16" steps="41664"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.6.2" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.48" steps="65171"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.7" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="99639"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2501173"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.7.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.30" steps="51429"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.7.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.33" steps="55255"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.7.2" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.42" steps="63802"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA_spec&#39;vc.8" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141318"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1120858"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA_spec&#39;vc.8.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.16" steps="41210"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.8.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.16" steps="41271"/></proof>
   </goal>
   <goal name="algorithmA_spec&#39;vc.8.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124470"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1460098"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA_spec&#39;vc.8.2.0" expl="postcondition">
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="645143"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1392990"/></proof>
    <proof prover="4" timelimit="5"><result status="valid" time="2.76" steps="1750"/></proof>
    </goal>
    <goal name="algorithmA_spec&#39;vc.8.2.1" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.16" steps="41923"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1533075"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117206"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2240832"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="permutacoes&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.23" steps="48778"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.23" steps="49155"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="valid" time="0.17" steps="45597"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.3" expl="precondition">
  <proof prover="2"><result status="valid" time="0.17" steps="45629"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.4" expl="precondition">
  <proof prover="2"><result status="valid" time="0.16" steps="44365"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.5" expl="precondition">
  <proof prover="2"><result status="valid" time="0.47" steps="68615"/></proof>
  </goal>
  <goal name="permutacoes&#39;vc.6" expl="precondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117834"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="837888"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="permutacoes&#39;vc.6.0" expl="precondition">
   <proof prover="2" timelimit="5"><result status="valid" time="1.03" steps="114768"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="837718"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutacoes&#39;vc.7" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138532"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2562148"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="permutacoes&#39;vc.7.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.23" steps="45778"/></proof>
   </goal>
   <goal name="permutacoes&#39;vc.7.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149601"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2925638"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(findOneSubset clauselist c = findOneSubset clauselist2 c)">
    <goal name="permutacoes&#39;vc.7.1.0" expl="asserted formula">
    <proof prover="2"><result status="valid" time="0.32" steps="53233"/></proof>
    <proof prover="4"><result status="valid" time="0.05" steps="159"/></proof>
    </goal>
    <goal name="permutacoes&#39;vc.7.1.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="159811"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2999453"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist,c">
     <goal name="permutacoes&#39;vc.7.1.1.0" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139767"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2919629"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="permutacoes&#39;vc.7.1.1.0.0" expl="destruct premise">
      <proof prover="2"><result status="valid" time="0.10" steps="41157"/></proof>
      </goal>
      <goal name="permutacoes&#39;vc.7.1.1.0.1" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137039"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2975844"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="permutacoes&#39;vc.7.1.1.0.1.0" expl="destruct premise">
       <proof prover="2"><result status="valid" time="0.11" steps="41155"/></proof>
       </goal>
       <goal name="permutacoes&#39;vc.7.1.1.0.1.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137029"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2963298"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="permutacoes&#39;vc.7.1.1.0.1.1.0" expl="destruct premise">
        <proof prover="2"><result status="valid" time="0.10" steps="38915"/></proof>
        </goal>
        <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137090"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2944417"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.0" expl="destruct premise">
         <proof prover="2"><result status="valid" time="0.10" steps="39700"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136992"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2915498"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139905"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2952138"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist2,c">
           <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0" expl="destruct premise">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138076"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2967779"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.0" expl="destruct premise">
            <proof prover="2"><result status="valid" time="0.11" steps="41157"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.1" expl="destruct premise">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138061"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2900310"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.1.0" expl="destruct premise">
             <proof prover="2"><result status="valid" time="0.11" steps="41155"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.1.1" expl="destruct premise">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137435"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2920579"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.1.1.0" expl="destruct premise">
              <proof prover="2"><result status="valid" time="0.22" steps="51611"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.1.1.1" expl="destruct premise">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143302"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2936497"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.1.1.1.0" expl="destruct premise">
               <proof prover="2"><result status="valid" time="0.10" steps="39700"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.1.1.1.1" expl="destruct premise">
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144786"/></proof>
               <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2979084"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.1.1.1.1.0" expl="destruct premise">
                <proof prover="2"><result status="valid" time="0.23" steps="42629"/></proof>
                </goal>
                <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.0.0.1.1.1.1.1" expl="destruct premise">
                <proof prover="2"><result status="valid" time="0.28" steps="43164"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108182"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2800785"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist2,c">
           <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108712"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2774162"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.0" expl="destruct premise">
            <proof prover="2"><result status="valid" time="0.11" steps="41633"/></proof>
            </goal>
            <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108423"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2812357"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.0" expl="destruct premise">
             <proof prover="2"><result status="valid" time="0.11" steps="41631"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108864"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2774822"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.1.0" expl="destruct premise">
              <proof prover="2"><result status="valid" time="0.28" steps="52371"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.1.1" expl="postcondition">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108705"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2773319"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.1.1.0" expl="destruct premise">
               <proof prover="2"><result status="valid" time="0.11" steps="40152"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.1.1.1" expl="postcondition">
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108148"/></proof>
               <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2770824"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.1.1.1.0" expl="destruct premise">
                <proof prover="2"><result status="valid" time="0.23" steps="43245"/></proof>
                </goal>
                <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.1.1.1.1" expl="postcondition">
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137423"/></proof>
                <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2605268"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.1.1.1.1.0" expl="postcondition">
                 <proof prover="2"><result status="valid" time="0.24" steps="46303"/></proof>
                 </goal>
                 <goal name="permutacoes&#39;vc.7.1.1.0.1.1.1.1.1.0.1.1.1.1.1.1" expl="postcondition">
                 <proof prover="2"><result status="valid" time="0.24" steps="46687"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutacoes&#39;vc.7.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109064"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2757883"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(findOneSubset clauselist c = findOneSubset clauselist2 c)">
    <goal name="permutacoes&#39;vc.7.2.0" expl="asserted formula">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120358"/></proof>
    <proof prover="4"><result status="valid" time="0.06" steps="263"/></proof>
    </goal>
    <goal name="permutacoes&#39;vc.7.2.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109532"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2804113"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist,c">
     <goal name="permutacoes&#39;vc.7.2.1.0" expl="postcondition">
     <transf name="destruct" arg1="Hinst">
      <goal name="permutacoes&#39;vc.7.2.1.0.0" expl="destruct premise">
      <proof prover="2"><result status="valid" time="0.10" steps="41677"/></proof>
      </goal>
      <goal name="permutacoes&#39;vc.7.2.1.0.1" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108486"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2765828"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="permutacoes&#39;vc.7.2.1.0.1.0" expl="destruct premise">
       <proof prover="2"><result status="valid" time="0.12" steps="41675"/></proof>
       </goal>
       <goal name="permutacoes&#39;vc.7.2.1.0.1.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108471"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2766242"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="permutacoes&#39;vc.7.2.1.0.1.1.0" expl="destruct premise">
        <proof prover="2"><result status="valid" time="0.10" steps="39435"/></proof>
        </goal>
        <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109422"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2797528"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.0" expl="destruct premise">
         <proof prover="2"><result status="valid" time="0.10" steps="40209"/></proof>
         </goal>
         <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109407"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2766661"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.0" expl="destruct premise">
          <proof prover="2"><result status="valid" time="0.21" steps="43326"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2730089"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          </goal>
          <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="162026"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2943779"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.0" expl="postcondition">
           <proof prover="2"><result status="valid" time="0.23" steps="47512"/></proof>
           <proof prover="3"><result status="valid" time="0.11" steps="250365"/></proof>
           <proof prover="4"><result status="valid" time="0.04" steps="58"/></proof>
           </goal>
           <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127918"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3031293"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist2,c">
            <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="110131"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3068673"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.0" expl="destruct premise">
             <proof prover="2"><result status="valid" time="0.11" steps="42063"/></proof>
             </goal>
             <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118761"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3083982"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.0" expl="destruct premise">
              <proof prover="2"><result status="valid" time="0.11" steps="42061"/></proof>
              </goal>
              <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1" expl="postcondition">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118746"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3060738"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.0" expl="destruct premise">
               <proof prover="2"><result status="valid" time="0.36" steps="63199"/></proof>
               </goal>
               <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1" expl="postcondition">
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129818"/></proof>
               <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3098572"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.0" expl="destruct premise">
                <proof prover="2"><result status="valid" time="0.10" steps="40571"/></proof>
                </goal>
                <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.1" expl="postcondition">
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128389"/></proof>
                <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3138883"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.1.0" expl="destruct premise">
                 <proof prover="2"><result status="valid" time="0.28" steps="43831"/></proof>
                 </goal>
                 <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.1.1" expl="postcondition">
                 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="204285"/></proof>
                 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2716220"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 <transf name="destruct" arg1="Hinst">
                  <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.1.1.0" expl="postcondition">
                  <proof prover="2"><result status="valid" time="0.24" steps="48666"/></proof>
                  </goal>
                  <goal name="permutacoes&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.1.1.1" expl="postcondition">
                  <proof prover="2"><result status="valid" time="0.28" steps="52568"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="571807"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123339"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="monotone_algA&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.24" steps="49362"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.18" steps="46120"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="valid" time="0.17" steps="46159"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.3" expl="precondition">
  <proof prover="2"><result status="valid" time="0.40" steps="64401"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.4" expl="precondition">
  <proof prover="2"><result status="valid" time="0.18" steps="44922"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1844762"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.5" expl="precondition">
  <proof prover="2"><result status="valid" time="0.56" steps="69900"/></proof>
  </goal>
  <goal name="monotone_algA&#39;vc.6" expl="precondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114249"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="884652"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_algA&#39;vc.6.0" expl="precondition">
   <proof prover="2"><result status="valid" time="1.00" steps="116503"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="monotone_algA&#39;vc.7" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105448"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2479951"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="monotone_algA&#39;vc.7.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120589"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2848875"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="monotone_algA&#39;vc.7.0.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127254"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2332847"/></proof>
    <proof prover="4"><result status="valid" time="0.63" steps="1118"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_algA&#39;vc.7.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125010"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2687925"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(subset c (algorithmA_spec full_clauselist clauselist d))">
    <goal name="monotone_algA&#39;vc.7.1.0" expl="asserted formula">
    <proof prover="2"><result status="valid" time="0.63" steps="80348"/></proof>
    </goal>
    <goal name="monotone_algA&#39;vc.7.1.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132817"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2748974"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist,c">
     <goal name="monotone_algA&#39;vc.7.1.1.0" expl="postcondition">
     <proof prover="2"><result status="valid" time="0.25" steps="47821"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="monotone_algA&#39;vc.7.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130644"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2910412"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="assert" arg1="(findOneSubset clauselist c = findOneSubset clauselist d)">
    <goal name="monotone_algA&#39;vc.7.2.0" expl="asserted formula">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108077"/></proof>
    <proof prover="4"><result status="valid" time="0.18" steps="1110"/></proof>
    </goal>
    <goal name="monotone_algA&#39;vc.7.2.1" expl="postcondition">
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="320326"/></proof>
    <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8014129"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist,c">
     <goal name="monotone_algA&#39;vc.7.2.1.0" expl="postcondition">
     <transf name="destruct" arg1="Hinst">
      <goal name="monotone_algA&#39;vc.7.2.1.0.0" expl="destruct premise">
      <proof prover="2"><result status="valid" time="0.11" steps="42126"/></proof>
      </goal>
      <goal name="monotone_algA&#39;vc.7.2.1.0.1" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119526"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2902119"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="monotone_algA&#39;vc.7.2.1.0.1.0" expl="destruct premise">
       <proof prover="2"><result status="valid" time="0.19" steps="46480"/></proof>
       </goal>
       <goal name="monotone_algA&#39;vc.7.2.1.0.1.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122125"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2907843"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.0" expl="destruct premise">
        <proof prover="2"><result status="valid" time="0.11" steps="39883"/></proof>
        </goal>
        <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122110"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2752358"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.0" expl="destruct premise">
         <proof prover="2"><result status="valid" time="0.17" steps="44688"/></proof>
         </goal>
         <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121087"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2826813"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.0" expl="destruct premise">
          <proof prover="2"><result status="valid" time="0.30" steps="48980"/></proof>
          </goal>
          <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121290"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2898688"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.0" expl="postcondition">
           <proof prover="2"><result status="valid" time="0.24" steps="49090"/></proof>
           </goal>
           <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120316"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2851938"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist,d">
            <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0" expl="postcondition">
            <transf name="destruct" arg1="Hinst">
             <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.0" expl="destruct premise">
             <proof prover="2"><result status="valid" time="0.22" steps="46995"/></proof>
             </goal>
             <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112221"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2823311"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="destruct" arg1="Hinst">
              <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.0" expl="destruct premise">
              <proof prover="2"><result status="valid" time="0.12" steps="42510"/></proof>
              </goal>
              <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1" expl="postcondition">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112206"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2849882"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="destruct" arg1="Hinst">
               <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.0" expl="destruct premise">
               <proof prover="2"><result status="valid" time="0.11" steps="40269"/></proof>
               </goal>
               <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1" expl="postcondition">
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118863"/></proof>
               <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2788057"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
               <transf name="destruct" arg1="Hinst">
                <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.0" expl="destruct premise">
                <proof prover="2"><result status="valid" time="0.11" steps="40995"/></proof>
                </goal>
                <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.1" expl="postcondition">
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118855"/></proof>
                <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2881013"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.1.0" expl="destruct premise">
                 <proof prover="2"><result status="valid" time="0.18" steps="44414"/></proof>
                 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1334840"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 </goal>
                 <goal name="monotone_algA&#39;vc.7.2.1.0.1.1.1.1.1.1.0.1.1.1.1.1" expl="postcondition">
                 <proof prover="2"><result status="valid" time="0.45" steps="72253"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="smb&#39;vc" expl="VC for smb">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121668"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1924589"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="smb&#39;vc.0" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130726"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2339037"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="clauselist,clauselist,c">
   <goal name="smb&#39;vc.0.0" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.62" steps="83311"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_mem_ABot_then_cl_sat&#39;vc" expl="VC for not_mem_ABot_then_cl_sat">
 <proof prover="2" obsolete="true"><result status="valid" time="0.45" steps="71765"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2630026"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_mem_ABot_then_cl_sat&#39;vc.0" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="303731"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2813596"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_cl_mem_ABot_in_algorithmA">
 <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="47819"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2639108"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc" expl="VC for sat_cl_not_ABot_in_algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1944141"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="109105"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1560877"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1230007"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="82824"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.0.0" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1807845"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="48822"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.0.1" expl="variant decrease">
   <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="50168"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.1" expl="precondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5531626"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="39994"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="690778"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="45439"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2079401"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.3" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.52" steps="70411"/></proof>
  </goal>
  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.4" expl="precondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="268610"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2606500"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.4.0" expl="precondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.85" steps="110275"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="993822"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.5" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="46826"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2789861"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.6" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="46858"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="818731"/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="50"/></proof>
  </goal>
  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147825"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2248869"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="153255"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="253"/></proof>
   </goal>
   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140615"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="880666"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist,c">
    <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0" expl="postcondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="42005"/></proof>
     </goal>
     <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106154"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="929874"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="42003"/></proof>
      </goal>
      <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105999"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1029907"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="39773"/></proof>
       </goal>
       <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106223"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1061671"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="40519"/></proof>
        </goal>
        <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106716"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="865107"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="43749"/></proof>
         </goal>
         <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="106006"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="912106"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.0" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="46095"/></proof>
          </goal>
          <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="105660"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="928498"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.0" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="46125"/></proof>
           </goal>
           <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="136498"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="962932"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145763"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="973193"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" arg1="((removeFromList (s, p) clauselist) = Nil)">
             <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.0" expl="asserted formula">
             <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="52764"/></proof>
             </goal>
             <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129358"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1345953"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist">
              <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0" expl="postcondition">
              <transf name="instantiate" arg1="Hinst" arg2="(removeFromList (s, p) clauselist)">
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0" expl="postcondition">
               <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p) c)">
                <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0.0" expl="postcondition">
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129918"/></proof>
                <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1521203"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0.0.0" expl="destruct premise">
                 <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="48126"/></proof>
                 </goal>
                 <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0.0.1" expl="postcondition">
                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134590"/></proof>
                 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1473103"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 <transf name="destruct" arg1="Hinst">
                  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0.0.1.0" expl="destruct premise">
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="141926"/></proof>
                  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2630358"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  </goal>
                  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0.0.1.1" expl="postcondition">
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131010"/></proof>
                  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1482781"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="destruct" arg1="Hinst">
                   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0.0.1.1.0" expl="destruct premise">
                   <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="46832"/></proof>
                   </goal>
                   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0.0.1.1.1" expl="postcondition">
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131006"/></proof>
                   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1280359"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="destruct" arg1="Hinst">
                    <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0.0.1.1.1.0" expl="destruct premise">
                    <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="64313"/></proof>
                    </goal>
                    <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.1.0.0.0.1.1.1.1" expl="postcondition">
                    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146531"/></proof>
                    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1754256"/></proof>
                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="Requires5">
             <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.0" expl="postcondition">
             <transf name="introduce_exists" >
              <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.0.0" expl="postcondition">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112582"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1388916"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="assert" arg1="(eval_setconjunction (add ABot c) f = bot1)">
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.0.0.0" expl="asserted formula">
               <proof prover="2" obsolete="true"><result status="valid" time="0.28" steps="50009"/></proof>
               </goal>
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.0.0.0.1" expl="postcondition">
               <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="52435"/></proof>
               <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1809090"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="145826"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="966671"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="assert" arg1="((removeFromList (s, p) clauselist) = Nil)">
             <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.0" expl="asserted formula">
             <proof prover="2" obsolete="true"><result status="valid" time="0.27" steps="52882"/></proof>
             </goal>
             <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132735"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1441064"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist">
              <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0" expl="postcondition">
              <transf name="instantiate" arg1="Hinst" arg2="(removeFromList (s, p) clauselist)">
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0" expl="postcondition">
               <transf name="instantiate" arg1="Hinst" arg2="(add (convertRStoAF p) c)">
                <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0.0" expl="postcondition">
                <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="129628"/></proof>
                <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1539180"/></proof>
                <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                <transf name="destruct" arg1="Hinst">
                 <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0.0.0" expl="destruct premise">
                 <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="48137"/></proof>
                 </goal>
                 <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0.0.1" expl="postcondition">
                 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134292"/></proof>
                 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1529740"/></proof>
                 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                 <transf name="destruct" arg1="Hinst">
                  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0.0.1.0" expl="destruct premise">
                  <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="48376"/></proof>
                  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2512055"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  </goal>
                  <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0.0.1.1" expl="postcondition">
                  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130919"/></proof>
                  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1528500"/></proof>
                  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                  <transf name="destruct" arg1="Hinst">
                   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0.0.1.1.0" expl="destruct premise">
                   <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="46850"/></proof>
                   </goal>
                   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0.0.1.1.1" expl="postcondition">
                   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130725"/></proof>
                   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1439991"/></proof>
                   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                   <transf name="destruct" arg1="Hinst">
                    <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0.0.1.1.1.0" expl="destruct premise">
                    <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="65474"/></proof>
                    </goal>
                    <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.1.0.0.0.1.1.1.1" expl="postcondition">
                    <proof prover="2" obsolete="true"><result status="valid" time="0.61" steps="102563"/></proof>
                    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1090033"/></proof>
                    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="Requires5">
             <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.0" expl="postcondition">
             <transf name="introduce_exists" >
              <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.0.0" expl="postcondition">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108867"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1368806"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="assert" arg1="(eval_setconjunction (add ABot c) f = bot1)">
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.0.0.0" expl="asserted formula">
               <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="50214"/></proof>
               </goal>
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.1.0.1.1.1.1.1.1.1.1.0.0.1" expl="postcondition">
               <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122899"/></proof>
               <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1517527"/></proof>
               <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108254"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.20" steps="989"/></proof>
   </goal>
   <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128109"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2266382"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist,clauselist,c">
    <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132541"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2276406"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="destruct" arg1="Hinst">
     <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.0" expl="destruct premise">
     <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="42532"/></proof>
     </goal>
     <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1" expl="postcondition">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131031"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2260753"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.0" expl="destruct premise">
      <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="42530"/></proof>
      </goal>
      <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1" expl="postcondition">
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131016"/></proof>
      <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2259690"/></proof>
      <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
      <transf name="destruct" arg1="Hinst">
       <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.0" expl="destruct premise">
       <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="40311"/></proof>
       </goal>
       <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131273"/></proof>
       <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2266516"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="destruct" arg1="Hinst">
        <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="41042"/></proof>
        </goal>
        <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="131387"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2267589"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="valid" time="0.20" steps="44472"/></proof>
         </goal>
         <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118996"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1898298"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.0" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="46807"/></proof>
          </goal>
          <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="128443"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2180698"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.0" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="46826"/></proof>
           </goal>
           <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="149817"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2250509"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.0" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138542"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2324503"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="Requires5">
             <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.0.0" expl="postcondition">
             <transf name="introduce_exists" >
              <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.0.0.0" expl="postcondition">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="142734"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2288108"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="assert" arg1="(eval_setconjunction (add ABot c) f = bot1)">
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.0.0.0.0" expl="asserted formula">
               <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="54290"/></proof>
               </goal>
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.0.0.0.1" expl="postcondition">
               <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="235683"/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.37" steps="1802"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143987"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2397479"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="Requires5">
             <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.1.0" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144088"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2400588"/></proof>
             <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
             <transf name="introduce_exists" >
              <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.1.0.0" expl="postcondition">
              <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143577"/></proof>
              <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2400328"/></proof>
              <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
              <transf name="assert" arg1="(eval_setconjunction (add ABot c) f = bot1)">
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.1.0.0.0" expl="asserted formula">
               <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="53766"/></proof>
               </goal>
               <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc.7.3.0.1.1.1.1.1.1.1.1.0.0.1" expl="postcondition">
               <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="305947"/></proof>
               <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="127"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mem_ABot_then_cl_unsat&#39;vc" expl="VC for mem_ABot_then_cl_unsat">
 <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="282452"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2545937"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="mem_ABot_then_cl_unsat&#39;vc.0" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="55104"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2689387"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic">
 <proof prover="2" obsolete="true"><result status="valid" time="0.42" steps="61684"/></proof>
 </goal>
 <goal name="horn_sat_completeness">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2148638"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="45384"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2633015"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="horn_sat_completeness.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2133092"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119433"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2633336"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="sat_cl_not_ABot_in_algorithmA" arg2="clauselist,clauselist">
   <goal name="horn_sat_completeness.0.0">
   <transf name="instantiate" arg1="Hinst" arg2="(singleton ATop)">
    <goal name="horn_sat_completeness.0.0.0">
    <proof prover="2" obsolete="true"><result status="valid" time="0.22" steps="47089"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn_unsat_completeness">
 <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="45307"/></proof>
 <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="10684499"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="not_mem_ABot_then&#39;vc" expl="VC for not_mem_ABot_then">
 <proof prover="2"><result status="timeout" time="1.00" steps="118025"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="2584915"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="not_mem_ABot_then&#39;vc.0" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.16" steps="46685"/></proof>
  </goal>
  <goal name="unsat_cl_ABot_in_algorithmA&#39;vc.4" expl="precondition">
  <proof prover="2"><result status="timeout" time="1.00" steps="163106"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="1917859"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="unsat_cl_ABot_in_algorithmA&#39;vc.4.0" expl="precondition">
   <proof prover="2"><result status="timeout" time="1.00" steps="138671"/></proof>
   <proof prover="3"><result status="timeout" time="1.00" steps="1906890"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsat_cl_ABot_in_algorithmA&#39;vc.3" expl="precondition">
  <proof prover="2"><result status="valid" time="0.41" steps="70104"/></proof>
  </goal>
  <goal name="unsat_cl_ABot_in_algorithmA&#39;vc.5" expl="precondition">
  <proof prover="2"><result status="valid" time="0.16" steps="46653"/></proof>
  </goal>
  <goal name="unsat_cl_ABot_in_algorithmA&#39;vc.7" expl="postcondition">
  <proof prover="2"><result status="timeout" time="1.00" steps="153471"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="1945571"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unsat_cl_ABot_in_algorithmA&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="valid" time="0.17" steps="45239"/></proof>
  </goal>
  <goal name="unsat_cl_ABot_in_algorithmA&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.10" steps="39856"/></proof>
  </goal>
  <goal name="unsat_cl_ABot_in_algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.23" steps="50019"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hornify">
 <goal name="eval_union&#39;vc" expl="VC for eval_union">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3682481"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="135299"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="5192661"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="eval_union&#39;vc.0" expl="precondition">
  <proof prover="2"><result status="valid" time="0.08" steps="31813"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.1" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.18" steps="38448"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.2" expl="assertion">
  <proof prover="2" timelimit="5"><result status="valid" time="1.48" steps="127180"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="838492"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.3" expl="assertion">
  <proof prover="2"><result status="valid" time="0.14" steps="35797"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="eval_union&#39;vc.4" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.45" steps="49353"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="union_eval_empty">
 <proof prover="2"><result status="valid" time="0.19" steps="39401"/></proof>
 </goal>
 <goal name="union_eval_samesingleton">
 <proof prover="2"><result status="valid" time="0.23" steps="41838"/></proof>
 </goal>
 <goal name="union_eval_diffsingleton">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="532592"/></proof>
 <proof prover="2"><result status="valid" time="0.30" steps="49593"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="add_then_mem_convertPLtoAF">
 <proof prover="2"><result status="valid" time="0.14" steps="38389"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma&#39;vc" expl="VC for convertConjunctionToSet_lemma">
 <proof prover="2"><result status="valid" time="0.19" steps="41459"/></proof>
 </goal>
 <goal name="convertConjunctionToSet_lemma1&#39;vc" expl="VC for convertConjunctionToSet_lemma1">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3699636"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="163934"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="convertConjunctionToSet_lemma1&#39;vc.0" expl="VC for convertConjunctionToSet_lemma1">
  <transf name="unfold" arg1="op_and">
   <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma1">
   <transf name="destruct_term" arg1="phi">
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2951384"/></proof>
    <proof prover="2"><result status="valid" time="0.20" steps="42394"/></proof>
    <proof prover="4"><result status="valid" time="0.04" steps="232"/></proof>
    </goal>
    <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4350887"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="119188"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="subst" arg1="phi">
     <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1">
     <transf name="compile_match" >
      <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1">
      <transf name="instantiate" arg1="convertAFtoPL&#39;spec" arg2="y">
       <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
       <transf name="destruct" arg1="Hinst">
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0" expl="destruct premise">
        <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="21860636"/></proof>
        <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1313291"/></proof>
        <proof prover="4" timelimit="5"><result status="valid" time="4.28" steps="2879"/></proof>
        <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="(CPL x)">
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="166990"/></proof>
         <proof prover="4"><result status="valid" time="0.14" steps="717"/></proof>
         <transf name="compile_match" >
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.0.0.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="100188"/></proof>
          <proof prover="4"><result status="valid" time="0.14" steps="717"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4336013"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="173612"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="compile_match" >
         <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0" expl="VC for convertConjunctionToSet_lemma1">
         <transf name="destruct" arg1="Hinst">
          <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0" expl="VC for convertConjunctionToSet_lemma1">
          <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4123852"/></proof>
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="174336"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct_term" arg1="x">
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="VC for convertConjunctionToSet_lemma1">
           <proof prover="2"><result status="valid" time="0.21" steps="43153"/></proof>
           </goal>
           <goal name="convertConjunctionToSet_lemma1&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="VC for convertConjunctionToSet_lemma1">
           <proof prover="2"><result status="valid" time="0.18" steps="40249"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4229769"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117470"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="introduce_premises" >
  <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4285867"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115962"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="destruct" arg1="H">
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4275269"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114059"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3894993"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="114077"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4312540"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="115531"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="subst" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.0.0.0.0.0" expl="postcondition">
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="113685"/></proof>
       <proof prover="4"><result status="valid" time="0.13" steps="725"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1" expl="VC for convertConjunctionToSet_lemma_differs_singleton_atop">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3737655"/></proof>
   <proof prover="2"><result status="valid" time="0.74" steps="79525"/></proof>
   <proof prover="4"><result status="valid" time="0.07" steps="188"/></proof>
   <transf name="split_vc" >
    <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3739516"/></proof>
    <proof prover="2"><result status="valid" time="0.76" steps="79507"/></proof>
    <proof prover="4"><result status="valid" time="0.07" steps="188"/></proof>
    <transf name="instantiate" arg1="convertConjunctionToSet&#39;def" arg2="phi">
     <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3738226"/></proof>
     <proof prover="2"><result status="valid" time="0.74" steps="80329"/></proof>
     <proof prover="4"><result status="valid" time="0.07" steps="197"/></proof>
     <transf name="subst" arg1="phi">
      <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="convertConjunctionToSet_lemma_differs_singleton_atop&#39;vc.0.1.0.0.0.0" expl="postcondition">
       <proof prover="2"><result status="valid" time="0.22" steps="44117"/></proof>
       <proof prover="4"><result status="valid" time="0.07" steps="198"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="convertConjunctionToSet_lemma_subset&#39;vc" expl="VC for convertConjunctionToSet_lemma_subset">
 <proof prover="2"><result status="valid" time="0.22" steps="45975"/></proof>
 </goal>
 <goal name="eval_equivalent&#39;vc" expl="VC for eval_equivalent">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146199"/></proof>
 <proof prover="4"><result status="valid" time="0.41" steps="2519"/></proof>
 </goal>
 <goal name="convertToSet&#39;vc" expl="VC for convertToSet">
 <proof prover="2"><result status="valid" time="0.18" steps="40677"/></proof>
 </goal>
 <goal name="convertToList&#39;vc" expl="VC for convertToList">
 <proof prover="2"><result status="valid" time="0.21" steps="46567"/></proof>
 </goal>
</theory>
<theory name="FindOneSubset">
 <goal name="findOneSubset_if_only_if_some">
 <proof prover="2"><result status="valid" time="0.10" steps="25393"/></proof>
 </goal>
 <goal name="findOneSubset_mem_subset">
 <proof prover="2"><result status="valid" time="0.10" steps="25636"/></proof>
 </goal>
 <goal name="findOneSubset_nil">
 <proof prover="2"><result status="timeout" time="1.00" steps="309930"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="4194173"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="findOneSubset_nil.0">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="308592"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_nil.0.0">
   <transf name="destruct" arg1="Hinst">
    <goal name="findOneSubset_nil.0.0.0">
    <proof prover="2"><result status="valid" time="0.06" steps="22271"/></proof>
    </goal>
    <goal name="findOneSubset_nil.0.0.1">
    <proof prover="2"><result status="valid" time="0.13" steps="25663"/></proof>
    <proof prover="3"><result status="valid" time="0.05" steps="129667"/></proof>
    <proof prover="4"><result status="valid" time="0.02" steps="59"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="findOneSubset_notsubset">
 <proof prover="2"><result status="timeout" time="1.00" steps="285127"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="4002366"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="findOneSubset_notsubset.0">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="281406"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="instantiate" arg1="findOneSubset_def" arg2="cl,c">
   <goal name="findOneSubset_notsubset.0.0">
   <transf name="destruct" arg1="Hinst">
    <goal name="findOneSubset_notsubset.0.0.0">
    <proof prover="2"><result status="valid" time="0.06" steps="22406"/></proof>
    </goal>
    <goal name="findOneSubset_notsubset.0.0.1">
    <proof prover="2"><result status="valid" time="0.09" steps="24253"/></proof>
    <proof prover="3"><result status="valid" time="0.05" steps="127031"/></proof>
    <proof prover="4"><result status="valid" time="0.01" steps="20"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="RemoveFromList">
 <goal name="removeFromList_numocc">
 <proof prover="2" obsolete="true"><result status="unknown" time="0.17" steps="29290"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2442028"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_numocc.0">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="93967"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3189519"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_numocc.0.0">
   <proof prover="2"><result status="valid" time="0.30" steps="55420"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_numocc_2">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="156739"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3687063"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_numocc_2.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_numocc_2.0.0">
   <proof prover="2"><result status="valid" time="0.33" steps="59711"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_length">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="86137"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="4036303"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_length.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="removeFromList_length.0.0">
   <proof prover="2"><result status="valid" time="0.37" steps="67341"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat_not_mem_l1">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="161696"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3563662"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_concat_not_mem_l1.0">
  <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="207316"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="induction_arg_ty_lex" arg1="l1">
   <goal name="removeFromList_concat_not_mem_l1.0.0">
   <proof prover="2"><result status="valid" time="0.16" steps="34794"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_concat">
 <proof prover="2"><result status="valid" time="0.14" steps="31554"/></proof>
 </goal>
 <goal name="removeFromList_permut">
 <proof prover="2"><result status="valid" time="0.16" steps="33226"/></proof>
 </goal>
 <goal name="removeFromList_permut_concat">
 <proof prover="2"><result status="valid" time="0.31" steps="51914"/></proof>
 </goal>
 <goal name="removeFromList_elem_not_in_list">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="257973"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3308295"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="removeFromList_elem_not_in_list.0">
  <transf name="induction_arg_ty_lex" arg1="l">
   <goal name="removeFromList_elem_not_in_list.0.0">
   <proof prover="2"><result status="valid" time="0.12" steps="30810"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_sublist">
 <proof prover="2"><result status="valid" time="0.15" steps="32669"/></proof>
 </goal>
</theory>
<theory name="Converts">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF">
 <proof prover="2"><result status="valid" time="0.15" steps="28390"/></proof>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF">
 <proof prover="2"><result status="valid" time="0.13" steps="27533"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL">
 <proof prover="2"><result status="valid" time="0.13" steps="28204"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS">
 <proof prover="2"><result status="valid" time="0.14" steps="28169"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation">
 <proof prover="2"><result status="valid" time="0.10" steps="26339"/></proof>
 <proof prover="4"><result status="valid" time="0.02" steps="23"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781563"/></proof>
 <proof prover="1" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138587"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
 <transf name="split_vc" >
  <goal name="convertAFtoPL_evaluation.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="780000"/></proof>
  <proof prover="1" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="137263"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4"><result status="valid" time="0.02" steps="75"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PLtoAF_AFtoPL">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="821519"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1508373"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="PLtoAF_AFtoPL.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="822680"/></proof>
  <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1520647"/></proof>
  <transf name="unfold" arg1="convertPLtoAF">
   <goal name="PLtoAF_AFtoPL.0.0">
   <transf name="compile_match" >
    <goal name="PLtoAF_AFtoPL.0.0.0">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="823221"/></proof>
    <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1498044"/></proof>
    <transf name="destruct_term" arg1="x">
     <goal name="PLtoAF_AFtoPL.0.0.0.0">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263202"/></proof>
     <proof prover="4"><result status="valid" time="0.04" steps="169"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.1">
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="261347"/></proof>
     <proof prover="4"><result status="valid" time="0.02" steps="28"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
     <goal name="PLtoAF_AFtoPL.0.0.0.2">
     <proof prover="2"><result status="valid" time="0.06" steps="23819"/></proof>
     <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779183"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271610"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="RStoAF_AFtoRS.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="779102"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="271473"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="convertRStoAF">
   <goal name="RStoAF_AFtoRS.0.0">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="261706"/></proof>
   <proof prover="4"><result status="valid" time="0.12" steps="616"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781407"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="297812"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="AFtoRS_RStoAF.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="781740"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="263101"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="convertAFtoRS">
   <goal name="AFtoRS_RStoAF.0.0">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="782059"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="265801"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="destruct_term" arg1="x">
    <goal name="AFtoRS_RStoAF.0.0.0">
    <proof prover="2"><result status="valid" time="0.13" steps="27759"/></proof>
    </goal>
    <goal name="AFtoRS_RStoAF.0.0.1">
    <proof prover="2"><result status="valid" time="0.10" steps="26689"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SAT">
 <goal name="rs_unsat_then_not_sat">
 <proof prover="2"><result status="valid" time="0.15" steps="33639"/></proof>
 </goal>
 <goal name="af_unsat_then_not_sat">
 <proof prover="2"><result status="valid" time="0.15" steps="33835"/></proof>
 </goal>
 <goal name="set_unsat_then_not_sat">
 <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="20151437"/></proof>
 <proof prover="2"><result status="valid" time="0.15" steps="34038"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4197502"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132862"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.17" steps="37049"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.14" steps="36075"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="13590241"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="921565"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="case" arg1="(cardinal c &gt; 1)">
   <goal name="all_set_without_bot_eval_set&#39;vc.2.0" expl="true case (postcondition)">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3254606"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="140125"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="eval_setconjunction_pick" arg2="val_all_top">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0" expl="true case (postcondition)">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3249794"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="121958"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="Hinst" arg2="c">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0" expl="true case (postcondition)">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3268767"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="104964"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="destruct" arg1="Hinst">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.0" expl="destruct premise">
      <proof prover="2"><result status="valid" time="0.13" steps="33864"/></proof>
      <proof prover="3"><result status="valid" time="0.04" steps="191826"/></proof>
      <proof prover="4"><result status="valid" time="0.02" steps="27"/></proof>
      </goal>
      <goal name="all_set_without_bot_eval_set&#39;vc.2.0.0.0.1" expl="true case (postcondition)">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15519639"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146920"/></proof>
      <proof prover="4"><result status="valid" time="0.94" steps="1288"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="all_set_without_bot_eval_set&#39;vc.2.1" expl="false case (postcondition)">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="15027764"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="778508"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="case" arg1="(cardinal c = 1)">
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0" expl="false case (true case. postcondition)">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="16981320"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="799537"/></proof>
    <proof prover="4" timelimit="5"><result status="valid" time="4.67" steps="3198"/></proof>
    <transf name="destruct" arg1="H">
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0" expl="false case (true case. postcondition)">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3374702"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="330559"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="2.00"/></proof>
     <transf name="instantiate" arg1="eval_setconjunction_singleton" arg2="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0.0" expl="false case (true case. postcondition)">
      <transf name="instantiate" arg1="Hinst" arg2="c">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.0.0.0" expl="false case (true case. postcondition)">
       <proof prover="2"><result status="valid" time="0.14" steps="33736"/></proof>
       <proof prover="4"><result status="valid" time="0.05" steps="33"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1" expl="false case (true case. postcondition)">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3184553"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="130121"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="unfold" arg1="val_all_top">
      <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0" expl="false case (true case. postcondition)">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="8757046"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="348184"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="assert" arg1="(exists o. o = pick c)">
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.0" expl="asserted formula">
       <proof prover="2"><result status="valid" time="0.16" steps="30433"/></proof>
       </goal>
       <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1" expl="false case (true case. postcondition)">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1890499"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="75498"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="introduce_exists" >
        <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0" expl="false case (true case. postcondition)">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1846040"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="76460"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="instantiate" arg1="eval_setconjunction_singleton" arg2="(fun (_:i1) -&gt; top1)">
         <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0" expl="false case (true case. postcondition)">
         <transf name="instantiate" arg1="Hinst" arg2="c">
          <goal name="all_set_without_bot_eval_set&#39;vc.2.1.0.1.0.1.0.0.0" expl="false case (true case. postcondition)">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="112131"/></proof>
          <proof prover="4"><result status="valid" time="0.27" steps="1031"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="all_set_without_bot_eval_set&#39;vc.2.1.1" expl="false case (postcondition)">
    <proof prover="2"><result status="valid" time="0.16" steps="34913"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set">
 <proof prover="2"><result status="valid" time="0.19" steps="39634"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set&#39;vc" expl="VC for subset_of_satisfiable_set">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3784125"/></proof>
 <proof prover="2"><result status="valid" time="0.24" steps="44595"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="subset_of_satisfiable_set&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.18" steps="37083"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2466309"/></proof>
  <proof prover="2"><result status="valid" time="0.17" steps="36064"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.2" expl="precondition">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1571077"/></proof>
  <proof prover="2"><result status="valid" time="0.20" steps="41508"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3557374"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="247303"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="225767"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="satisfiable_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2114374"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134019"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="satisfiable_clause.0">
  <transf name="induction_arg_ty_lex" arg1="clauselist">
   <goal name="satisfiable_clause.0.0">
   <proof prover="2"><result status="valid" time="0.15" steps="37510"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3908768"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="478857"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="sublist_is_satisfiable_clauselist.0">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4268308"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="477218"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_satisfiable_clauselist" arg2="in" arg3="H">
   <goal name="sublist_is_satisfiable_clauselist.0.0">
   <transf name="unfold" arg1="is_satisfiable_clauselist">
    <goal name="sublist_is_satisfiable_clauselist.0.0.0">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4136161"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="359166"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="sublist_is_satisfiable_clauselist.0.0.0.0">
     <transf name="exists" arg1="f">
      <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0">
      <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="21654367"/></proof>
      <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1948466"/></proof>
      <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="destruct_term" arg1="clauselist">
       <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0">
       <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="19244217"/></proof>
       <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="3003363"/></proof>
       <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
       <transf name="induction_arg_ty_lex" arg1="sublist">
        <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1410552"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120846"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="split_vc" >
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0.0.0">
         <proof prover="2"><result status="valid" time="0.13" steps="36196"/></proof>
         </goal>
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.0.0.1">
         <proof prover="2"><result status="valid" time="0.26" steps="49971"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1">
       <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="4439115"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="387133"/></proof>
       <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <transf name="induction_arg_ty_lex" arg1="sublist">
        <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1.0">
        <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1388425"/></proof>
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="181045"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="split_vc" >
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1.0.0">
         <proof prover="2"><result status="valid" time="0.13" steps="36440"/></proof>
         </goal>
         <goal name="sublist_is_satisfiable_clauselist.0.0.0.0.0.1.0.1">
         <proof prover="2"><result status="valid" time="0.24" steps="46718"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sat_cl_bot_right">
 <proof prover="2"><result status="valid" time="0.25" steps="46888"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2729842"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="sat_cl_bot_left">
 <proof prover="2"><result status="valid" time="0.33" steps="55642"/></proof>
 </goal>
 <goal name="not_unsat_set_sat_set">
 <proof prover="2"><result status="valid" time="0.15" steps="34823"/></proof>
 </goal>
 <goal name="not_unsat_clause_sat_clause">
 <proof prover="2"><result status="valid" time="0.14" steps="34347"/></proof>
 </goal>
 <goal name="not_unsat_sat">
 <proof prover="2"><result status="valid" time="0.14" steps="34382"/></proof>
 </goal>
 <goal name="not_sat_unsat">
 <proof prover="2"><result status="valid" time="0.14" steps="34307"/></proof>
 </goal>
 <goal name="unsat_then_bot">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120908"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="4810546"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsat_then_bot.0">
  <proof prover="0" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="799617"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="unfold" arg1="eval_rightside" arg2="in" arg3="H">
   <goal name="unsat_then_bot.0.0">
   <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="120557"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="instantiate" arg1="H" arg2="val_all_top">
    <goal name="unsat_then_bot.0.0.0">
    <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="1530254"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="3775470"/></proof>
    <proof prover="4" timelimit="5"><result status="valid" time="3.98" steps="3030"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_unsat_then_p_is_bot">
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="127173"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="4854228"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="is_unsat_then_p_is_bot.0">
  <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="107479"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="unfold" arg1="is_unsatisfiable_clause" arg2="in" arg3="H">
   <goal name="is_unsat_then_p_is_bot.0.0">
   <proof prover="0" timelimit="5" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="712830"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="unfold" arg1="is_satisfiable_clause" arg2="in" arg3="H">
    <goal name="is_unsat_then_p_is_bot.0.0.0">
    <transf name="unfold" arg1="eval_clause" arg2="in" arg3="H">
     <goal name="is_unsat_then_p_is_bot.0.0.0.0">
     <proof prover="2" timelimit="5"><result status="valid" time="0.18" steps="37359"/></proof>
     <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="202790"/></proof>
     <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unsat_permut">
 <proof prover="2"><result status="valid" time="0.20" steps="38498"/></proof>
 </goal>
</theory>
<theory name="Horn">
 <goal name="length_equal_listset_to_list_fset">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="3665476"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="227829"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="length_equal_listset_to_list_fset.0">
  <transf name="induction_arg_ty_lex" arg1="cl">
   <goal name="length_equal_listset_to_list_fset.0.0">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="143538"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.11" steps="447"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="removeFromList_prog&#39;vc" expl="VC for removeFromList_prog">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2344047"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.63" steps="84015"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1909438"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146393"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="63747"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.0.0" expl="variant decrease">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1910792"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.36" steps="51061"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.0.1" expl="variant decrease">
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.0.1.0" expl="variant decrease">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2266318"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139946"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.0.1.0.0" expl="variant decrease">
     <proof prover="2" obsolete="true"><result status="valid" time="0.38" steps="63677"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="6" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2138125"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="134305"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.1.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2088011"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="138834"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.1.0.0" expl="precondition">
    <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="5169960"/></proof>
    <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="569973"/></proof>
    <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="induction_arg_ty_lex" arg1="clauselist">
     <goal name="algorithmA&#39;vc.1.0.0.0" expl="VC for algorithmA">
     <proof prover="2" obsolete="true"><result status="valid" time="0.25" steps="58849"/></proof>
     <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="96"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1761229"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139206"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.2.0" expl="precondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="48871"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="1.02" steps="133675"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2760272"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.88" steps="104684"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2527875"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="precondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="117687"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1820099"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.5.0" expl="precondition">
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="534395"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1821571"/></proof>
   <proof prover="4" timelimit="5" obsolete="true"><result status="valid" time="2.77" steps="2874"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.6" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2094926"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146051"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2511909"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.6.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="132051"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2608966"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.04" steps="133"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.6.1" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00" steps="4724996"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="122747"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2858543"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.6.1.0" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118768"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2814525"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist">
     <goal name="algorithmA&#39;vc.6.1.0.0" expl="postcondition">
     <transf name="instantiate" arg1="Hinst" arg2="(listset_to_listfset clauselist)">
      <goal name="algorithmA&#39;vc.6.1.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
       <goal name="algorithmA&#39;vc.6.1.0.0.0.0" expl="postcondition">
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.6.1.0.0.0.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="45378"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="110186"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2765509"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="45376"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="108961"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2850194"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.1.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="43492"/></proof>
          </goal>
          <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="110731"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2906070"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.1.1.0" expl="destruct premise">
           <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="43880"/></proof>
           </goal>
           <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="110711"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2878935"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.1.1.1.0" expl="destruct premise">
            <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="47881"/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.1.1.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="110604"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2859123"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.1.1.1.1.0" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="valid" time="0.19" steps="47549"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2895887"/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.03" steps="42"/></proof>
             </goal>
             <goal name="algorithmA&#39;vc.6.1.0.0.0.0.1.1.1.1.1.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="valid" time="0.41" steps="64126"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="algorithmA&#39;vc.6.1.1" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="118216"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2800829"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <transf name="instantiate" arg1="algorithmA_spec&#39;def" arg2="full_clauselist">
     <goal name="algorithmA&#39;vc.6.1.1.0" expl="postcondition">
     <transf name="instantiate" arg1="Hinst" arg2="(listset_to_listfset clauselist)">
      <goal name="algorithmA&#39;vc.6.1.1.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(to_fset c)">
       <goal name="algorithmA&#39;vc.6.1.1.0.0.0" expl="postcondition">
       <transf name="destruct" arg1="Hinst">
        <goal name="algorithmA&#39;vc.6.1.1.0.0.0.0" expl="destruct premise">
        <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="46095"/></proof>
        </goal>
        <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1" expl="postcondition">
        <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133594"/></proof>
        <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2856832"/></proof>
        <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
        <transf name="destruct" arg1="Hinst">
         <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.0" expl="destruct premise">
         <proof prover="2" obsolete="true"><result status="valid" time="0.13" steps="46093"/></proof>
         </goal>
         <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.1" expl="postcondition">
         <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="124023"/></proof>
         <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2784749"/></proof>
         <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
         <transf name="destruct" arg1="Hinst">
          <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.1.0" expl="destruct premise">
          <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="44212"/></proof>
          </goal>
          <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.1.1" expl="postcondition">
          <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133056"/></proof>
          <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2846542"/></proof>
          <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
          <transf name="destruct" arg1="Hinst">
           <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.1.1.0" expl="destruct premise">
           <proof prover="2" obsolete="true"><result status="valid" time="0.12" steps="44586"/></proof>
           </goal>
           <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.1.1.1" expl="postcondition">
           <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="133055"/></proof>
           <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2742837"/></proof>
           <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
           <transf name="destruct" arg1="Hinst">
            <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.1.1.1.0" expl="destruct premise">
            <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="48780"/></proof>
            </goal>
            <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.1.1.1.1" expl="postcondition">
            <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="123376"/></proof>
            <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2665147"/></proof>
            <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
            <transf name="destruct" arg1="Hinst">
             <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.1.1.1.1.0" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="valid" time="0.33" steps="55797"/></proof>
             <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="2677178"/></proof>
             <proof prover="4" obsolete="true"><result status="valid" time="0.05" steps="181"/></proof>
             </goal>
             <goal name="algorithmA&#39;vc.6.1.1.0.0.0.1.1.1.1.1.1" expl="postcondition">
             <proof prover="2" obsolete="true"><result status="valid" time="0.32" steps="56942"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn">
 <proof prover="2" obsolete="true"><result status="valid" time="0.29" steps="55347"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1518312"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="horn&#39;vc.0" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="50672"/></proof>
  </goal>
  <goal name="horn&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="47959"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1484616"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="horn&#39;vc.2" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.21" steps="48215"/></proof>
  </goal>
  <goal name="horn&#39;vc.3" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.24" steps="50266"/></proof>
  </goal>
  <goal name="horn&#39;vc.4" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.23" steps="48237"/></proof>
  </goal>
  <goal name="horn&#39;vc.5" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.18" steps="47915"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
